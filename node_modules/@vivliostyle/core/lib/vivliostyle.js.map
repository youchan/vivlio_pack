{
  "version": 3,
  "sources": ["../../../node_modules/fast-diff/diff.js", "../src/vivliostyle.ts", "../src/vivliostyle/constants.ts", "../src/vivliostyle/logging.ts", "../src/vivliostyle/plugin.ts", "../src/vivliostyle/profile.ts", "../src/vivliostyle/base.ts", "../src/vivliostyle/cfi.ts", "../src/vivliostyle/exprs.ts", "../src/vivliostyle/css.ts", "../src/vivliostyle/geometry-util.ts", "../src/vivliostyle/css-prop.ts", "../src/vivliostyle/counters.ts", "../src/vivliostyle/css-tokenizer.ts", "../src/vivliostyle/task.ts", "../src/vivliostyle/task-util.ts", "../src/vivliostyle/assets.ts", "../src/vivliostyle/net.ts", "../src/vivliostyle/css-parser.ts", "../src/vivliostyle/css-logical-util.ts", "../src/vivliostyle/sizing.ts", "../src/vivliostyle/break.ts", "../src/vivliostyle/diff.ts", "../src/vivliostyle/types.ts", "../src/vivliostyle/vtree.ts", "../src/vivliostyle/page-floats.ts", "../src/vivliostyle/footnotes.ts", "../src/vivliostyle/display.ts", "../src/vivliostyle/layout-helper.ts", "../src/vivliostyle/break-position.ts", "../src/vivliostyle/layout-processor.ts", "../src/vivliostyle/layout-retryers.ts", "../src/vivliostyle/layout-util.ts", "../src/vivliostyle/shared.ts", "../src/vivliostyle/matchers.ts", "../src/vivliostyle/css-cascade.ts", "../src/vivliostyle/text-polyfill.ts", "../src/vivliostyle/pseudo-element.ts", "../src/vivliostyle/layout.ts", "../src/vivliostyle/repetitive-element.ts", "../src/vivliostyle/table.ts", "../src/vivliostyle/math-util.ts", "../src/vivliostyle/columns.ts", "../src/vivliostyle/css-styler.ts", "../src/vivliostyle/css-validator.ts", "../src/vivliostyle/font.ts", "../src/vivliostyle/page-master.ts", "../src/vivliostyle/css-page.ts", "../src/vivliostyle/scripts.ts", "../src/vivliostyle/urls.ts", "../src/vivliostyle/vgen.ts", "../src/vivliostyle/xml-doc.ts", "../src/vivliostyle/ops.ts", "../src/vivliostyle/toc.ts", "../src/vivliostyle/epub.ts", "../src/vivliostyle/adaptive-viewer.ts", "../src/vivliostyle/core-viewer.ts", "../src/vivliostyle/print.ts"],
  "sourcesContent": ["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n", "/*\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nexport * from \"./vivliostyle/constants\";\nexport * from \"./vivliostyle/plugin\";\nexport * from \"./vivliostyle/profile\";\nexport * from \"./vivliostyle/core-viewer\";\nexport * from \"./vivliostyle/print\";\nexport * from \"./vivliostyle/assets\";\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: (p1: ErrorInfo) => void } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listener = this.listeners[level];\n    if (listener) {\n      listener(args);\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    this.listeners[level] = listener;\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Val,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n * @param atFirst If true, the function is registered at the first of the hook array.\n */\nexport function registerHook(\n  name: string,\n  fn: (...p1) => any,\n  atFirst?: boolean,\n): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    if (atFirst) {\n      hooksForName.unshift(fn);\n    } else {\n      hooksForName.push(fn);\n    }\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\nexport function asString(v: any): string | null {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap: { [key: string]: string[] } = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  return CSS.supports(prefix + prop, \"unset\");\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n    case \"template\":\n    case \"ua-list-item-count\":\n    case \"x-first-pseudo\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = [prefix + prop];\n      propNameMap[prop] = prefixed;\n      return prefixed;\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  const elemStyle = (elem as HTMLElement)?.style;\n  if (!elemStyle) {\n    return;\n  }\n  if (prop.startsWith(\"--\")) {\n    elemStyle.setProperty(prop, value || \" \");\n    return;\n  }\n  const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n  if (!prefixedPropertyNames) {\n    return;\n  }\n  for (const prefixed of prefixedPropertyNames) {\n    switch (prefixed) {\n      case \"-webkit-text-combine\": // for Safari\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n        break;\n      case \"text-combine-upright\":\n        switch (value) {\n          case \"all\":\n            // workaround for Chrome 93 bug https://crbug.com/1242755\n            elemStyle.setProperty(\"text-indent\", \"0\");\n            break;\n        }\n        break;\n    }\n    elemStyle.setProperty(prefixed, value);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /** @override */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set: { [key: string]: boolean } = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      if (!list.includes(listener)) {\n        list.push(listener);\n      }\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport const mediaTags = {\n  audio: true,\n  canvas: true,\n  embed: true,\n  iframe: true,\n  img: true,\n  math: true,\n  object: true,\n  picture: true,\n  svg: true,\n  video: true,\n};\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /** @override */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /** @override */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /** @override */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      const movedNode = elem.ownerDocument.getElementById(this.id);\n      if (movedNode) {\n        pos.node = movedNode;\n      } else {\n        Logging.logger.warn(\"E_CFI_ID_MISMATCH:\", this.id);\n      }\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /** @override */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n    case \"lh\":\n    case \"rlh\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRootFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit?.toLowerCase()) {\n    case \"rem\":\n    case \"rlh\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  lh: 20,\n  rlh: 20,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n      return !CSS.supports(\"font-size\", \"1q\");\n    case \"lh\":\n      return !CSS.supports(\"line-height\", \"1lh\");\n    case \"rem\":\n    case \"rlh\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  rootLineHeight: number | null = null;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean, vertical?: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n      const isVertical = vertical ?? this.pageVertical;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return isVertical ? vh : vw;\n        case \"vb\":\n          return isVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return isVertical ? pvh : pvw;\n        case \"pvb\":\n          return isVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    if (unit == \"lh\" || unit == \"rlh\") {\n      // FIXME: \"lh\" unit is incorrect, treated same as \"rlh\"\n      return this.rootLineHeight;\n    }\n\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= Number(req);\n        case \"max\":\n          return actual <= Number(req);\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = scope && this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /** @override */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    if (this.scope) {\n      context.storeVal(this.scope, this.key, result);\n    }\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(\n    scope: LexicalScope,\n    public val: Val,\n  ) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(\n    scope: LexicalScope,\n    public lhs: Val,\n    public rhs: Val,\n  ) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"!\";\n  }\n\n  override evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  override getOp(): string {\n    return \"-\";\n  }\n\n  override evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"&&\";\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"||\";\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"<\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"<=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \">\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \">=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"==\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"!=\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"+\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \" - \";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"*\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"/\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  override getOp(): string {\n    return \"%\";\n  }\n\n  override evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(\n    scope: LexicalScope,\n    public num: number,\n    unit: string,\n  ) {\n    super(scope);\n    this.unit = unit?.toLowerCase() ?? \"\";\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(\n    scope: LexicalScope,\n    public not: boolean,\n    public name: string,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  override isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  override evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  override evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(\n    scope: LexicalScope,\n    public val: Result,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  override evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: MediaName,\n    public value: Val,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  override dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  override evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(\n    scope: LexicalScope,\n    public index: number,\n  ) {\n    super(scope);\n  }\n\n  override appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  override expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  visitValues(values: Val[]): Val[] {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n    return null;\n  }\n\n  visitEmpty(empty: Val): Val {\n    return null;\n  }\n\n  visitSlash(slash: Val): Val {\n    return null;\n  }\n\n  visitStr(str: Str): Val {\n    return null;\n  }\n\n  visitIdent(ident: Ident): Val {\n    return null;\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    return null;\n  }\n\n  visitNum(num: Num): Val {\n    return null;\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitHexColor(color: HexColor): Val {\n    return null;\n  }\n\n  visitURL(url: URL): Val {\n    return null;\n  }\n\n  visitURange(urange: URange): Val {\n    return null;\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitCommaList(list: CommaList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitFunc(func: Func): Val {\n    this.visitValues(func.values);\n    return null;\n  }\n\n  visitExpr(expr: Expr): Val {\n    return null;\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  error: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  override visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (this.error) {\n        return [];\n      }\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  override visitEmpty(empty: Val): Val {\n    return empty;\n  }\n\n  override visitStr(str: Str): Val {\n    return str;\n  }\n\n  override visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  override visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  override visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  override visitNum(num: Num): Val {\n    return num;\n  }\n\n  override visitInt(num: Int): Val {\n    return num;\n  }\n\n  override visitHexColor(color: HexColor): Val {\n    return color;\n  }\n\n  override visitURL(url: URL): Val {\n    return url;\n  }\n\n  override visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  override visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  override visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  override visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  override visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /** @override */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return null;\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: Visitor): Val {\n    return this;\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable: { [key: string]: Ident } = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitIdent(this);\n  }\n\n  override isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(\n    public num: number,\n    unit: string,\n  ) {\n    super();\n    this.unit = unit?.toLowerCase() ?? \"\"; // units are case-insensitive in CSS\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitNumeric(this);\n  }\n\n  override isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  override toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitNum(this);\n  }\n\n  override isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class HexColor extends Val {\n  constructor(public hex: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    buf.append(this.hex);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitHexColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0]?.appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i]?.appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitSpaceList(this);\n  }\n\n  override isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(\n    public name: string,\n    public values: Val[],\n  ) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  override toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (\n      this.expr instanceof Exprs.Const ||\n      this.expr instanceof Exprs.Numeric\n    ) {\n      this.expr.appendTo(buf, 0);\n    } else {\n      buf.append(\"-epubx-expr(\");\n      this.expr.appendTo(buf, 0);\n      buf.append(\")\");\n    }\n  }\n\n  override visit(visitor: Visitor): Val {\n    return visitor.visitExpr(this);\n  }\n\n  override isExpr(): boolean {\n    return true;\n  }\n}\n\n/**\n * Custom property value, may be arbitrary token\n */\nexport class AnyToken extends Val {\n  constructor(public text: string) {\n    super();\n  }\n\n  override appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.text || \" \");\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  clip: getName(\"clip\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  discard: getName(\"discard\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  flow_root: getName(\"flow-root\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  grid: getName(\"grid\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  initial: getName(\"initial\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  keep: getName(\"keep\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  max_content: getName(\"max-content\"),\n  min_content: getName(\"min-content\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  padding_box: getName(\"padding-box\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  revert: getName(\"revert\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  snap_inline: getName(\"snap-inline\"),\n  solid: getName(\"solid\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  unset: getName(\"unset\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  \"line-height\": 2,\n  color: 3,\n};\n\nexport function isDefaultingValue(value: Val): boolean {\n  return (\n    value === ident.inherit ||\n    value === ident.initial ||\n    value === ident.revert ||\n    value === ident.unset\n  );\n}\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n\nexport function isCustomPropName(name: string): boolean {\n  return name?.length > 2 && name.startsWith(\"--\");\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(\n    public x: number,\n    public y: number,\n  ) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters, named strings, and running elements\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(\n    public readonly targetId: string,\n    public resolved: boolean,\n  ) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /** @override */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedRunningValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedRunningValues = {};\n  runningElements: NamedRunningValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /** @override */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr: number[]) => {\n      return format(arr[arr.length - 1]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /** @override */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /** @override */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n\n    this.counterStore.registerTargetCounterExpr(\n      name,\n      format,\n      expr,\n      transformedId,\n    );\n    return expr;\n  }\n\n  /** @override */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () =>\n        this.getRunningValue(this.namedStringValues, name, retrievePosition),\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS element() function\n   * https://drafts.csswg.org/css-gcpm-3/#running-elements\n   */\n  getRunningElementVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => this.getRunningValue(this.runningElements, name, retrievePosition),\n      `running-element-${retrievePosition}-${name}`,\n    );\n  }\n\n  private getRunningValue(\n    namedRunningValues: NamedRunningValues,\n    name: string,\n    retrievePosition: string,\n  ): string {\n    const runningValues = namedRunningValues[name];\n    if (!runningValues) {\n      return \"\";\n    }\n    const offsets = Object.keys(runningValues)\n      .map((a) => parseInt(a, 10))\n      .sort(Base.numberCompare);\n\n    const currentPage = this.counterStore.currentPage;\n    const pageStartOffset = currentPage.isBlankPage\n      ? currentPage.offset - 1\n      : currentPage.offset;\n    const pageLastOffset = currentPage.isBlankPage\n      ? pageStartOffset\n      : Math.max(\n          pageStartOffset,\n          ...Array.from(\n            currentPage.container.querySelectorAll(\n              `[${Base.ELEMENT_OFFSET_ATTR}]`,\n            ),\n          ).map((e) => parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10)),\n        );\n\n    let firstOffset = -1;\n    let startOffset = -1;\n    let lastOffset = -1;\n    let firstExceptOffset = -1;\n\n    for (let i = 0; i < offsets.length; i++) {\n      const offset = offsets[i];\n      const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n      const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n      if (offset > pageLastOffset) {\n        break;\n      }\n      if (offset >= pageStartOffset) {\n        if (firstOffset < 0) {\n          firstOffset = offset;\n          firstExceptOffset = -1;\n        }\n        if (startOffset < 0) {\n          if (offset === pageStartOffset) {\n            startOffset = offset;\n          } else {\n            if (offsetPrev < firstOffset) {\n              startOffset = offsetPrev;\n            }\n            // Check if the element at the offset is at beginning of the page\n            const elementAtOffset = currentPage.container.querySelector(\n              `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n            );\n            if (!elementAtOffset) {\n              // title or meta elements are not output, but should be treated as start\n              if (startOffset < 0) {\n                startOffset = offset;\n              }\n            } else {\n              let elementAtPageStartOffset =\n                currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                );\n              if (!elementAtPageStartOffset) {\n                // The element at pageStartOffset is not found when page break occured\n                // within an element, so use the ancestor element with offset 0 instead.\n                elementAtPageStartOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                );\n              }\n              if (elementAtPageStartOffset) {\n                // Find if the element at the offset is (the first child of)* the element at page start\n                for (\n                  let element = elementAtPageStartOffset;\n                  element;\n                  element = element.firstElementChild\n                ) {\n                  if (element === elementAtOffset) {\n                    startOffset = offset;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n        lastOffset = offset;\n      } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n        firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n      }\n    }\n\n    const runningValue =\n      runningValues[\n        {\n          first: firstOffset,\n          start: startOffset,\n          last: lastOffset,\n          \"first-except\": firstExceptOffset,\n        }[retrievePosition]\n      ] || \"\";\n\n    return runningValue;\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    elementOffset: number,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[elementOffset] = stringValue;\n  }\n\n  /**\n   * Set running element\n   * https://drafts.csswg.org/css-gcpm-3/#running-elements\n   */\n  setRunningElement(name: string, elementOffset: number): void {\n    const values =\n      this.runningElements[name] || (this.runningElements[name] = {});\n    values[elementOffset] = String(elementOffset);\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n  private pageCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  private targetCounterExprs: {\n    name: string;\n    expr: Exprs.Val;\n    format: (p1: number) => string;\n    transformedId: string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"] as CssCascade.CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\n      \"counter-increment\"\n    ] as CssCascade.CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    } else {\n      this.pageCounterExprs.push({ expr, format });\n    }\n  }\n  registerTargetCounterExpr(\n    name: string,\n    format: (p1: number) => string,\n    expr: Exprs.Val,\n    transformedId: string,\n  ) {\n    this.targetCounterExprs.push({ name, expr, format, transformedId });\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(\n    expr: Exprs.Val,\n    val: string,\n    document: Document,\n  ) {\n    if (expr instanceof Exprs.Native) {\n      if (expr.str == \"viv-leader\") {\n        const node = document.createElementNS(Base.NS.XHTML, \"span\");\n        node.textContent = val;\n        node.setAttribute(\"data-viv-leader\", expr.key);\n        node.setAttribute(\"data-viv-leader-value\", val);\n        return node;\n      } else if (expr.str.startsWith(\"running-element-\")) {\n        const elemList =\n          val &&\n          document.querySelectorAll(`[${Base.ELEMENT_OFFSET_ATTR}=\"${val}\"]`);\n        if (!elemList || elemList.length === 0) {\n          return null;\n        }\n        const lastElem = elemList[elemList.length - 1];\n        const clonedElem = lastElem.cloneNode(true) as HTMLElement;\n        this.fixPageCounterInRunningElement(clonedElem);\n        clonedElem.style.position = \"\";\n        clonedElem.style.visibility = \"\";\n        return clonedElem;\n      } else if (expr.str.startsWith(\"target-counter-\")) {\n        const node = document.createElementNS(Base.NS.XHTML, \"span\");\n        node.textContent = val;\n        node.setAttribute(TARGET_COUNTER_ATTR, expr.key);\n        return node;\n      }\n    }\n\n    const foundPagesCounter =\n      this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    const foundPageCounter =\n      !foundPagesCounter &&\n      this.pageCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n\n    if (foundPagesCounter || foundPageCounter) {\n      const node = document.createElementNS(Base.NS.XHTML, \"span\");\n      node.textContent = val;\n      node.setAttribute(\n        foundPagesCounter ? PAGES_COUNTER_ATTR : PAGE_COUNTER_ATTR,\n        expr.key,\n      );\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  private fixPageCounterInRunningElement(runningElem: Element): void {\n    const nodes = runningElem.querySelectorAll(`[${PAGE_COUNTER_ATTR}]`);\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGE_COUNTER_ATTR);\n      const counterExpr = this.pageCounterExprs.find((o) => o.expr.key === key);\n      const str = (counterExpr?.expr as Exprs.Native).str;\n      const counterName = str?.replace(/^page-counters?-/, \"\");\n      const counterValues = this.currentPageCounters[counterName];\n      if (counterValues) {\n        node.textContent = counterExpr.format(counterValues);\n      }\n    }\n    const targetNodes = runningElem.querySelectorAll(\n      `[${TARGET_COUNTER_ATTR}]`,\n    );\n\n    for (const node of targetNodes) {\n      node.setAttribute(TARGET_COUNTER_IN_RUNNING_ATTR, true);\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = viewport.contentContainer.childElementCount;\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n\n    const runningNodes = viewport.root.querySelectorAll(\n      `[${TARGET_COUNTER_IN_RUNNING_ATTR}]`,\n    );\n\n    for (const node of runningNodes) {\n      const key = node.getAttribute(TARGET_COUNTER_ATTR);\n      const expr = this.targetCounterExprs.find((o) => o.expr.key === key);\n      if (expr && expr.transformedId) {\n        const counterValue = this.pageCountersById[expr.transformedId];\n        if (counterValue) {\n          const arr: number[] = counterValue[expr.name];\n          if (arr) {\n            node.textContent = expr.format(arr[arr.length - 1]);\n          }\n        }\n      }\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\nexport const PAGE_COUNTER_ATTR = \"data-vivliostyle-page-counter\";\nexport const TARGET_COUNTER_ATTR = \"data-vivliostyle-target-counter\";\n\nexport const TARGET_COUNTER_IN_RUNNING_ATTR =\n  \"data-vivliostyle-target-counter-in-running\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /** @override */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"data-vivliostyle-id\") ||\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\n/** */\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code === 0 || (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  CDO,\n  CDC,\n  UNKNOWN,\n  INVALID,\n  LAST = 54,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n\n  toString(): string {\n    switch (this.type) {\n      case TokenType.O_PAR:\n        return \"(\";\n      case TokenType.C_PAR:\n        return \")\";\n      case TokenType.O_BRC:\n        return \"{\";\n      case TokenType.C_BRC:\n        return \"}\";\n      case TokenType.O_BRK:\n        return \"[\";\n      case TokenType.C_BRK:\n        return \"]\";\n      case TokenType.COMMA:\n        return \",\";\n      case TokenType.SEMICOL:\n        return \";\";\n      case TokenType.COLON:\n        return \":\";\n      case TokenType.SLASH:\n        return \"/\";\n      case TokenType.PERCENT:\n        return \"%\";\n      case TokenType.QMARK:\n        return \"?\";\n      case TokenType.PLUS:\n        return \"+\";\n      case TokenType.MINUS:\n        return \"-\";\n      case TokenType.BAR_BAR:\n        return \"||\";\n      case TokenType.AMP_AMP:\n        return \"&&\";\n      case TokenType.BANG:\n        return \"!\";\n      case TokenType.DOLLAR:\n        return \"$\";\n      case TokenType.HAT:\n        return \"^\";\n      case TokenType.BAR:\n        return \"|\";\n      case TokenType.TILDE:\n        return \"~\";\n      case TokenType.STAR:\n        return \"*\";\n      case TokenType.GT:\n        return \">\";\n      case TokenType.LT:\n        return \"<\";\n      case TokenType.EQ:\n        return \"=\";\n      case TokenType.BANG_EQ:\n        return \"!=\";\n      case TokenType.DOLLAR_EQ:\n        return \"$=\";\n      case TokenType.HAT_EQ:\n        return \"^=\";\n      case TokenType.BAR_EQ:\n        return \"|=\";\n      case TokenType.TILDE_EQ:\n        return \"~=\";\n      case TokenType.STAR_EQ:\n        return \"*=\";\n      case TokenType.GT_EQ:\n        return \">=\";\n      case TokenType.LT_EQ:\n        return \"<=\";\n      case TokenType.EQ_EQ:\n        return \"==\";\n      case TokenType.COL_COL:\n        return \"::\";\n      case TokenType.CDO:\n        return \"<!--\";\n      case TokenType.CDC:\n        return \"-->\";\n      case TokenType.NUMERIC:\n        return this.num.toString() + this.text;\n      case TokenType.NUM:\n      case TokenType.INT:\n        return this.num.toString();\n      case TokenType.AT:\n        return \"@\" + this.text;\n      case TokenType.HASH:\n        return \"#\" + this.text;\n      case TokenType.FUNC:\n        return this.text + \"(\";\n      case TokenType.CLASS:\n        return \".\" + this.text;\n      case TokenType.EOF:\n        return \"/*EOF*/\";\n      default:\n        return this.text;\n    }\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n  CDO,\n  CDC,\n}\n\nexport function makeActions(def: Action, spec: number[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.CDC,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.CDO,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(\n    public input: string,\n    public readonly handler: TokenizerHandler,\n  ) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      throw new Error(\"F_CSSTOK_INTERNAL\");\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenText = input.substring(tokenPosition, position);\n          if (isNaN(charCode)) {\n            // unclosed comment `/***[EOF]`, unclosed string `\"**[EOF]`\n            tokenType = TokenType.EOF;\n          } else {\n            // invalid, e.g, `.` in `:nth-child([.])` (Issue #597)\n            tokenType = TokenType.INVALID;\n          }\n          actions = actionsNormal;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^(\\bu\\+[?0-9a-f]+(-[?0-9a-f]+)?|,|\\s+|\\/\\*([^*]|\\*[^/])*\\*\\/)+[;}]/i.test(\n                input.substring(position - 1),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          if (input[position] !== \">\") {\n            // dashed-ident (custom property name)\n            tokenType = TokenType.IDENT;\n            actions = actionsIdent;\n          }\n          continue;\n        case Action.CDO:\n          tokenType = TokenType.CDO;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.CDC:\n          tokenType = TokenType.CDC;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              actions = actionsIdent;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /** @override */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /** @override */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /** @override */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /** @override */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(\n    public scheduler: Scheduler,\n    public name: string,\n  ) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /** @override */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /** @override */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /** @override */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /** @override */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /** @override */\n  isPending(): boolean {\n    return false;\n  }\n\n  /** @override */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /** @override */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /** @override */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /** @override */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /** @override */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /** @override */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /** @override */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(\n    public task: Task,\n    public parent: Frame<T>,\n    public name: string,\n  ) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(\n    public readonly fetch: () => Task.Result<T>,\n    opt_name?: string,\n  ) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n/** vivliostyle-viewport-screen.css */\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    box-sizing: border-box;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: flex;\n    flex: none;\n    justify-content: center;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n/** vivliostyle-viewport.css */\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n  transform-origin: left top;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-spread-container] {\n  transform: scale(var(--viv-outputScale,1));\n  transform-origin: left top;\n}\n\n/* Emulate high pixel ratio using zoom & transform:scale() */\n@supports (zoom: 8) {\n  [data-vivliostyle-layout-box] {\n    zoom: calc(var(--viv-outputPixelRatio,1) / var(--viv-devicePixelRatio,1));\n    transform: scale(calc(var(--viv-devicePixelRatio,1) / var(--viv-outputPixelRatio,1)));\n  }\n  [data-vivliostyle-spread-container] {\n    zoom: calc(var(--viv-outputPixelRatio,1) / var(--viv-devicePixelRatio,1));\n    transform: scale(calc(var(--viv-outputScale,1) * var(--viv-devicePixelRatio,1) / var(--viv-outputPixelRatio,1)));\n  }\n  /* Workaround for Chromium's default border etc. widths not zoomed but scaled down */\n  [data-vivliostyle-spread-container] :where([style*=border],[style*=outline],[style*=rule]) {\n    border-width: medium;\n    outline-width: medium;\n    column-rule-width: medium;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar-track {\n    background-color: #f4f4f4;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background: #c7c7c7;\n  }\n  [data-vivliostyle-spread-container] ::-webkit-scrollbar-thumb:hover {\n    background: #7d7d7d;\n  }\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  background-origin: content-box !important;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container] {\n    --viv-outputScale: 1 !important;\n    --viv-devicePixelRatio: 1 !important;\n    zoom: normal !important;\n    transform: none !important;\n  }\n\n  @supports (zoom: 8) {\n    [data-vivliostyle-spread-container] [data-vivliostyle-page-container] {\n      zoom: var(--viv-outputPixelRatio,1);\n      transform: scale(calc(1 / var(--viv-outputPixelRatio,1)));\n      transform-origin: left top;\n    }\n  }\n\n  [data-vivliostyle-spread-container] [data-vivliostyle-page-container] {\n    display: block !important;\n    max-height: 100vh;\n  }\n\n  [data-vivliostyle-spread-container] [data-vivliostyle-page-container]:not(:last-child) {\n    break-after: page;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document url-prefix()  {\n    [data-vivliostyle-spread-container] [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n    /* Workaround Gecko problem on page break */\n    [data-vivliostyle-spread-container] [data-vivliostyle-page-container] {\n      break-after: auto !important;\n      height: 100% !important;\n    }\n  }\n}\n`;\n\n/** validation.txt */\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nURI_OR_NONE = URI | none;\nIMAGE = URI | IMAGE_FUNCTION | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | inline-start | inline-end | block-start | block-end | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = IDENT;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    leader([ dotted | solid | space ] | STRING ) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) |\n    element(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker |\n    flow-root | grid | inline-grid | contents;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | POS_NUM;\nheight = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto | clip;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed | running(IDENT);\nquotes = [STRING STRING]+ | none | auto;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\nmargin-break = auto | keep | discard;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE | footnote;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nfont-display = [ auto | block | swap | fallback | optional ];\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\ncrop-offset = auto | LENGTH;\ncrop-marks-line-color = auto | COLOR;\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = none | footnote | [ block-start || block-end || inline-start || inline-end || snap-block || snap-inline || left || right || top || bottom ];\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz,webkit]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing-trim = auto | normal | space-all | trim-both | trim-auto |\n    [[ trim-start | space-start | space-first ] ||\n     [ trim-end | space-end | allow-end ] ||\n     [ trim-adjacent | space-adjacent ]];\ntext-autospace = normal | auto | no-autospace |\n    [[ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ]];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[webkit]text-decoration-thickness = from-font | APLENGTH;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\n[moz,webkit]box-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\n/* Compatibility */\n[webkit]text-fill-color = COLOR;\n[webkit]text-stroke-color = COLOR;\n[webkit]text-stroke-width = BORDER_SIDE_WIDTH;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-autospace: normal;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\ntext-spacing-trim: normal;\ntext-stroke-color: currentColor;\ntext-stroke-width: 0;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nall = ALL;\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-position list-style-type list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n[webkit]text-stroke = text-stroke-width text-stroke-color;\ntext-decoration = text-decoration-line text-decoration-color text-decoration-style text-decoration-thickness;\ntext-spacing = TEXT_SPACING text-autospace text-spacing-trim;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\ninset = INSETS top right bottom left;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n/** user-agent.xml */\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.-vivliostyle-footnote-content {\n  float: footnote;\n}\n\n.-vivliostyle-table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"-vivliostyle-footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"-vivliostyle-table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n/** user-agent-page.css */\nexport const UserAgentPageCss = `\n@namespace \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n/** user-agent-base.css */\nexport const UserAgentBaseCss = `\n@namespace \"http://www.w3.org/1999/xhtml\";\n@namespace m \"http://www.w3.org/1998/Math/MathML\";\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml,\naddress,\nblockquote,\nbody,\ndd,\ndiv,\ndl,\ndt,\nfieldset,\nform,\nframe,\nframeset,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nnoframes,\nol,\np,\nul,\ncenter,\ndir,\nhr,\nmenu,\npre,\ndetails,\ndialog,\nlegend,\nlisting,\noptgroup,\noption,\nplaintext,\nsearch,\nxmp,\narticle,\nsection,\nnav,\naside,\nhgroup,\nfooter,\nheader,\nfigure,\nfigcaption,\nmain {\n  display: block;\n}\nli {\n  display: list-item;\n}\nhead {\n  display: none !important;\n}\ntable {\n  display: table;\n}\ntr {\n  display: table-row;\n}\nthead {\n  display: table-header-group;\n  break-after: avoid;\n}\ntbody {\n  display: table-row-group;\n}\ntfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\ncol {\n  display: table-column;\n}\ncolgroup {\n  display: table-column-group;\n}\ntd,\nth {\n  display: table-cell;\n}\ncaption {\n  display: table-caption;\n  text-align: center;\n}\nth {\n  font-weight: bolder;\n  text-align: center;\n}\n*[hidden],\nlink,\nstyle,\nscript {\n  display: none;\n}\nh1 {\n  font-size: 2em;\n  margin-block: 0.67em;\n}\nh2 {\n  font-size: 1.5em;\n  margin-block: 0.83em;\n}\nh3 {\n  font-size: 1.17em;\n  margin-block: 1em;\n}\nh4 {\n  font-size: 1em;\n  margin-block: 1.33em;\n}\nh5 {\n  font-size: 0.83em;\n  margin-block: 1.67em;\n}\nh6 {\n  font-size: 0.67em;\n  margin-block: 2.33em;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: bold;\n  break-after: avoid;\n}\np,\nblockquote,\nfigure,\nul,\nol,\ndl,\ndir,\nmenu {\n  margin-block: 1em;\n}\nb,\nstrong {\n  font-weight: bolder;\n}\nblockquote,\nfigure {\n  margin-inline: 40px;\n}\ni,\ncite,\ndfn,\nem,\nvar,\naddress {\n  font-style: italic;\n}\npre,\ntt,\ncode,\nkbd,\nsamp {\n  font-family: monospace;\n  text-spacing: none;\n  hanging-punctuation: none;\n}\nlisting,\nplaintext,\nxmp,\npre {\n  white-space: pre;\n}\npre[wrap] {\n  white-space: pre-wrap;\n}\nbutton,\ntextarea,\ninput,\nselect {\n  display: inline-block;\n}\nbig {\n  font-size: 1.17em;\n}\nsmall,\nsub,\nsup {\n  font-size: 0.83em;\n}\nsub {\n  vertical-align: sub;\n}\nsup {\n  vertical-align: super;\n}\ntable {\n  box-sizing: border-box;\n  border-spacing: 2px;\n  border-collapse: separate;\n  text-indent: initial;\n}\nthead,\ntbody,\ntfoot,\ntable > tr {\n  vertical-align: middle;\n}\ntr,\ntd,\nth {\n  vertical-align: inherit;\n}\ns,\nstrike,\ndel {\n  text-decoration: line-through;\n}\nhr {\n  border-style: inset;\n  border-width: 1px;\n  margin-block: 0.5em;\n}\nhr[color],\nhr[noshade] {\n  border-style: solid;\n}\nol,\nul,\ndir,\nmenu {\n  padding-inline-start: 40px;\n}\ndd {\n  margin-inline-start: 40px;\n}\nol ul,\nul ol,\nul ul,\nol ol {\n  margin-block: 0;\n}\nu,\nins {\n  text-decoration: underline;\n}\ncenter {\n  text-align: center;\n}\nq::before {\n  content: open-quote;\n}\nq::after {\n  content: close-quote;\n}\n\nruby {\n  display: ruby;\n}\nrp {\n  display: none;\n}\nrbc {\n  display: ruby-base-container;\n}\nrtc {\n  display: ruby-text-container;\n}\nrb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nrt {\n  display: ruby-text;\n}\nrtc,\nrt {\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\nrtc,\nrt {\n  font-size: 50%;\n}\nrtc:lang(zh-TW),\nrt:lang(zh-TW) {\n  font-size: 30%;\n}\nrtc > rt,\nrtc > rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nbdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nbdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\n*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: isolate;\n}\n*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: isolate;\n}\n\n/* MathML */\nm|math[display=\"block\"] {\n  display: block;\n  display: block math;\n}\n\n/*------------------ epub-specific ---------------------*/\n\na[epub|type=\"noteref\"],\na[epub\\\\:type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\na[epub|type=\"noteref\"]:href-epub-type(footnote, aside),\na[epub\\\\:type=\"noteref\"]:href-epub-type(footnote, aside) {\n  -adapt-template: footnote;\n  text-decoration: none;\n}\n\naside[epub|type=\"footnote\"],\naside[epub\\\\:type=\"footnote\"] {\n  display: none;\n}\n\naside[epub|type=\"footnote\"]:footnote-content,\naside[epub\\\\:type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n`;\n\n/** user-agent-toc.css */\nexport const UserAgentTocCss = `\n@namespace \"http://www.w3.org/1999/xhtml\";\n\n*:not([data-vivliostyle-role=doc-toc],\n  [data-vivliostyle-role=doc-toc] *,\n  :has([data-vivliostyle-role=doc-toc]),\n  :is(h1,h2,h3,h4,h5,h6):has(+:not(nav)[data-vivliostyle-role=doc-toc])) {\n  display: none;\n}\n\n[hidden] {\n  display: revert;\n}\n\n[data-vivliostyle-role=doc-toc] li a {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[data-vivliostyle-role=doc-toc] li {\n  -adapt-behavior: toc-node;\n}\n\n[data-vivliostyle-role=doc-toc] li > :not(ul,ol):first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[data-vivliostyle-role=doc-toc] :is(ol,ul),\n[data-vivliostyle-role=doc-toc]:is(ol,ul) {\n  -adapt-behavior: toc-container;\n}\n`;\n\n/** vivliostyle-polyfill.css */\nexport const VivliostylePolyfillCss = `\n[data-viv-margin-discard~=\"block-start\"] {\n  margin-block-start: 0 !important;\n}\n[data-viv-margin-discard~=\"block-end\"] {\n  margin-block-end: 0 !important;\n}\n[data-viv-margin-discard~=\"inline-start\"] {\n  margin-inline-start: 0 !important;\n}\n[data-viv-margin-discard~=\"inline-end\"] {\n  margin-inline-end: 0 !important;\n}\n\n[data-viv-box-break~=\"inline-start\"]:not([data-viv-box-break~=\"clone\"]) {\n  margin-inline-start: 0 !important;\n  padding-inline-start: 0 !important;\n  border-inline-start-width: 0 !important;\n  border-start-start-radius: 0 !important;\n  border-end-start-radius: 0 !important;\n}\n[data-viv-box-break~=\"inline-end\"]:not([data-viv-box-break~=\"clone\"]) {\n  margin-inline-end: 0 !important;\n  padding-inline-end: 0 !important;\n  border-inline-end-width: 0 !important;\n  border-start-end-radius: 0 !important;\n  border-end-end-radius: 0 !important;\n}\n[data-viv-box-break~=\"block-start\"]:not([data-viv-box-break~=\"clone\"]):not(table[style*=\"border-collapse: collapse\"]:has(>thead)) {\n  margin-block-start: 0 !important;\n  padding-block-start: 0 !important;\n  border-block-start-width: 0 !important;\n  border-start-start-radius: 0 !important;\n  border-start-end-radius: 0 !important;\n}\n[data-viv-box-break~=\"block-end\"]:not([data-viv-box-break~=\"clone\"]):not(table[style*=\"border-collapse: collapse\"]:has(>tfoot)) {\n  margin-block-end: 0 !important;\n  padding-block-end: 0 !important;\n  border-block-end-width: 0 !important;\n  border-end-start-radius: 0 !important;\n  border-end-end-radius: 0 !important;\n}\n[data-viv-box-break~=\"block-start\"][data-viv-box-break~=\"text-start\"] {\n  text-indent: 0 !important;\n}\n[data-viv-box-break~=\"block-end\"][data-viv-box-break~=\"text-end\"][data-viv-box-break~=\"justify\"] {\n  text-align-last: justify !important;\n}\n[data-viv-box-break~=\"block-end\"][data-viv-box-break~=\"text-end\"][data-viv-box-break~=\"justify\"] > * {\n  text-align-last: auto;\n}\n[data-viv-box-break~=\"block-end\"][data-viv-box-break~=\"text-end\"]:not([data-viv-box-break~=\"justify\"]) {\n  text-align-last: auto !important;\n}\n\nspan.viv-anonymous-block {\n  display: block;\n}\n\n[data-vivliostyle-page-container] {\n  text-spacing-trim: space-all;\n  text-autospace: no-autospace;\n}\nviv-ts-open.viv-ts-auto > viv-ts-inner,\nviv-ts-open.viv-ts-trim > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close.viv-ts-auto > viv-ts-inner,\nviv-ts-close.viv-ts-trim > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-close.viv-hang-end > viv-ts-inner,\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  letter-spacing: -1em;\n}\nviv-ts-open.viv-ts-auto::before,\nviv-ts-close.viv-ts-auto::after,\nviv-ts-close.viv-hang-end::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  word-spacing: normal;\n  letter-spacing: -0.11em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-close.viv-hang-end:not(.viv-hang-hw)::after {\n  letter-spacing: 0.4em;\n}\nviv-ts-close.viv-hang-hw > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  line-height: 1;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  word-spacing: normal;\n  letter-spacing: -0.125em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\n[style*=text-decoration] :is(viv-ts-thin-sp, viv-ts-close.viv-ts-auto)::after {\n  visibility: visible;\n}\n\nspan[data-viv-leader] {\n  text-combine-upright: none;\n  text-orientation: mixed;\n  white-space: pre;\n}\n`;\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum FetchResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type FetchResponse = Net.FetchResponse;\n\nexport function fetchFromURL(\n  url: string,\n  opt_type?: FetchResponseType,\n  opt_method?: string,\n): Task.Result<FetchResponse> {\n  const frame: Task.Frame<FetchResponse> = Task.newFrame(\"fetchFromURL\");\n  const requestInit: RequestInit = {\n    method: opt_method || \"GET\",\n    mode: \"cors\",\n  };\n\n  const continuation = frame.suspend();\n  const response: FetchResponse = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n\n  fetch(url, requestInit)\n    .then((res) => {\n      response.status = res.status;\n      response.url = res.url;\n      response.statusText = res.statusText;\n      response.contentType = res.headers\n        .get(\"Content-Type\")\n        ?.replace(/;.*$/, \"\")\n        .toLowerCase();\n\n      if (!res.ok) {\n        // TODO: Handle error response\n        return res.text();\n      }\n      if (opt_type === FetchResponseType.BLOB) {\n        return res.blob();\n      }\n      if (opt_type === FetchResponseType.ARRAYBUFFER) {\n        return res.arrayBuffer();\n      }\n      if (opt_type === FetchResponseType.JSON) {\n        return res.json();\n      }\n\n      // Aozorabunko's (X)HTML support\n      if (\n        /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n      ) {\n        response.contentType = \"text/html\";\n        return res.arrayBuffer().then((buffer) => {\n          const decoder = new TextDecoder(\"Shift_JIS\");\n          const text = decoder.decode(buffer);\n          return text;\n        });\n      }\n      // Treat `data:,<h1>Hello</h1>` as text/html\n      if (/^data:,(<|%3c)/i.test(url)) {\n        response.contentType = \"text/html\";\n      }\n\n      return res.text();\n    })\n    .then((fetchedContent) => {\n      if (\n        opt_type === FetchResponseType.BLOB &&\n        fetchedContent instanceof Blob\n      ) {\n        response.responseBlob = fetchedContent;\n      } else if (\n        opt_type === FetchResponseType.ARRAYBUFFER &&\n        fetchedContent instanceof ArrayBuffer\n      ) {\n        response.responseBlob = makeBlob([fetchedContent]);\n      } else if (opt_type === FetchResponseType.JSON) {\n        response.responseText = JSON.stringify(fetchedContent);\n      } else if (typeof fetchedContent === \"string\") {\n        response.responseText = fetchedContent;\n      }\n      continuation.schedule(response);\n    })\n    .catch((e) => {\n      Logging.logger.warn(e, `Error fetching ${url}`);\n      continuation.schedule(response);\n    });\n  return frame.result();\n}\n\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): Blob {\n  const type = opt_type || \"application/octet-stream\";\n  return new Blob(parts, { type });\n}\n\nexport function readBlob(blob: Blob): Task.Result<ArrayBuffer> {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  URL.revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return URL.createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: FetchResponse,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: FetchResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    fetchFromURL(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: FetchResponse,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, FetchResponseType.TEXT);\n}\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(\n  elem: Element,\n  src?: string,\n  alt?: string,\n): TaskUtil.Fetcher<string> {\n  const fetcher = new TaskUtil.Fetcher(\n    () => {\n      const frame: Task.Frame<string> = Task.newFrame(\"loadElement\");\n      const continuation = frame.suspend(elem);\n      let done = false;\n      const handler = (evt: Event) => {\n        if (done) {\n          return;\n        } else {\n          done = true;\n        }\n        continuation.schedule(evt ? evt.type : \"timeout\");\n      };\n      elem.addEventListener(\"load\", handler, false);\n      elem.addEventListener(\"error\", handler, false);\n      elem.addEventListener(\"abort\", handler, false);\n      if (elem.namespaceURI == Base.NS.SVG) {\n        if (src) {\n          elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n        }\n        // SVG handlers are not reliable\n        setTimeout(handler, 300);\n      } else if (elem.localName === \"script\") {\n        setTimeout(handler, 3000);\n      } else if (src) {\n        (elem as any).src = src;\n        if (alt) {\n          (elem as any).alt = alt;\n        }\n      }\n      return frame.result();\n    },\n    `loadElement ${src || elem.localName}`,\n  );\n  fetcher.start();\n  return fetcher;\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { TokenType } from \"./css-tokenizer\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 0x1000000;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 0x2000000;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 0x3000000;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 0x4000000;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 0x5000000;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 0x6000000;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  /**\n   * For relational pseudo-class `:has()` support\n   */\n  pushSelectorText(selectorText: string) {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  override getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  override getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics, token?.toString() ?? \"\");\n  }\n\n  override startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  override classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  override pseudoelementSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  override idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  override attributeSelector(\n    ns: string,\n    name: string,\n    op: TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  override descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  override childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  override adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  override followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  override nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  override startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  override startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  override startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  override startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  override startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  override startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  override startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  override startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  override startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  override startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  override endRule(): void {\n    this.slave.endRule();\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  override endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n\n  override pushSelectorText(selectorText: string): void {\n    this.slave.pushSelectorText(selectorText);\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  override getCurrentToken(): CssTokenizer.Token {\n    return this.owner?.getCurrentToken();\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner?.errorMsg(mnemonics, token);\n  }\n\n  override startRuleBody(): void {\n    this.depth++;\n  }\n\n  override endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  override startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  override startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  override startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  override startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  override startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  override startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  override startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  override startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  override endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  SELECTOR_PSEUDOELEM_1,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = TokenType.LAST + 3;\n\n(() => {\n  actionsBase[TokenType.IDENT] = Action.IDENT;\n  actionsBase[TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[TokenType.COL_COL] = Action.SELECTOR_START;\n  actionsBase[TokenType.AT] = Action.AT;\n  actionsBase[TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorStart[TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n\n  actionsSelector[TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[TokenType.TILDE] = Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM_1;\n  actionsSelector[TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[TokenType.TILDE] = Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[TokenType.EOF] = Action.DONE;\n  actionsError[TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[TokenType.C_PAR] = Action.ERROR_POP;\n  priority[TokenType.C_PAR] = 0;\n  priority[TokenType.COMMA] = 0;\n  priority[TokenType.QMARK] = 1;\n  priority[TokenType.COLON] = 1;\n  priority[TokenType.AMP_AMP] = 2;\n  priority[TokenType.BAR_BAR] = 2;\n  priority[TokenType.LT] = 3;\n  priority[TokenType.GT] = 3;\n  priority[TokenType.LT_EQ] = 3;\n  priority[TokenType.GT_EQ] = 3;\n  priority[TokenType.EQ] = 3;\n  priority[TokenType.EQ_EQ] = 3;\n  priority[TokenType.BANG_EQ] = 3;\n  priority[TokenType.PLUS] = 4;\n  priority[TokenType.MINUS] = 4;\n  priority[TokenType.STAR] = 5;\n  priority[TokenType.SLASH] = 5;\n  priority[TokenType.PERCENT] = 5;\n  priority[TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n  inStyleDeclaration: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index === valStack.length) {\n        break;\n      }\n      if (valStack[index++] !== sep) {\n        throw new Error(\"Unexpected state\");\n      }\n      if (index === valStack.length) {\n        // keep last comma in `var(--b , )`\n        arr.push(Css.empty);\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let parLevel = 0;\n    let v;\n    do {\n      v = valStack[--index];\n      if (sep === \")\" && v instanceof Css.AnyToken) {\n        // For nested parens in calc() (Issue #1014)\n        if (v.text === \")\") {\n          parLevel++;\n        } else if (v.text === \"(\") {\n          if (parLevel === 0) {\n            return null;\n          }\n          parLevel--;\n        }\n      }\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        if (token.type !== TokenType.EOF) {\n          this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n          this.actions = actionsErrorDecl;\n        }\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n\n      // Check invalid var()\n      if (func.name === \"var\") {\n        const name = func.values[0] instanceof Css.Ident && func.values[0].name;\n        if (!Css.isCustomPropName(name) || name === this.propName) {\n          this.handler.error(`E_CSS_INVALID_VAR ${func.toString()}`, token);\n          this.actions = actionsErrorDecl;\n        }\n      }\n      return func;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    const val = valStack[0];\n    if (val instanceof Css.Val) {\n      return val;\n    } else if (!val) {\n      return Css.empty;\n    } else {\n      // custom property value can be arbitrary token e.g. \",\"\n      return new Css.AnyToken(val.toString());\n    }\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics, token.toString());\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case TokenType.EQ:\n          case TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case TokenType.QMARK:\n            if (op != TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (token1.type === TokenType.IDENT && token2.type === TokenType.COLON) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === TokenType.O_PAR ||\n        token1.type === TokenType.FUNC ||\n        (token1.type === TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === TokenType.O_PAR || token2.type === TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    let commaCount = 0;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case TokenType.C_PAR:\n          parLevel--;\n          break;\n        case TokenType.O_PAR:\n        case TokenType.FUNC:\n          parLevel++;\n          break;\n        case TokenType.COMMA:\n          if (parLevel === 0) {\n            commaCount++;\n          }\n          break;\n        case TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value =\n      isFunc && name === \"selector\" && commaCount > 0\n        ? \"\" // selector() with multiple selectors doesn't work\n        : tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case TokenType.NUM:\n        case TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === TokenType.MINUS;\n          const hasSign = token.type === TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n    parsingRelationalSelector?: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    let selectorStartPosition: number | null = null;\n\n    if (parsingStyleAttr) {\n      this.inStyleDeclaration = true;\n    }\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n\n    for (; count > 0; --count) {\n      token = tokenizer.token();\n\n      // For relational pseudo-class `:has()` support\n      if (parsingFunctionParam && selectorStartPosition === null) {\n        // token.position may be token's start position + 1\n        selectorStartPosition = token.position - 1;\n        if (tokenizer.input[selectorStartPosition] === \"(\") {\n          selectorStartPosition++;\n        }\n      }\n\n      // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n      if (\n        this.actions === actionsPropVal &&\n        this.errorBrackets.length > 0 &&\n        (token.type === this.errorBrackets[this.errorBrackets.length - 1] ||\n          token.type === TokenType.SEMICOL ||\n          token.type === TokenType.BANG)\n      ) {\n        if (token.type === this.errorBrackets[this.errorBrackets.length - 1]) {\n          this.errorBrackets.pop();\n          if (token.type === TokenType.C_PAR) {\n            // For nested func in parens (Issue #1014)\n            if (this.valStackReduce(\")\", token)) {\n              tokenizer.consume();\n              continue;\n            }\n          }\n        }\n        valStack.push(new Css.AnyToken(token.toString()));\n        tokenizer.consume();\n        continue;\n      }\n\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (\n            !this.inStyleDeclaration ||\n            tokenizer.nthToken(1).type != TokenType.COLON\n          ) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          // property assignment\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          if (!token.text) {\n            handler.error(\"E_CSS_SYNTAX\", token);\n            tokenizer.consume();\n            continue;\n          }\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"is\":\n                case \"not\":\n                case \"where\":\n                case \"has\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(text);\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                      text === \"has\",\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  continue;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    if (\n                      text === \"href-epub-type\" &&\n                      tokenizer.token().type === TokenType.COMMA\n                    ) {\n                      tokenizer.consume();\n                      token = tokenizer.token();\n                      if (token.type === TokenType.IDENT) {\n                        params.push(token.text);\n                        tokenizer.consume();\n                      }\n                    }\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == TokenType.BAR) {\n            ns = text && this.namespacePrefixToURI[text];\n            // if ns === null, it's wildcard namespace\n            if (ns === undefined) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case TokenType.EQ:\n            case TokenType.TILDE_EQ:\n            case TokenType.BAR_EQ:\n            case TokenType.HAT_EQ:\n            case TokenType.DOLLAR_EQ:\n            case TokenType.STAR_EQ:\n            case TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case TokenType.IDENT:\n            case TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n            this.inStyleDeclaration = true;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n            this.inStyleDeclaration = true;\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          valStack.push(new Css.HexColor(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          valStack.push(new Css.Numeric(token.num, token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n            if (this.errorBrackets.length > 0) {\n              // For nested func in parens (Issue #1014)\n              this.errorBrackets.push(TokenType.C_PAR);\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == TokenType.SEMICOL ||\n              token1.type == TokenType.EOF ||\n              token1.type == TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case TokenType.NUM:\n            case TokenType.NUMERIC:\n            case TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          // this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n          valStack.push(new Css.AnyToken(\"+\"));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n\n          // for implicit closing parens, e.g. style=\"color: var(--a, var(--b\"\n          while (valStack.length > 0) {\n            const len = valStack.length;\n            val = this.valStackReduce(\";\", token);\n            if (!val || valStack.length === len) {\n              break;\n            }\n          }\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          return true;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === TokenType.O_PAR ||\n                token1.type === TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type != TokenType.INT || token.precededBySpace) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          this.inStyleDeclaration = false;\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n            switch (this.ruleStack[this.ruleStack.length - 1]) {\n              case \"page\":\n              case \"-epubx-page-master\":\n              case \"-epubx-partition-group\":\n                this.inStyleDeclaration = true;\n            }\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == TokenType.STR || token.type == TokenType.URL) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == TokenType.SEMICOL ||\n                  token.type == TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == TokenType.STR ||\n                      token.type == TokenType.URL) &&\n                    tokenizer.nthToken(1).type == TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case TokenType.STR:\n                case TokenType.URL:\n                  if (tokenizer.nthToken(1).type == TokenType.SEMICOL) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == TokenType.STR &&\n                tokenizer.nthToken(1).type == TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    this.inStyleDeclaration = true;\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    this.inStyleDeclaration = true;\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    this.inStyleDeclaration = true;\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  this.inStyleDeclaration = true;\n                  continue;\n                case TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    this.inStyleDeclaration = true;\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                this.inStyleDeclaration = true;\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == TokenType.IDENT &&\n                tokenizer.nthToken(2).type == TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                this.inStyleDeclaration = true;\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == TokenType.COLON &&\n                tokenizer.nthToken(1).type == TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == TokenType.IDENT &&\n                tokenizer.nthToken(2).type == TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                this.inStyleDeclaration = true;\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          if (\n            parsingFunctionParam &&\n            this.errorBrackets.length == 0 &&\n            token.type == TokenType.C_PAR\n          ) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n            return true;\n          }\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (this.errorBrackets.length == 0 && token.type == TokenType.C_BRC) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          return true;\n        default:\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            switch (token.type) {\n              case TokenType.COMMA:\n              case TokenType.C_PAR:\n                if (this.actions === actionsSelectorStart) {\n                  handler.error(\"E_CSS_SYNTAX\", token);\n                } else {\n                  const selectorText = tokenizer.input.substring(\n                    selectorStartPosition,\n                    token.position,\n                  );\n                  handler.pushSelectorText(selectorText);\n                  selectorStartPosition = token.position + 1;\n                }\n                if (token.type === TokenType.COMMA) {\n                  handler.nextSelector();\n                  this.actions = actionsSelectorStart;\n                  tokenizer.consume();\n                  continue;\n                } else {\n                  handler.endFuncWithSelector();\n                  tokenizer.consume();\n                  return true;\n                }\n              case TokenType.GT:\n              case TokenType.PLUS:\n              case TokenType.TILDE:\n                if (parsingRelationalSelector) {\n                  // :has() takes relational selectors e.g. `:has(> F)`\n                  this.actions = actionsSelector;\n                  continue;\n                }\n                break;\n              case TokenType.O_BRC:\n              case TokenType.O_BRK:\n              case TokenType.O_PAR:\n                this.errorBrackets.push(token.type + 1);\n                break;\n            }\n            handler.error(\"E_CSS_SYNTAX\", token);\n            tokenizer.consume();\n            this.actions = actionsErrorSelector;\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == TokenType.INVALID) {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            } else if (this.actions === actionsPropVal) {\n              // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n              switch (token.type) {\n                case TokenType.O_PAR:\n                case TokenType.O_BRC:\n                case TokenType.O_BRK:\n                  this.errorBrackets.push(token.type + 1);\n                  break;\n              }\n              valStack.push(new Css.AnyToken(token.toString()));\n              tokenizer.consume();\n              continue;\n            } else if (\n              token.type === TokenType.O_BRC &&\n              this.actions == actionsExprVal &&\n              valStack.length > 0\n            ) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (\n              token.type === TokenType.SEMICOL &&\n              this.actions == actionsExprVal\n            ) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    // throw new Error(mnemonics + \" \" + token);\n    Logging.logger.warn(mnemonics, token.toString());\n  }\n\n  override getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.fetchFromURL(url).then((response) => {\n        if (!response.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            response.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n    top: (element as any).style.top as string,\n    right: (element as any).style.right as string,\n    bottom: (element as any).style.bottom as string,\n    left: (element as any).style.left as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    if (original.position === \"absolute\" || original.position === \"fixed\") {\n      // For absolutely positioned elements, use the element's original size\n      // and position to calculate the fill-available inline size.\n      // This is needed to get correct available inline size for page floats.\n      Base.setCSSProperty(container, \"width\", original.width);\n      Base.setCSSProperty(container, \"height\", original.height);\n      Base.setCSSProperty(container, \"top\", original.top);\n      Base.setCSSProperty(container, \"right\", original.right);\n      Base.setCSSProperty(container, \"bottom\", original.bottom);\n      Base.setCSSProperty(container, \"left\", original.left);\n    }\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, \"width\", \"\");\n    Base.setCSSProperty(container, \"height\", \"\");\n    Base.setCSSProperty(container, \"top\", \"\");\n    Base.setCSSProperty(container, \"right\", \"\");\n    Base.setCSSProperty(container, \"bottom\", \"\");\n    Base.setCSSProperty(container, \"left\", \"\");\n    return r;\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    // Workaround for the case that the element has an image that is\n    // not loaded yet. Use 1px instead of 0px to avoid wrong layout.\n    if (\n      r === \"0px\" &&\n      element.childNodes.length === 1 &&\n      element.firstElementChild?.localName === \"img\" &&\n      !(element.firstElementChild as HTMLImageElement).complete\n    ) {\n      r = \"1px\";\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Check if style=\"box-decoration-break: clone\" is set\n */\nexport function isCloneBoxDecorationBreak(element: Element): boolean {\n  return (\n    (element as HTMLElement)?.style?.[\"box-decoration-break\"] === \"clone\" ||\n    (element as HTMLElement)?.style?.[\"-webkit-box-decoration-break\"] ===\n      \"clone\"\n  );\n}\n\n/**\n * data-viv-box-break attribute\n *\n * Value: [ [inline-start || inline-end] |\n *          [block-start text-start? || block-end text-end?] justify? ]\n *        clone?\n *\n * inline-start, inline-end, block-start, block-end: the side at which a box break occurs\n * text-start: the fragment starts with text or inline box\n * text-end: the fragment ends with text or inline box\n * justify: the computed value of `text-align` property is `justify`\n * clone: the computed value of `box-decoration-break` property is `clone`\n */\ntype BoxBreakFlag =\n  | \"inline-start\"\n  | \"inline-end\"\n  | \"block-start\"\n  | \"block-end\"\n  | \"text-start\"\n  | \"text-end\"\n  | \"justify\"\n  | \"clone\";\n\nexport function getBoxBreakFlags(element: Element): BoxBreakFlag[] {\n  const val = element.getAttribute(\"data-viv-box-break\");\n  return (val ? val.split(\" \") : []) as BoxBreakFlag[];\n}\n\nexport function setBoxBreakFlags(\n  element: Element,\n  boxBreakFlags: BoxBreakFlag[],\n): void {\n  element.setAttribute(\"data-viv-box-break\", boxBreakFlags.join(\" \"));\n}\n\nexport function setBoxBreakFlag(\n  element: Element,\n  boxBreakFlag: BoxBreakFlag,\n): void {\n  const boxBreakFlags = getBoxBreakFlags(element);\n  if (!boxBreakFlags.includes(boxBreakFlag)) {\n    boxBreakFlags.push(boxBreakFlag);\n    setBoxBreakFlags(element, boxBreakFlags);\n  }\n}\n\n/**\n * data-viv-margin-discard attribute\n *\n * Value: block-start || block-end || inline-start || inline-end\n *\n * block-start: the block-start margin is discarded\n * block-end: the block-end margin is discarded\n * inline-start: the inline-start margin is discarded\n * inline-end: the inline-end margin is discarded\n */\ntype MarginDiscardFlag =\n  | \"block-start\"\n  | \"block-end\"\n  | \"inline-start\"\n  | \"inline-end\";\n\nexport function getMarginDiscardFlags(element: Element): MarginDiscardFlag[] {\n  const val = element.getAttribute(\"data-viv-margin-discard\");\n  return (val ? val.split(\" \") : []) as MarginDiscardFlag[];\n}\n\nexport function setMarginDiscardFlags(\n  element: Element,\n  marginDiscardFlags: MarginDiscardFlag[],\n): void {\n  element.setAttribute(\"data-viv-margin-discard\", marginDiscardFlags.join(\" \"));\n}\n\nexport function setMarginDiscardFlag(\n  element: Element,\n  marginDiscardFlag: MarginDiscardFlag,\n): void {\n  const MarginDiscardFlags = getMarginDiscardFlags(element);\n  if (!MarginDiscardFlags.includes(marginDiscardFlag)) {\n    MarginDiscardFlags.push(marginDiscardFlag);\n    setMarginDiscardFlags(element, MarginDiscardFlags);\n  }\n}\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartBreakType(breakValue: string | null): string {\n  return isForcedBreakValue(breakValue) ? breakValue : \"auto\";\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\nexport function restoreOriginalText(changes: Change[]): string {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function restoreNewText(changes: Change[]): string {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export type ElementStyle = { [key: string]: any };\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(\n      element: Element,\n      styles: { [key: string]: Css.Val },\n      viewNode: Node,\n    );\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\"\n     * @return parsed and adjusted length value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type FetchResponse = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: FetchResponse,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n    /**\n     * Adjust length value with rendering precision.\n     * @param value Length value to adjust\n     * @return Adjusted length value\n     */\n    adjustLengthValue(value: number): number;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    rtl: boolean;\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: CssStyler.AbstractStyler;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n  pageType: string | null = null;\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace?: Whitespace): boolean {\n  if (!node) {\n    return true;\n  }\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t]*$/);\n    case Whitespace.IGNORE:\n    default:\n      return !!text.match(/^[ \\t\\r\\n\\f]*$/);\n  }\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    (nps1.node === nps2.node ||\n      // Fix for issue #869\n      (!!nps1.shadowContext &&\n        !!nps2.shadowContext &&\n        nps1.shadowType === Vtree.ShadowType.ROOTLESS &&\n        nps2.shadowType === Vtree.ShadowType.ROOTLESS &&\n        (nps1.node as Element)?.outerHTML ===\n          (nps2.node as Element)?.outerHTML)) &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startBreakType: string | null = null;\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startBreakType = this.startBreakType;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page\n      // Removed:\n      //   || this.highestSeenOffset !== other.highestSeenOffset\n      // to prevent unnecessary re-layout (Issue #681-case2)\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const startBreakType = this.flowPositions[name]?.startBreakType;\n    return startBreakType && Break.isSpreadBreakValue(startBreakType)\n      ? startBreakType\n      : \"any\";\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n  rtl: boolean = false;\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical\n      ? this.rtl\n        ? box.bottom\n        : box.top\n      : this.rtl\n        ? box.right\n        : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical\n      ? this.rtl\n        ? box.top\n        : box.bottom\n      : this.rtl\n        ? box.left\n        : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return this.rtl ? -1 : 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n    this.rtl = other.rtl;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getBoxDir(),\n        extent,\n      );\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      if (this.rtl) {\n        const outerExtent =\n          extent +\n          this.marginTop +\n          this.marginBottom +\n          this.paddingTop +\n          this.paddingBottom +\n          this.borderTop +\n          this.borderBottom;\n        this.setVerticalPosition(\n          start + outerExtent * this.getInlineDir(),\n          extent,\n        );\n      } else {\n        this.setVerticalPosition(start, extent);\n      }\n    } else if (this.rtl) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getInlineDir(),\n        extent,\n      );\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      if (this.elem.lastChild?.nodeType === 3) {\n        this.elem.lastChild.textContent += str;\n        return;\n      }\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      if (\n        !node &&\n        val &&\n        ex instanceof Exprs.Native &&\n        ex.str.startsWith(\"running-element-\")\n      ) {\n        // Prevent wrong running element output when the element is not found (Issue #1196)\n        val = \"\";\n      }\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    !Css.isDefaultingValue(val)\n  );\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  private toLogicalFloatSides(floatSide: string): string[] {\n    const sides = floatSide.split(\" \");\n\n    // Convert to logical sides and remove duplicates\n    const logicalSides: string[] = [];\n    for (const side of sides) {\n      const logicalSide = this.toLogical(side);\n      if (!logicalSides.includes(logicalSide)) {\n        logicalSides.push(logicalSide);\n      }\n    }\n\n    // Convert \"block-start block-end\" to \"snap-block\" and\n    // \"inline-start inline-end\" to \"snap-inline\".\n    // More precisely, when multiple \"*block*\" values are found\n    // convert the first one to \"snap-block\" and remove the rest,\n    // and when multiple \"*inline*\" values are found convert the\n    // first one to \"snap-inline\" and remove the rest.\n    const logicalFloatSides: string[] = [];\n    let foundSnapBlock = false;\n    let foundSnapInline = false;\n    for (let i = 0; i < logicalSides.length; i++) {\n      const side = logicalSides[i];\n      if (side.includes(\"block\")) {\n        if (!foundSnapBlock) {\n          // Convert to \"snap-block\" if another block side is found\n          if (logicalSides.slice(i + 1).some((s) => s.includes(\"block\"))) {\n            logicalFloatSides.push(\"snap-block\");\n            foundSnapBlock = true;\n          } else {\n            logicalFloatSides.push(side);\n          }\n        }\n      } else if (side.includes(\"inline\")) {\n        if (!foundSnapInline) {\n          // Convert to \"snap-inline\" if another inline side is found\n          if (logicalSides.slice(i + 1).some((s) => s.includes(\"inline\"))) {\n            logicalFloatSides.push(\"snap-inline\");\n            foundSnapInline = true;\n          } else {\n            logicalFloatSides.push(side);\n          }\n        }\n      }\n    }\n\n    return logicalFloatSides;\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogicalFloatSides(floatSide)[0];\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogicalFloatSides(\n          fragment.floatSide,\n        )[0];\n        if (fragmentFloatSide === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogicalFloatSides(float.floatSide)[0];\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\" ||\n      logicalFloatSide === \"snap-inline\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogicalFloatSides(\n          fragment.floatSide,\n        )[0];\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\") ||\n            (logicalFloatSide === \"snap-inline\" &&\n              fragmentFloatSide === \"inline-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical\n          ? this.container.rtl\n            ? limits.bottom\n            : limits.top\n          : this.container.rtl\n            ? limits.right\n            : limits.left;\n      case \"inline-end\":\n        return this.container.vertical\n          ? this.container.rtl\n            ? limits.top\n            : limits.bottom\n          : this.container.rtl\n            ? limits.left\n            : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogicalFloatSides(f.floatSide)[0];\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    const logicalFloatSides = this.toLogicalFloatSides(floatSide);\n    if (logicalFloatSides[0] === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else if (logicalFloatSides[0] === \"snap-inline\") {\n      if (!condition[\"inline-start\"] && !condition[\"inline-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSides[0]]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSides[0] === \"block-start\" ||\n        logicalFloatSides[0] === \"snap-block\" ||\n        logicalFloatSides[0] === \"inline-start\" ||\n        logicalFloatSides[0] === \"snap-inline\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSides[0] === \"block-end\" ||\n        logicalFloatSides[0] === \"snap-block\" ||\n        logicalFloatSides[0] === \"inline-end\" ||\n        logicalFloatSides[0] === \"snap-inline\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = (inlineEnd - inlineStart) * area.getInlineDir();\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSides[0] === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSides[0] = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSides[0] = \"block-start\";\n          } else {\n            logicalFloatSides[0] = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSides[0]]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSides[0] = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      } else if (logicalFloatSides[0] === \"snap-inline\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSides[0] = \"inline-start\";\n        } else {\n          // FIXME: snap-inline should be resolved based on the anchor's inline position\n          if (condition[\"inline-start\"]) {\n            logicalFloatSides[0] = \"inline-start\";\n          } else if (condition[\"inline-end\"]) {\n            logicalFloatSides[0] = \"inline-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSides[0] === \"inline-start\" ||\n        logicalFloatSides[0] === \"inline-end\" ||\n        logicalFloatSides[1]\n      ) {\n        // If the page float is \"inline-start\" or \"inline-end\" or has two sides\n        // (e.g. \"block-start inline-end\"), the inline size is determined by the content size.\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize =\n        (inlineEnd - inlineStart) * area.getInlineDir();\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n\n    if (\n      logicalFloatSides.some(\n        (s) => s === \"inline-start\" || s === \"snap-inline\",\n      ) ||\n      (logicalFloatSides.length === 1 &&\n        (logicalFloatSides[0] === \"block-start\" ||\n          logicalFloatSides[0] === \"snap-block\"))\n    ) {\n      area.setInlinePosition(inlineStart, inlineSize);\n    } else if (\n      logicalFloatSides.some((s) => s === \"inline-end\") ||\n      (logicalFloatSides.length === 1 && logicalFloatSides[0] === \"block-end\")\n    ) {\n      area.setInlinePosition(\n        inlineEnd - outerInlineSize * area.getInlineDir(),\n        inlineSize,\n      );\n    }\n    if (\n      logicalFloatSides.some(\n        (s) => s === \"block-start\" || s === \"snap-block\",\n      ) ||\n      (logicalFloatSides.length === 1 &&\n        (logicalFloatSides[0] === \"inline-start\" ||\n          logicalFloatSides[0] === \"snap-inline\"))\n    ) {\n      area.setBlockPosition(blockStart, blockSize);\n    } else if (\n      logicalFloatSides.some((s) => s === \"block-end\") ||\n      (logicalFloatSides.length === 1 && logicalFloatSides[0] === \"inline-end\")\n    ) {\n      area.setBlockPosition(\n        blockEnd - outerBlockSize * area.getBoxDir(),\n        blockSize,\n      );\n    }\n\n    return logicalFloatSides.join(\" \");\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogicalFloatSides(floatSide)[0];\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /** @override */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /** @override */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /** @override */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /** @override */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /** @override */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /** @override */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /** @override */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n", "/**\n * Copyright 2017 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  override isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  override getOrder(): number {\n    return Infinity;\n  }\n\n  override shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /** @override */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /** @override */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /** @override */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /** @override */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /** @override */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /** @override */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /** @override */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display?.toString() || \"block\";\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Val): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Check if the position value is 'running()'.\n * https://drafts.csswg.org/css-gcpm/#running-elements\n */\nexport function isRunning(position: Css.Val): boolean {\n  return position instanceof Css.Func && position.name === \"running\";\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDisplayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Val,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Val } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if (\n    (float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isRoot\n  ) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Val,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDisplayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Val,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    display == Css.ident.grid ||\n    display == Css.ident.flow_root ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible &&\n      overflow !== Css.ident.clip &&\n      !Css.isDefaultingValue(overflow)) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Display from \"./display\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n\n  // NOTE: Do not replace `node.nodeType === 1` with `node instanceof Element`,\n  // which does not work when the node is inside iframe. (Issue #1000)\n\n  const element = node.nodeType === 1 ? (node as Element) : node.parentElement;\n  if (element && element.namespaceURI === Base.NS.XHTML) {\n    const style = (element as HTMLElement).style;\n    if (\n      style &&\n      Display.isInlineLevel(style.display) &&\n      /^([\\d\\.]|super|(text-)?top)/.test(style.verticalAlign)\n    ) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node === element) {\n    if (nodeContext.after || !nodeContext.inline) {\n      if (\n        nodeContext.after &&\n        !nodeContext.inline &&\n        element.querySelector(\"ruby\")\n      ) {\n        // Workaround for issue #987 (unnecessary break caused by ruby)\n        const parentNode = element.parentNode;\n        const nextSibling = element.nextSibling;\n        parentNode.removeChild(element);\n        parentNode.insertBefore(element, nextSibling);\n      }\n      const cbox = clientLayout.getElementClientRect(element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  for (\n    let lastChild = parentNode.lastChild, prevSibling = lastChild;\n    lastChild !== viewNode;\n    lastChild = prevSibling\n  ) {\n    prevSibling = lastChild.previousSibling;\n    if (\n      lastChild.nodeType === 1 &&\n      (lastChild as Element).hasAttribute(\"data-vivliostyle-float-box-moved\") &&\n      (viewNode as HTMLElement).style?.display === \"inline\"\n    ) {\n      // Do not remove float box moved after parent inline (Issue #1383, #1422)\n      continue;\n    }\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isOutOfFlow(node: Node): boolean {\n  if (!(node?.nodeType === 1)) return false;\n  const e = node as HTMLElement;\n  if (isSpecial(e)) return true;\n  const position = e.style?.position;\n  return position === \"absolute\" || position === \"fixed\";\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  const viewNode = nodeContext?.viewNode;\n  return viewNode?.nodeType === 1 && isSpecial(viewNode as Element);\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return (\n    display !== \"inline\" &&\n    (Display.isInlineLevel(display) || Display.isRubyInternalDisplay(display))\n  );\n}\n\nexport function findAncestorSpecialInlineNodeContext(\n  nodeContext: Vtree.NodeContext,\n): Vtree.NodeContext | null {\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (\n      (p.display !== \"inline\" || p.vertical !== p.parent?.vertical) &&\n      Display.isInlineLevel(p.display)\n    ) {\n      return p;\n    }\n  }\n  return null;\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /** @override */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  override getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n\n    if (!this.position.after && !this.position.inline) {\n      // Subtract marginBlockStart from the edge (Issue #611)\n      const marginBlockStart = column.parseComputedLength(\n        column.clientLayout.getElementComputedStyle(\n          this.position.viewNode as Element,\n        ).marginBlockStart,\n      );\n      this.edge -= (column.vertical ? -1 : 1) * marginBlockStart;\n    } else if (\n      this.position.after &&\n      this.position.shadowContext?.root.id === \"table-cell\"\n    ) {\n      // Add table's borderBlockEnd etc. to the edge\n      const cell = column.element.parentElement;\n      const table = cell?.closest(\n        \"table, [style*='display: table;']\",\n      ) as HTMLElement;\n      if (table) {\n        const collapse = table.style.borderCollapse === \"collapse\";\n        let padding = 0;\n        let border = 0;\n        for (let elem = cell; elem; elem = elem.parentElement) {\n          const style = column.clientLayout.getElementComputedStyle(elem);\n          if (elem === cell || (elem === table && !collapse)) {\n            padding += column.parseComputedLength(style.paddingBlockEnd);\n          }\n          if (elem === table && !collapse) {\n            padding += column.parseComputedLength(\n              style.borderSpacing.replace(/^\\S+ (\\S+)$/, \"$1\"),\n            );\n          }\n          if (collapse) {\n            border = Math.max(\n              border,\n              column.parseComputedLength(style.borderBlockEndWidth),\n            );\n          } else if (elem === cell || elem === table) {\n            border += column.parseComputedLength(style.borderBlockEndWidth);\n          }\n          if (elem === table) break;\n        }\n        this.edge += (column.vertical ? -1 : 1) * (padding + border);\n      }\n    }\n\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  override getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /** @override */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /** @override */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /** @override */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.layoutContext.processFragmentedBlockEdge(nodeContext);\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /** @override */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /** @override */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /** @override */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  override startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, Layout } from \"./types\";\nimport { TokenType } from \"./css-tokenizer\";\n\nexport type ElementStyle = {\n  [key: string]:\n    | CascadeValue\n    | CascadeValue[]\n    | ElementStyleMap\n    | { matcher: Matchers.Matcher; styles: ElementStyle }[];\n};\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-autospace\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-fill-color\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-orientation\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing-trim\": true,\n  \"text-stroke-color\": true,\n  \"text-stroke-width\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n  \"http://www.w3.org/1998/Math/MathML\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map: { [key: string]: string } = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(\n    context: Exprs.Context,\n    propName?: string,\n    percentRef?: number,\n    vertical?: boolean,\n  ): Css.Val {\n    if (propName && Css.isCustomPropName(propName)) {\n      return this.value;\n    }\n    return evaluateCSSToCSS(\n      context,\n      this.value,\n      propName,\n      percentRef,\n      vertical,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  override getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  override filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  override increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((!tv || av.priority >= tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\n/**\n * setProp with priority checking.\n * If context is given it is same as\n * setProp(style, name, cascadeValues(context, getProp(style, name), value))\n */\nexport function setPropCascadeValue(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n  context?: Exprs.Context,\n): void {\n  if (!style) {\n    return;\n  }\n  if (!value) {\n    delete style[name];\n  } else {\n    const tv = style[name] as CascadeValue;\n    if (!tv || value.priority >= tv.priority) {\n      if (context) {\n        if (value.isEnabled(context)) {\n          style[name] = value.getBaseValue();\n        }\n      } else {\n        style[name] = value;\n      }\n    }\n  }\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) === \"_\" && name !== \"_viewConditionalStyles\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) !== \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name] || Css.isCustomPropName(name);\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): void {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyle }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyle;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const cascval = getProp(style, prop);\n      if (!cascval.isEnabled(context)) {\n        continue;\n      }\n      const av = cascval.increaseSpecificity(specificity);\n      setPropCascadeValue(target, prop, av, context);\n\n      // Expand shorthand property (its value contains variables).\n      const propListLH = (\n        context as Exprs.Context & {\n          style: { validatorSet: CssValidator.ValidatorSet };\n        }\n      ).style?.validatorSet.shorthands[prop]?.propList;\n      if (propListLH) {\n        for (const propLH of propListLH) {\n          const avLH = new CascadeValue(Css.empty, av.priority);\n          setPropCascadeValue(target, propLH, avLH, context);\n        }\n      }\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit === \"em\" ||\n      numeric.unit === \"ex\" ||\n      numeric.unit === \"rem\" ||\n      numeric.unit === \"lh\" ||\n      numeric.unit === \"rlh\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    }\n    return numeric;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else if (unit === \"rlh\") {\n    return new Css.Numeric(num * context.rootLineHeight, \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  override mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  override clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly localName: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(\n    public readonly epubTypePatt: RegExp,\n    public readonly targetLocalName?: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem instanceof HTMLAnchorElement) {\n      if (elem.hash && elem.href == elem.baseURI + elem.hash) {\n        const id = elem.hash.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (\n          target &&\n          (!this.targetLocalName || target.localName == this.targetLocalName)\n        ) {\n          const epubType =\n            target.getAttributeNS(Base.NS.epub, \"type\") ||\n            target.getAttribute(\"epub:type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nfunction checkAttribute(\n  element: Element,\n  ns: string | null,\n  name: string,\n  pred: (element: Element, ns: string, name: string) => boolean,\n): boolean {\n  if (!element) {\n    return false;\n  }\n  if (ns !== null) {\n    return pred(element, ns, name);\n  }\n  // For wildcard namespace\n  for (const qname of element.getAttributeNames()) {\n    if (qname === name || qname.endsWith(`:${name}`)) {\n      if (\n        pred(\n          element,\n          qname === name ? \"\" : element.lookupNamespaceURI(qname.split(\":\")[0]),\n          name,\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      checkAttribute(\n        cascadeInstance.currentElement,\n        this.ns,\n        this.name,\n        (element, ns, name) => element.hasAttributeNS(ns, name),\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      checkAttribute(\n        cascadeInstance.currentElement,\n        this.ns,\n        this.name,\n        (element, ns, name) => element.getAttributeNS(ns, name) == this.value,\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  override makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      checkAttribute(\n        cascadeInstance.currentElement,\n        this.ns,\n        this.name,\n        (element, ns, name) =>\n          !!supportedNamespaces[element.getAttributeNS(ns, name)],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 0;\n  }\n\n  override makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (\n      checkAttribute(\n        cascadeInstance.currentElement,\n        this.ns,\n        this.name,\n        (element, ns, name) =>\n          !!element.getAttributeNS(ns, name)?.match(this.regexp),\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  override getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  override getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  override clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\n/**\n * Cascade Action for :is() and similar pseudo-classes\n */\nexport class MatchesAction extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstActions: CascadeAction[] = [];\n\n  constructor(chains: ChainedAction[][]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    for (const chain of chains) {\n      this.firstActions.push(chainActions(chain, this.checkAppliedAction));\n    }\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (const firstAction of this.firstActions) {\n      firstAction.apply(cascadeInstance);\n      if (this.checkAppliedAction.applied) {\n        break;\n      }\n    }\n    if (this.checkAppliedAction.applied === this.positive()) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  override getPriority(): number {\n    return Math.max(\n      ...this.firstActions.map((firstAction) =>\n        firstAction instanceof ChainedAction ? firstAction.getPriority() : 0,\n      ),\n    );\n  }\n\n  positive(): boolean {\n    return true;\n  }\n\n  relational(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Action for :not() pseudo-class\n */\nexport class MatchesNoneAction extends MatchesAction {\n  override positive(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Action for :has() pseudo-class\n */\nexport class MatchesRelationalAction extends MatchesAction {\n  constructor(public selectorTexts: string[]) {\n    super([]);\n  }\n\n  override apply(cascadeInstance: CascadeInstance): void {\n    for (const selectorText of this.selectorTexts) {\n      let selectorWithScope: string;\n      let scopingRoot: ParentNode;\n      if (/^\\s*[+~]/.test(selectorText)) {\n        // :has(+ F) or :has(~ F)\n        scopingRoot = cascadeInstance.currentElement.parentNode;\n        const index = Array.from(scopingRoot.children).indexOf(\n          cascadeInstance.currentElement,\n        );\n        selectorWithScope = `:scope > :nth-child(${index + 1}) ${selectorText}`;\n      } else {\n        // :has(F) or :has(> F)\n        scopingRoot = cascadeInstance.currentElement;\n        selectorWithScope = `:scope ${selectorText}`;\n      }\n      try {\n        if (scopingRoot.querySelector(selectorWithScope)) {\n          this.checkAppliedAction.apply(cascadeInstance);\n          break;\n        }\n      } catch (e) {}\n    }\n    if (this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  override relational(): boolean {\n    return true;\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /** @override */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /** @override */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /** @override */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: CssStyler.AbstractStyler): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    elementOffset: number,\n  ): void;\n\n  /**\n   * Get value of the CSS element() function\n   * https://drafts.csswg.org/css-gcpm-3/#running-elements\n   */\n  getRunningElementVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set running element\n   * https://drafts.csswg.org/css-gcpm-3/#running-elements\n   */\n  setRunningElement(name: string, elementOffset: number): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n\n    return new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n  }\n\n  /**\n   * CSS `element()` function\n   * https://drafts.csswg.org/css-gcpm-3/#running-elements\n   */\n  visitFuncElement(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n\n    return new Css.Expr(\n      this.counterResolver.getRunningElementVal(name, retrievePosition),\n    );\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n        stringValue = this.element.textContent;\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val = (pseudos?.[pseudoName]?.[\"content\"] as CascadeValue)\n            ?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n      case \"first-letter\":\n        {\n          // Respect ::before/after pseudo-elements (Issue #1174)\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const r = (\n            getStringValueFromCssContentVal(\n              (pseudos?.[\"before\"]?.[\"content\"] as CascadeValue)?.value,\n            ) ||\n            this.element.textContent ||\n            getStringValueFromCssContentVal(\n              (pseudos?.[\"after\"]?.[\"content\"] as CascadeValue)?.value,\n            )\n          ).match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * CSS `leader()` function\n   * https://www.w3.org/TR/css-content-3/#leaders\n   */\n  visitFuncLeader(values: Css.Val[]): Css.Val {\n    let leader: string = \"\";\n    if (values[0] instanceof Css.Ident) {\n      switch (values[0].stringValue()) {\n        case \"dotted\":\n          leader = \".\";\n          break;\n        case \"solid\":\n          leader = \"_\";\n          break;\n        case \"space\":\n          leader = \" \";\n          break;\n      }\n    } else if (values[0] instanceof Css.Str) {\n      leader = values[0].stringValue();\n    }\n    if (leader.length == 0) {\n      return new Css.Str(\"\");\n    }\n    return new Css.Expr(new Exprs.Native(null, () => leader, \"viv-leader\"));\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"element\":\n        if (func.values.length <= 2) {\n          return this.visitFuncElement(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n      case \"leader\":\n        if (func.values.length <= 1) {\n          return this.visitFuncLeader(func.values);\n        }\n        break;\n    }\n    // Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return func;\n  }\n}\n\n/**\n * POST_LAYOUT_BLOCK hook function for CSS leader()\n * @param nodeContext\n * @param checkPoints\n * @param column\n */\nconst postLayoutBlockLeader: Plugin.PostLayoutBlockHook = (\n  nodeContext: Vtree.NodeContext,\n  checkPoints: Vtree.NodeContext[],\n  column: Layout.Column,\n) => {\n  const leaders: Vtree.NodeContext[] = checkPoints.filter(\n    (c) =>\n      c.after &&\n      c.viewNode.nodeType === 1 &&\n      (c.viewNode as Element).getAttribute(\"data-viv-leader\"),\n  );\n  for (const c of leaders) {\n    // we want to access the bottom block element, which contains single leader().\n    let container = c.parent;\n    while (container && container.inline) {\n      container = container.parent;\n    }\n    const leaderElem = c.viewNode as HTMLElement;\n    const pseudoAfter = leaderElem.parentElement;\n    const leader = leaderElem.getAttribute(\"data-viv-leader-value\");\n    const previous = leaderElem.textContent || leader;\n    const { writingMode, direction, marginInlineEnd } =\n      column.clientLayout.getElementComputedStyle(pseudoAfter);\n\n    function setLeaderTextContent(leaderStr: string): void {\n      if (direction === \"rtl\") {\n        // in RTL direction, enclose the leader with U+200F (RIGHT-TO-LEFT MARK)\n        // to ensure RTL order around the leader.\n        const RLM = \"\\u200f\";\n        leaderElem.textContent =\n          (leaderStr.startsWith(RLM) ? \"\" : RLM) +\n          leaderStr +\n          (leaderStr.endsWith(RLM) ? \"\" : RLM);\n      } else {\n        leaderElem.textContent = leaderStr;\n      }\n    }\n\n    // prevent leader layout problem (Issue #1117)\n    leaderElem.style.marginInlineStart = \"1px\";\n\n    // reset the expanded leader\n    setLeaderTextContent(leader);\n    // setting inline-block removes the pseudo CONTENT from normal text flow\n    pseudoAfter.style.display = \"inline-block\";\n    pseudoAfter.style.textIndent = \"0\"; // cancel inherited text-indent\n\n    const box = column.clientLayout.getElementClientRect(\n      container.viewNode as Element,\n    );\n    const innerInit = column.clientLayout.getElementClientRect(pseudoAfter);\n    const innerMarginInlineEnd = column.parseComputedLength(marginInlineEnd);\n    // capture the line boundary\n    // Some leader text (\"_\" e.g.) creates higher top than container.\n    if (writingMode === \"vertical-rl\" || writingMode === \"vertical-lr\") {\n      if (direction === \"rtl\") {\n        box.top += innerMarginInlineEnd;\n      } else {\n        box.bottom -= innerMarginInlineEnd;\n      }\n      box.left = innerInit.left;\n      box.right = innerInit.right;\n      box.top = Math.min(innerInit.top, box.top);\n      box.bottom = Math.max(innerInit.bottom, box.bottom);\n    } else {\n      if (direction === \"rtl\") {\n        box.left += innerMarginInlineEnd;\n      } else {\n        box.right -= innerMarginInlineEnd;\n      }\n      box.top = innerInit.top;\n      box.bottom = innerInit.bottom;\n      box.left = Math.min(innerInit.left, box.left);\n      box.right = Math.max(innerInit.right, box.right);\n    }\n\n    function overrun() {\n      const inner = column.clientLayout.getElementClientRect(pseudoAfter);\n      if (\n        box.left > inner.left ||\n        box.right < inner.right ||\n        box.top > inner.top ||\n        box.bottom < inner.bottom\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    function setLeader() {\n      // min-max search\n      let lower: number;\n      let upper: number;\n      setLeaderTextContent(previous);\n      if (overrun()) {\n        lower = 1;\n        upper = previous.length / leader.length;\n      } else {\n        lower = previous.length / leader.length;\n        upper = lower;\n        for (let i = 0; i < 16; i++) {\n          let templeader = previous;\n          for (let j = 0; j < 1 << i; j++) {\n            templeader += leader;\n          }\n          setLeaderTextContent(templeader);\n          if (overrun()) {\n            upper += 1 << i;\n            break;\n          }\n        }\n      }\n      // leader is set to overrun state here\n      for (let i = 0; i < 16; i++) {\n        let templeader = \"\";\n        const mid = Math.floor((lower + upper) / 2);\n        for (let j = 0; j < mid; j++) {\n          templeader += leader;\n        }\n        setLeaderTextContent(templeader);\n        if (overrun()) {\n          upper = mid;\n        } else {\n          if (lower == mid) {\n            return;\n          }\n          lower = mid;\n        }\n      }\n      setLeaderTextContent(leader);\n    }\n\n    // set the expanded leader\n    setLeader();\n\n    // Without inline-end, we use margin-inline-start to adjust the position.\n    // To get the margin size, set float, calculate then cancel float.\n    const innerInline = column.clientLayout.getElementClientRect(pseudoAfter);\n    if (direction == \"rtl\") {\n      pseudoAfter.style.float = \"left\";\n    } else {\n      pseudoAfter.style.float = \"right\";\n    }\n    const innerAligned = column.clientLayout.getElementClientRect(pseudoAfter);\n    // When float is applied, the content will be removed from the normal\n    // text flow, and box inset will be also removed.\n    // When content comes back to the normal text flow, then inset effects again.\n    function getInset(side: string): number {\n      let inset = 0;\n      let p = pseudoAfter.parentElement;\n      while (p && p !== container.viewNode) {\n        inset += column.getComputedInsets(p)[side];\n        p = p.parentElement;\n      }\n      return inset;\n    }\n    let padding = 0;\n    if (direction == \"rtl\") {\n      if (writingMode == \"vertical-rl\" || writingMode == \"vertical-lr\") {\n        padding = innerInline.top - innerAligned.top - getInset(\"top\");\n      } else {\n        padding = innerInline.left - innerAligned.left - getInset(\"left\");\n      }\n    } else {\n      if (writingMode == \"vertical-rl\" || writingMode == \"vertical-lr\") {\n        padding = innerAligned.bottom - innerInline.bottom - getInset(\"bottom\");\n      } else {\n        padding = innerAligned.right - innerInline.right - getInset(\"right\");\n      }\n    }\n    padding = Math.max(0, padding - 0.1); // prevent line wrapping (Issue #1112)\n    pseudoAfter.style.float = \"\";\n    leaderElem.style.marginInlineStart = `${padding}px`;\n  }\n};\n\nPlugin.registerHook(Plugin.HOOKS.POST_LAYOUT_BLOCK, postLayoutBlockLeader);\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 0x100000;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    if (this.counters[counterName]) {\n      if (scoping[counterName]) {\n        this.counters[counterName].pop();\n      }\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal: Css.Val = Css.ident.inline;\n    const display = props[\"display\"] as CascadeValue;\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    // Ignore counter-* on 'display: none' elements and their descendants\n    if (displayVal === Css.ident.none) {\n      this.currentElement.setAttribute(\"data-viv-display-none\", \"true\");\n      this.counterScoping.push(null);\n      return;\n    } else if (this.currentElement.closest(\"[data-viv-display-none]\")) {\n      this.counterScoping.push(null);\n      return;\n    }\n    let floatVal: Css.Val = Css.ident.inline;\n    const float = props[\"float\"] as CascadeValue;\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"] as CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"] as CascadeValue;\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"] as CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"list-item\"] = incrementMap[\"list-item\"] ?? 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!setMap) {\n          setMap = {};\n        }\n        setMap[\"list-item\"] = (this.currentElement as any).value;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = (\n          this.currentStyle[\"counter-increment\"] as CascadeValue\n        )?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            (incrPropValue instanceof Css.SpaceList &&\n              incrPropValue.values.includes(Css.ident.footnote))\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet = props[\"string-set\"] as CascadeValue;\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(\n          name,\n          stringValue,\n          this.currentElementOffset,\n        );\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  /**\n   * Process CSS running elements\n   * https://drafts.csswg.org/css-gcpm-3/#running-elements\n   */\n  setRunningElement(props: ElementStyle): void {\n    const position = props[\"position\"] as CascadeValue;\n    if (\n      position?.value instanceof Css.Func &&\n      position.value.name === \"running\"\n    ) {\n      const name = position.value.values[0].stringValue();\n      this.counterResolver.setRunningElement(name, this.currentElementOffset);\n    }\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    const content = pseudoprops[\"content\"] as CascadeValue;\n    if (content) {\n      pseudoprops[\"content\"] = content.filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    styler: CssStyler.AbstractStyler,\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n\n    // Substitute var()\n    this.applyVarFilter([this.currentStyle], styler, element);\n\n    // Calculate calc()\n    this.applyCalcFilter(this.currentStyle, this.context);\n\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"] as CascadeValue;\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (\n          quotesVal === Css.ident.auto ||\n          quotesVal === Css.ident.initial\n        ) {\n          this.quotes = [\n            new Css.Str(\"\\u201c\"),\n            new Css.Str(\"\\u201d\"),\n            new Css.Str(\"\\u2018\"),\n            new Css.Str(\"\\u2019\"),\n          ];\n          // FIXME: quotes:auto should be based on the content language\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (\n            ((pseudoName === \"before\" || pseudoName === \"after\") &&\n              !Vtree.nonTrivialContent(\n                (pseudoProps[\"content\"] as CascadeValue)?.value,\n              )) ||\n            ((pseudoName === \"footnote-call\" ||\n              pseudoName === \"footnote-marker\") &&\n              getProp(this.currentStyle, \"float\")?.value !== Css.ident.footnote)\n          ) {\n            delete pseudos[pseudoName];\n          } else if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    // process CSS running elements\n    this.setRunningElement(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(\n    visitor: Css.Visitor,\n    elementStyle: ElementStyle,\n  ): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName) && !Css.isCustomPropName(propName)) {\n        elementStyle[propName] = (\n          elementStyle[propName] as CascadeValue\n        ).filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element: Element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  /**\n   * Substitute all variables in property values in elementStyle\n   */\n  applyVarFilter(\n    elementStyles: ElementStyle[],\n    styler: CssStyler.AbstractStyler,\n    element: Element | null,\n  ): void {\n    const elementStyle = elementStyles[0];\n    const visitor = new VarFilterVisitor(elementStyles, styler, element);\n    const LIMIT_LOOP = 32; // prevent cyclic or too deep dependency\n    const propsLH: ElementStyle = {}; // for shorthand -> longhand cascade\n\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyVarFilter(\n            [pseudoMap[pseudoName], ...elementStyles],\n            styler,\n            element,\n          );\n        }\n      } else if (isPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        let value = cascVal.value;\n\n        for (let i = 0; ; i++) {\n          if (i >= LIMIT_LOOP) {\n            value = Css.empty;\n            break;\n          }\n          const after = value.visit(visitor);\n          if (visitor.error) {\n            // invalid or unresolved variable found\n            value = Css.empty;\n            visitor.error = false;\n            break;\n          }\n          if (after === value) {\n            // no variable, or all variables substituted\n            break;\n          }\n          // variables substituted, but the substituted value may contain variables\n          value = after;\n        }\n        if (value !== cascVal.value) {\n          // all variables substituted\n          const validatorSet = (styler as any)\n            .validatorSet as CssValidator.ValidatorSet;\n          const shorthand = validatorSet?.shorthands[name]?.clone();\n          if (shorthand) {\n            if (Css.isDefaultingValue(value)) {\n              for (const nameLH of shorthand.propList) {\n                const avLH = new CascadeValue(value, cascVal.priority);\n                const tvLH = getProp(elementStyle, nameLH);\n                setProp(\n                  propsLH,\n                  nameLH,\n                  cascadeValues(this.context, tvLH, avLH),\n                );\n              }\n              delete elementStyle[name];\n            } else {\n              // The var()-substituted value may have complex structure\n              // (e.g. SpaceList in SpaceList) that ShorthandValidator\n              // cannot handle, so use toString and parseValue.\n              const valueSH = CssParser.parseValue(\n                (styler as any).scope,\n                new CssTokenizer.Tokenizer(value.toString(), null),\n                \"\",\n              );\n              if (valueSH) {\n                valueSH.visit(shorthand);\n                if (!shorthand.error) {\n                  for (const nameLH of shorthand.propList) {\n                    const avLH = new CascadeValue(\n                      shorthand.values[nameLH] ??\n                        validatorSet.defaultValues[nameLH] ??\n                        Css.ident.initial,\n                      cascVal.priority,\n                    );\n                    const tvLH = getProp(elementStyle, nameLH);\n                    setProp(\n                      propsLH,\n                      nameLH,\n                      cascadeValues(this.context, tvLH, avLH),\n                    );\n                  }\n                  delete elementStyle[name];\n                }\n              }\n            }\n          } else {\n            elementStyle[name] = new CascadeValue(value, cascVal.priority);\n          }\n        }\n        if (propsLH[name]) {\n          const av = getProp(elementStyle, name);\n          if (av && av.value !== Css.empty) {\n            setPropCascadeValue(propsLH, name, av, this.context);\n          }\n        }\n      }\n    }\n    // Update elementStyle with shorthand -> longhand cascade result\n    for (const name in propsLH) {\n      elementStyle[name] = propsLH[name];\n    }\n  }\n\n  /**\n   * Calculate all calc() in property values in elementStyle\n   */\n  applyCalcFilter(elementStyle: ElementStyle, context: Exprs.Context): void {\n    const visitor = new CalcFilterVisitor(context);\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyCalcFilter(pseudoMap[pseudoName], context);\n        }\n      } else if (isPropName(name) && !Css.isCustomPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        const value = cascVal.value.visit(visitor);\n        if (value !== cascVal.value) {\n          elementStyle[name] = new CascadeValue(value, cascVal.priority);\n        }\n      }\n    }\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY: string[] = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\", // content\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n  invalid: boolean = false; // for `@supports selector()` check\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n        ? uaBaseCascade.clone()\n        : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    if (name) {\n      this.specificity += 1;\n    }\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  invalidSelector(message: string): void {\n    Logging.logger.warn(message);\n    this.chain.push(new CheckConditionAction(\"\")); // always fails\n    this.setInvalid();\n  }\n\n  setInvalid(): void {\n    this.invalid = true;\n    for (\n      let handler: CascadeParserHandler = this;\n      handler instanceof MatchesParameterParserHandler;\n      handler = handler.parent\n    ) {\n      handler.parent.invalid = true;\n    }\n  }\n\n  override classSelector(name: string): void {\n    if (this.pseudoelement) {\n      this.invalidSelector(`::${this.pseudoelement} followed by .${name}`);\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    if (this.pseudoelement) {\n      this.invalidSelector(`::${this.pseudoelement} followed by :${name}`);\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n      case \"scope\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length >= 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`);\n          const targetLocalName = params[1] as string;\n          this.chain.push(new CheckTargetEpubTypeAction(patt, targetLocalName));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default: // always fails\n        this.invalidSelector(`Unknown pseudo-class :${name}`);\n        return;\n    }\n    this.specificity += 256;\n  }\n\n  override pseudoelementSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          this.invalidSelector(\n            `Double pseudo-element ::${this.pseudoelement}::${name}`,\n          );\n          return;\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              this.invalidSelector(\n                `Double pseudo-element ::${this.pseudoelement}::${name}`,\n              );\n              return;\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default: // always fails\n        this.invalidSelector(`Unknown pseudo-element ::${name}`);\n        return;\n    }\n    this.specificity += 1;\n  }\n\n  override idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  override attributeSelector(\n    ns: string,\n    name: string,\n    op: TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          this.invalidSelector(`Unsupported :: attr selector op: ${value}`);\n          return;\n        }\n        break;\n      default:\n        this.invalidSelector(`Unsupported attr selector: ${op}`);\n        return;\n    }\n    this.chain.push(action);\n  }\n\n  override descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  override nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  override startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n    this.invalid = false;\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n    this.setInvalid();\n  }\n\n  override startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  override startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  override endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      this.processChain(this.makeApplyRuleAction(this.specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const priority = specificity + this.cascade.nextOrder();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, priority, this.condition)\n      : new CascadeValue(value, priority);\n    setPropCascadeValue(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  override startFuncWithSelector(funcName: string): void {\n    let parameterParserHandler: MatchesParameterParserHandler;\n    switch (funcName) {\n      case \"is\":\n        parameterParserHandler = new MatchesParameterParserHandler(this);\n        break;\n      case \"not\":\n        parameterParserHandler = new NotParameterParserHandler(this);\n        break;\n      case \"where\":\n        parameterParserHandler = new WhereParameterParserHandler(this);\n        break;\n      case \"has\":\n        parameterParserHandler = new HasParameterParserHandler(this);\n        break;\n    }\n    if (parameterParserHandler) {\n      parameterParserHandler.startSelectorRule();\n      this.owner.pushHandler(parameterParserHandler);\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\n/**\n * Cascade Parser Handler for :is() and similar pseudo-classes parameter\n */\nexport class MatchesParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n  chains: ChainedAction[][] = [];\n  maxSpecificity: number = 0;\n  selectorTexts: string[] = [];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  override nextSelector(): void {\n    if (this.chain) {\n      this.chains.push(this.chain);\n    }\n    this.maxSpecificity = Math.max(this.maxSpecificity, this.specificity);\n    this.chain = [];\n    this.pseudoelement = null;\n    this.viewConditionId = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n  }\n\n  override endFuncWithSelector(): void {\n    if (this.chain) {\n      this.chains.push(this.chain);\n    }\n    if (this.chains.length > 0) {\n      this.maxSpecificity = Math.max(this.maxSpecificity, this.specificity);\n      this.parentChain.push(\n        this.relational()\n          ? new MatchesRelationalAction(this.selectorTexts)\n          : this.positive()\n            ? new MatchesAction(this.chains)\n            : new MatchesNoneAction(this.chains),\n      );\n      if (this.increasingSpecificity()) {\n        this.parent.specificity += this.maxSpecificity;\n      }\n    } else {\n      // func argument is empty or all invalid\n      this.parentChain.push(new CheckConditionAction(\"\")); // always fails\n    }\n\n    this.owner.popHandler();\n  }\n\n  override startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  override error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.chain = null;\n    this.pseudoelement = null;\n    this.viewConditionId = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n\n    let forgiving = false;\n    for (\n      let handler: CascadeParserHandler = this;\n      handler instanceof MatchesParameterParserHandler;\n      handler = handler.parent\n    ) {\n      if (handler.forgiving()) {\n        forgiving = true;\n        break;\n      }\n    }\n    if (!forgiving) {\n      this.owner.popHandler();\n    }\n  }\n\n  override pushSelectorText(selectorText: string): void {\n    // selectorText is used only for relational pseudo-class `:has()`\n    if (this.chain && this.relational()) {\n      this.selectorTexts.push(selectorText);\n    }\n  }\n\n  /**\n   * @returns true unless this is `:not()`\n   */\n  positive(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true unless this is `:where()`\n   */\n  increasingSpecificity(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if this takes a forgiving selector list (:is/where/has)\n   */\n  forgiving(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if this is `:has()`\n   */\n  relational(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Parser Handler for :not() pseudo-class parameter\n */\nexport class NotParameterParserHandler extends MatchesParameterParserHandler {\n  override positive(): boolean {\n    return false;\n  }\n\n  forgiving(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Parser Handler for :where() pseudo-class parameter\n */\nexport class WhereParameterParserHandler extends MatchesParameterParserHandler {\n  override increasingSpecificity(): boolean {\n    return false;\n  }\n}\n\n/**\n * Cascade Parser Handler for :has() pseudo-class parameter\n */\nexport class HasParameterParserHandler extends MatchesParameterParserHandler {\n  override relational(): boolean {\n    return true;\n  }\n}\n\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly ruleType?: string,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setPropCascadeValue(this.elementStyle, name, cascval);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setPropCascadeValue(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (\n      writingMode &&\n      writingMode !== Css.ident.inherit &&\n      writingMode !== Css.ident.revert &&\n      writingMode !== Css.ident.unset\n    ) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (\n      direction &&\n      direction !== Css.ident.inherit &&\n      direction !== Css.ident.revert &&\n      direction !== Css.ident.unset\n    ) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n      ? couplingMapHorRtl\n      : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n\n/**\n * Convert var() to its value\n */\nexport class VarFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public elementStyles: ElementStyle[],\n    public styler: CssStyler.AbstractStyler,\n    public element: Element | null,\n  ) {\n    super();\n  }\n\n  private getVarValue(name: string): Css.Val {\n    let elem = this.element ?? ((this.styler as any).root as Element);\n    if (this.elementStyles?.length) {\n      for (const style of this.elementStyles) {\n        const val = (style[name] as CascadeValue)?.value;\n        if (val) {\n          return val;\n        }\n      }\n      if (this.element) {\n        elem = this.element.parentElement;\n      }\n    }\n    for (; elem; elem = elem.parentElement) {\n      const val = (this.styler.getStyle(elem, false)?.[name] as CascadeValue)\n        ?.value;\n      if (val) {\n        return val;\n      }\n    }\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"var\") {\n      return super.visitFunc(func);\n    }\n    const name = func.values[0] instanceof Css.Ident && func.values[0].name;\n    if (!name || !Css.isCustomPropName(name)) {\n      this.error = true;\n      return Css.empty;\n    }\n    const varVal = this.getVarValue(name);\n    if (varVal) {\n      return varVal;\n    }\n    // fallback value\n    if (func.values.length < 2) {\n      this.error = true;\n      return Css.empty;\n    }\n    if (func.values.length === 2) {\n      return func.values[1];\n    } else {\n      return new Css.CommaList(func.values.slice(1));\n    }\n  }\n}\n\n/**\n * Convert calc() to its value\n */\nexport class CalcFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public context: Exprs.Context,\n    public resolveViewportUnit?: boolean,\n    public percentRef?: number,\n    public vertical?: boolean,\n  ) {\n    super();\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    // convert func args\n    let value = super.visitFunc(func);\n    if (func.name !== \"calc\") {\n      return value;\n    }\n    const exprText = value.toString().replace(/^calc\\b/, \"-epubx-expr\");\n    if (\n      /\\d(%|em|ex|cap|ch|ic|lh|p?v[whbi]|p?vmin|p?vmax)\\W|\\Wvar\\(\\s*--/i.test(\n        exprText,\n      )\n    ) {\n      return value;\n    }\n    const exprVal = CssParser.parseValue(\n      this.context.rootScope,\n      new CssTokenizer.Tokenizer(exprText, null),\n      \"\",\n    );\n    if (exprVal instanceof Css.Expr) {\n      try {\n        const exprResult = exprVal.expr.evaluate(this.context);\n        if (typeof exprResult === \"number\" && !isNaN(exprResult)) {\n          if (/\\d(px|in|pt|pc|cm|mm|q|rem|rlh)\\W/i.test(exprText)) {\n            // length value\n            value = new Css.Numeric(exprResult, \"px\");\n          } else if (!/\\d[a-z]/i.test(exprText)) {\n            // unitless number\n            value = new Css.Num(exprResult);\n          }\n          // otherwise, keep the original calc() expression\n        }\n      } catch (err) {\n        Logging.logger.warn(err);\n      }\n    }\n    return value;\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (\n      this.resolveViewportUnit &&\n      (Exprs.isViewportRelativeLengthUnit(numeric.unit) ||\n        Exprs.isRootFontRelativeLengthUnit(numeric.unit))\n    ) {\n      return new Css.Numeric(\n        numeric.num *\n          this.context.queryUnitSize(numeric.unit, false, this.vertical),\n        \"px\",\n      );\n    }\n    if (typeof this.percentRef === \"number\" && numeric.unit === \"%\") {\n      return new Css.Numeric((numeric.num * this.percentRef) / 100, \"px\");\n    }\n    return numeric;\n  }\n}\n\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName?: string,\n  percentRef?: number,\n  vertical?: boolean,\n): Css.Val {\n  try {\n    if (val instanceof Css.Expr) {\n      if (\n        val.expr instanceof Exprs.Native &&\n        (val.expr.str.startsWith(\"named-string-\") ||\n          val.expr.str.startsWith(\"running-element-\"))\n      ) {\n        return val;\n      }\n      return CssParser.evaluateExprToCSS(context, val.expr, propName);\n    }\n    if (\n      val instanceof Css.Numeric ||\n      val instanceof Css.Func ||\n      val instanceof Css.SpaceList ||\n      val instanceof Css.CommaList\n    ) {\n      return val.visit(\n        new CalcFilterVisitor(context, true, percentRef, vertical),\n      );\n    }\n  } catch (err) {\n    Logging.logger.warn(err);\n    return Css.empty;\n  }\n  return val;\n}\n", "/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  forceEnd: boolean; // force-end\n  allowEnd: boolean; // allow-end\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  forceEnd: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n        ? Css.getName(value)\n        : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.forceEnd = true;\n          hangingPunctuation.allowEnd = false;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.forceEnd = false;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\nfunction isHangingPunctuationNone(\n  hangingPunctuation: HangingPunctuation,\n): boolean {\n  return (\n    !hangingPunctuation.first &&\n    !hangingPunctuation.last &&\n    !hangingPunctuation.forceEnd &&\n    !hangingPunctuation.allowEnd\n  );\n}\n\ntype SpacingTrim = {\n  trimStart: boolean; // trim-start\n  spaceFirst: boolean; // space-first\n  trimEnd: boolean; // trim-end\n  allowEnd: boolean; // allow-end\n  trimAdjacent: boolean; // trim-adjacent\n  // TODO: add support for:\n  //   trimAll: boolean; // trim-all\n};\n\n/**\n * text-spacing-trim: space-all\n * space-all = space-start space-end space-adjacent\n */\nconst SPACING_TRIM_NONE: SpacingTrim = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n};\n\n/**\n * text-spacing-trim: normal\n * normal = space-start allow-end trim-adjacent\n */\nconst SPACING_TRIM_NORMAL: SpacingTrim = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: true,\n  trimAdjacent: true,\n};\n\n/**\n * text-spacing-trim: trim-both\n * trim-both = trim-start trim-end trim-adjacent\n *\n * NOTE: Values `trim-auto` (deprecated) and `auto` are treated as `trim-both`.\n */\nconst SPACING_TRIM_BOTH: SpacingTrim = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n};\n\nfunction spacingTrimFromPropertyValue(value: PropertyValue): SpacingTrim {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n        ? Css.getName(value)\n        : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return SPACING_TRIM_NORMAL;\n  }\n  if (cssval === Css.ident.auto) {\n    return SPACING_TRIM_BOTH;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: SpacingTrim = Object.create(SPACING_TRIM_NORMAL);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-both\":\n        case \"trim-auto\":\n          return SPACING_TRIM_BOTH;\n        case \"space-all\":\n          return SPACING_TRIM_NONE;\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\ntype Autospace = {\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n  // TODO: add support for:\n  //   punctuation: boolean;\n  //   replace: boolean;\n};\n\n/**\n * text-autospace: no-autospace (none)\n */\nconst AUTOSPACE_NONE: Autospace = {\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-autospace: normal\n */\nconst AUTOSPACE_NORMAL: Autospace = {\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction autospaceFromPropertyValue(value: PropertyValue): Autospace {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n        ? Css.getName(value)\n        : Css.ident.normal;\n\n  if (cssval === Css.ident.normal || cssval === Css.ident.auto) {\n    return AUTOSPACE_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return AUTOSPACE_NONE;\n  }\n\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const autospace: Autospace = Object.create(AUTOSPACE_NONE);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"no-autospace\":\n          return AUTOSPACE_NONE;\n        case \"ideograph-alpha\":\n          autospace.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          autospace.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return autospace;\n}\n\nfunction isTextSpacingNone(\n  autospace: Autospace,\n  spacingTrim: SpacingTrim,\n): boolean {\n  return (\n    !autospace.ideographAlpha &&\n    !autospace.ideographNumeric &&\n    !spacingTrim.trimStart &&\n    !spacingTrim.spaceFirst &&\n    !spacingTrim.trimEnd &&\n    !spacingTrim.allowEnd &&\n    !spacingTrim.trimAdjacent\n  );\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nclass TextSpacingPolyfill {\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-autospace\", \"text-spacing-trim\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    if (!document.body) {\n      return;\n    }\n    this.preprocessForTextSpacing(document.body);\n  }\n\n  preprocessForTextSpacing(element: Element): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}\u3001\u3002\uFF0C\uFF0E\uFF1A\uFF1B\uFF64\uFF61\\u3000]\\p{M}*(?=\\P{M})|.(?=(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}\u3001\u3002\uFF0C\uFF0E\uFF1A\uFF1B\uFF64\uFF61\\u3000])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  processGeneratedContent(\n    element: HTMLElement,\n    autospaceVal: Css.Val,\n    spacingTrimVal: Css.Val,\n    hangingPunctuationVal: Css.Val,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    lang = normalizeLang(lang);\n    const autospace = autospaceFromPropertyValue(autospaceVal);\n    const spacingTrim = spacingTrimFromPropertyValue(spacingTrimVal);\n    const hangingPunctuation = hangingPunctuationFromPropertyValue(\n      hangingPunctuationVal,\n    );\n\n    if (\n      isHangingPunctuationNone(hangingPunctuation) &&\n      isTextSpacingNone(autospace, spacingTrim)\n    ) {\n      return;\n    }\n\n    this.preprocessForTextSpacing(element);\n\n    const whiteSpaceSave = element.style.whiteSpace;\n    if ((vertical ? element.offsetHeight : element.offsetWidth) === 0) {\n      // Prevent wrong line wrapping\n      element.style.whiteSpace = \"pre\";\n    }\n\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    let prevNode: Node = null;\n    let nextNode: Node = null;\n    for (let node = nodeIter.nextNode(); node; node = nextNode) {\n      nextNode = nodeIter.nextNode();\n      const isFirstInBlock = !prevNode;\n      const isFirstAfterForcedLineBreak =\n        !prevNode || /\\n$/.test(prevNode.textContent);\n      const isLastBeforeForcedLineBreak =\n        !nextNode || /^\\n/.test(nextNode.textContent);\n      const isLastInBlock = !nextNode;\n      this.processTextSpacing(\n        node,\n        isFirstInBlock || isFirstAfterForcedLineBreak,\n        isFirstInBlock,\n        isFirstAfterForcedLineBreak,\n        isLastBeforeForcedLineBreak,\n        isLastInBlock,\n        prevNode,\n        nextNode,\n        autospace,\n        spacingTrim,\n        hangingPunctuation,\n        lang,\n        vertical,\n      );\n      prevNode = node;\n    }\n\n    element.style.whiteSpace = whiteSpaceSave;\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): void {\n    const isFirstFragment =\n      !nodeContext ||\n      (nodeContext.fragmentIndex === 1 && checkIfFirstInBlock());\n    const isAfterForcedLineBreak =\n      isFirstFragment || checkIfAfterForcedLineBreak();\n\n    function isOutOfLine(node: Node): boolean {\n      if (node?.nodeType !== 1) {\n        return false;\n      }\n      const elem = node as HTMLElement;\n      if (elem.hasAttribute(Vtree.SPECIAL_ATTR)) {\n        return true;\n      }\n      const { position, float } = elem.style ?? {};\n      return (\n        position === \"absolute\" ||\n        position === \"fixed\" ||\n        (float && float !== \"none\")\n      );\n    }\n\n    function checkIfFirstInBlock(): boolean {\n      const p = checkPoints[0];\n      for (let pp = p; ; pp = pp.parent) {\n        if (!pp || !pp.inline) {\n          if (pp?.fragmentIndex !== 1) {\n            // This block is not the first fragment\n            return false;\n          }\n          break;\n        }\n      }\n      if (!p.inline) {\n        // This is at the start of the block\n        return true;\n      }\n      for (\n        let prev = p.viewNode.previousSibling;\n        prev;\n        prev = prev.previousSibling\n      ) {\n        if (Vtree.canIgnore(prev, p.whitespace)) {\n          continue;\n        }\n        if (!isOutOfLine(prev)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    function checkIfAfterForcedLineBreak(): boolean {\n      let p = checkPoints[0];\n      let prevNode: Node;\n      while (p && p.inline) {\n        prevNode = p.viewNode?.previousSibling;\n        if (prevNode) {\n          if (\n            prevNode.nodeType === 3 &&\n            /^[ \\t\\r\\n\\f]*$/.test(prevNode.textContent) &&\n            p.whitespace !== Vtree.Whitespace.PRESERVE\n          ) {\n            prevNode = prevNode.previousSibling;\n          }\n          if (prevNode) {\n            break;\n          }\n        }\n        p = p.parent;\n      }\n\n      while (prevNode) {\n        if (prevNode.nodeType === 1) {\n          if ((prevNode as Element).localName === \"br\") {\n            return true;\n          }\n          const display = (prevNode as HTMLElement).style?.display;\n          if (display && display !== \"inline\") {\n            return !/^(inline|ruby)\\b/.test(display);\n          }\n        } else if (prevNode.nodeType === 3) {\n          if (p.whitespace === Vtree.Whitespace.PRESERVE) {\n            if (/\\n$/.test(prevNode.textContent)) {\n              return true;\n            }\n          } else if (p.whitespace === Vtree.Whitespace.NEWLINE) {\n            if (/\\n[ \\t\\r\\n\\f]*$/.test(prevNode.textContent)) {\n              return true;\n            }\n          }\n        }\n        prevNode = prevNode.lastChild;\n      }\n      return false;\n    }\n\n    let iFirst = -1;\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        !Vtree.canIgnore(p.viewNode, p.whitespace)\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const autospace = autospaceFromPropertyValue(\n          p.inheritedProps[\"text-autospace\"],\n        );\n        const spacingTrim = spacingTrimFromPropertyValue(\n          p.inheritedProps[\"text-spacing-trim\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        if (\n          isHangingPunctuationNone(hangingPunctuation) &&\n          isTextSpacingNone(autospace, spacingTrim)\n        ) {\n          continue;\n        }\n        if (/\\b(flex|grid)\\b/.test(p.parent.display)) {\n          // Cannot process if parent is flex or grid. (Issue #926)\n          continue;\n        }\n\n        if (iFirst < 0) {\n          iFirst = i;\n        }\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstAfterBreak = i === iFirst;\n        let isFirstInBlock = i === iFirst && isFirstFragment;\n        let isFirstAfterForcedLineBreak =\n          i === iFirst && isAfterForcedLineBreak;\n        let isLastBeforeForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode?.nodeType === 1) {\n            return (prevP.viewNode as Element).localName === \"br\";\n          }\n          if (prevP.viewNode?.nodeType === 3) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n[ \\t\\r\\n\\f]*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (\n              (prevP.viewNode as Element).previousElementSibling?.localName ===\n              \"br\"\n            ) {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        function checkIfLastBeforeForcedLineBreak(\n          nextP: Vtree.NodeContext,\n        ): boolean {\n          if (nextP.viewNode?.nodeType === 1) {\n            return (nextP.viewNode as Element).localName === \"br\";\n          }\n          if (nextP.viewNode?.nodeType === 3) {\n            if (nextP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/^\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (nextP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/^[ \\t\\r\\n\\f]*\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (\n              (nextP.viewNode as Element).nextElementSibling?.localName === \"br\"\n            ) {\n              return Vtree.canIgnore(nextP.viewNode, nextP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && !/^(inline|ruby)\\b/.test(prevP.display)) ||\n            (prevP.viewNode?.nodeType === 1 &&\n              ((prevP.viewNode as Element).localName === \"br\" ||\n                Base.mediaTags[(prevP.viewNode as Element).localName]))\n          ) {\n            break;\n          }\n          if (prev === 0) {\n            isFirstAfterBreak = true;\n            if (isFirstFragment) {\n              isFirstInBlock = true;\n              isFirstAfterForcedLineBreak = true;\n            }\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (checkIfLastBeforeForcedLineBreak(nextP)) {\n            isLastBeforeForcedLineBreak = true;\n            break;\n          }\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && !/^(inline|ruby)\\b/.test(nextP.display)) ||\n            (nextP.viewNode?.nodeType === 1 &&\n              ((nextP.viewNode as Element).localName === \"br\" ||\n                Base.mediaTags[(nextP.viewNode as Element).localName]))\n          ) {\n            if (\n              next === checkPoints.length - 1 &&\n              isOutOfLine(nextP.viewNode)\n            ) {\n              isLastInBlock = true;\n            }\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastBeforeForcedLineBreak = true;\n            isLastInBlock = true;\n            for (\n              let nextNext = nextP.viewNode.nextSibling;\n              nextNext;\n              nextNext = nextNext.nextSibling\n            ) {\n              if (!isOutOfLine(nextNext)) {\n                isLastInBlock = false;\n                break;\n              }\n            }\n          }\n        }\n        if (p.parent?.display === \"inline-block\") {\n          if (!isFirstInBlock) {\n            let firstInInlineBlock = p.parent.viewNode.firstChild;\n            while (Vtree.canIgnore(firstInInlineBlock, p.whitespace)) {\n              firstInInlineBlock = firstInInlineBlock.nextSibling;\n            }\n            if (p.viewNode === firstInInlineBlock) {\n              isFirstInBlock = true;\n            }\n          }\n          if (!isLastInBlock) {\n            let lastInInlineBlock = p.parent.viewNode.lastChild;\n            while (Vtree.canIgnore(lastInInlineBlock, p.whitespace)) {\n              lastInInlineBlock = lastInInlineBlock.previousSibling;\n            }\n            if (p.viewNode === lastInInlineBlock) {\n              isLastInBlock = true;\n            }\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstAfterBreak,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastBeforeForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          autospace,\n          spacingTrim,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstAfterBreak: boolean,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastBeforeForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    autospace: Autospace,\n    spacingTrim: SpacingTrim,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n    let currRange: Range;\n    let prevRange: Range;\n    let nextRange: Range;\n\n    function isAtStartOfLine(): boolean {\n      if (isFirstAfterBreak) {\n        return true;\n      }\n      if (!prevNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!prevRange) {\n        prevRange = document.createRange();\n        prevRange.selectNode(prevNode);\n      }\n      const prevRects = prevRange.getClientRects();\n      const prevRect = prevRects[prevRects.length - 1];\n      if (!rect || !prevRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top < prevRect.top + prevRect.height - rect.width ||\n            rect.left + rect.width < prevRect.left + rect.width / 10 ||\n            rect.left > prevRect.left + prevRect.width - rect.width / 10\n        : rect.left < prevRect.left + prevRect.width - rect.height ||\n            rect.top > prevRect.top + prevRect.height - rect.height / 10 ||\n            rect.top + rect.height < prevRect.top + rect.height / 10;\n    }\n\n    function isAtEndOfLine(): boolean {\n      if (!nextNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!nextRange) {\n        nextRange = document.createRange();\n        nextRange.selectNode(nextNode);\n      }\n      const nextRect = nextRange.getClientRects()[0];\n      if (!rect || !nextRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top + rect.height > nextRect.top + rect.width ||\n            rect.left > nextRect.left + nextRect.width - rect.width / 10 ||\n            rect.left + rect.width < nextRect.left + rect.width / 10\n        : rect.left + rect.width > nextRect.left + rect.height ||\n            rect.top + rect.height < nextRect.top + rect.height / 10 ||\n            rect.top > nextRect.top + nextRect.height - rect.height / 10;\n    }\n\n    let punctProcessing = false;\n    let hangingFirst = false;\n    let hangingLast = false;\n    let hangingEnd = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"\\u3000]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hangingFirst = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingLast = true;\n    } else if (\n      (hangingPunctuation.forceEnd || hangingPunctuation.allowEnd) &&\n      /^[\u3001\u3002\uFF0C\uFF0E\uFF64\uFF61]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingEnd = true;\n    } else if (\n      (spacingTrim.trimStart ||\n        spacingTrim.spaceFirst ||\n        spacingTrim.trimAdjacent) &&\n      /^[\u2018\u201C\u301D\uFF08\uFF3B\uFF5B\uFF5F\u2329\u3008\u300A\u300C\u300E\u3010\u3014\u3016\u3018\u301A]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (spacingTrim.trimEnd ||\n        spacingTrim.allowEnd ||\n        spacingTrim.trimAdjacent) &&\n      (/^[\u2019\u201D\u301E\u301F\uFF09\uFF3D\uFF5D\uFF60\u232A\u3009\u300B\u300D\u300F\u3011\u3015\u3017\u3019\u301B]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[\uFF1A\uFF1B]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[\u3001\u3002\uFF0C\uFF0E]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    if (punctProcessing) {\n      if (textNode.parentElement.localName === \"viv-ts-inner\") {\n        // Already processed\n        return;\n      }\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      // Check if the punctuation is almost full width\n      function checkFullWidth(elem: HTMLElement): boolean {\n        const fontSize = parseFloat(\n          document.defaultView.getComputedStyle(elem).fontSize,\n        );\n        const fullWidthThreshold = fontSize * 0.7;\n        return (\n          (vertical ? elem.offsetHeight : elem.offsetWidth) > fullWidthThreshold\n        );\n      }\n      const isFullWidth = checkFullWidth(innerElem);\n\n      function linePosition(): number {\n        return vertical ? outerElem.offsetLeft : outerElem.offsetTop;\n      }\n\n      if (isFullWidth || hangingFirst || hangingLast || hangingEnd) {\n        if (tagName === \"viv-ts-open\") {\n          if (hangingFirst) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (spacingTrim.trimStart) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            !(spacingTrim.trimStart || spacingTrim.spaceFirst) &&\n            isAtStartOfLine()\n          ) {\n            outerElem.className = \"viv-ts-space\";\n          } else if (\n            spacingTrim.trimAdjacent &&\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000\uFF1A\uFF1B\u3001\u3002\uFF0C\uFF0E]\\p{M}*$/u.test(\n              prevNode.textContent,\n            ) &&\n            // exclude non-fullwidth closing punctuations (Issue #1003)\n            (!/[\\p{Pe}\\p{Pf}]\\p{M}*$/u.test(prevNode.textContent) ||\n              (prevNode.parentElement.localName === \"viv-ts-inner\" &&\n                checkFullWidth(prevNode.parentElement)))\n          ) {\n            outerElem.className = \"viv-ts-trim\";\n          } else if (\n            (spacingTrim.trimStart || spacingTrim.spaceFirst) &&\n            isAtStartOfLine()\n          ) {\n            const linePos = linePosition();\n            outerElem.className = \"viv-ts-auto\";\n            if (linePos === linePosition() && !isAtStartOfLine()) {\n              // workaround for issues #1005 and #1010\n              outerElem.className = \"viv-ts-trim\";\n            }\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hangingLast) {\n            outerElem.className = isFullWidth\n              ? \"viv-hang-last\"\n              : \"viv-hang-last viv-hang-hw\";\n          } else if (isLastInBlock || isLastBeforeForcedLineBreak) {\n            const linePos = linePosition();\n            if (hangingEnd) {\n              outerElem.className = isFullWidth\n                ? hangingPunctuation.allowEnd && spacingTrim.allowEnd\n                  ? \"viv-ts-auto\"\n                  : \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n              if (hangingPunctuation.allowEnd && linePos === linePosition()) {\n                if (spacingTrim.trimEnd) {\n                  outerElem.className = \"viv-ts-trim\";\n                } else if (spacingTrim.allowEnd) {\n                  outerElem.className = \"viv-hang-end\";\n                  if (linePos === linePosition()) {\n                    outerElem.className = \"\";\n                  }\n                } else {\n                  outerElem.className = \"viv-ts-space\";\n                }\n              }\n            } else if (spacingTrim.trimEnd) {\n              outerElem.className = \"viv-ts-trim\";\n            } else if (spacingTrim.allowEnd) {\n              outerElem.className = \"viv-ts-auto\";\n              if (linePos === linePosition()) {\n                outerElem.className = \"\";\n              }\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000\uFF1A\uFF1B\u3001\u3002\uFF0C\uFF0E]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (isFullWidth && spacingTrim.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hangingEnd) {\n            const atEnd = isAtEndOfLine();\n            const atEndNoHang = atEnd && hangingPunctuation.allowEnd;\n            if (!atEndNoHang) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            }\n            if (!isFullWidth) {\n              if (!atEnd && !isAtEndOfLine()) {\n                outerElem.className = \"\";\n              }\n            } else if (atEndNoHang && spacingTrim.trimEnd) {\n              outerElem.className = \"viv-ts-auto\";\n            } else if (!atEndNoHang && !isAtEndOfLine()) {\n              outerElem.className = \"\";\n            } else if (!atEnd && hangingPunctuation.allowEnd) {\n              if (!spacingTrim.trimEnd) {\n                outerElem.className = \"viv-ts-space\";\n                if (!isAtEndOfLine()) {\n                  if (spacingTrim.allowEnd) {\n                    outerElem.className = \"viv-ts-auto\";\n                    if (!isAtEndOfLine()) {\n                      outerElem.className = \"viv-hang-end\";\n                    }\n                  } else {\n                    outerElem.className = \"viv-hang-end\";\n                  }\n                }\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n                if (!isAtEndOfLine()) {\n                  outerElem.className = \"viv-hang-end\";\n                }\n              }\n            }\n          } else if (spacingTrim.trimEnd || spacingTrim.allowEnd) {\n            if (isAtEndOfLine()) {\n              if (spacingTrim.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n              }\n            } else {\n              const linePos = linePosition();\n              outerElem.className = \"viv-ts-auto\";\n              if (linePos === linePosition()) {\n                outerElem.className = \"\";\n              }\n            }\n          }\n        }\n      }\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      const style = elem?.ownerDocument.defaultView?.getComputedStyle(elem);\n      return (\n        !!style &&\n        (style.textOrientation === \"upright\" ||\n          style.textCombineUpright === \"all\" ||\n          style[\"-webkit-text-combine\"] === \"horizontal\")\n      );\n    }\n\n    function checkNonZeroMarginBorderPadding(\n      node1: Node,\n      node2: Node,\n    ): boolean {\n      if (node1.nodeType === 1) {\n        const style = document.defaultView.getComputedStyle(node1 as Element);\n        if (\n          parseFloat(style.marginInlineEnd) ||\n          parseFloat(style.borderInlineEndWidth) ||\n          parseFloat(style.paddingInlineEnd)\n        ) {\n          return true;\n        }\n      }\n      const parent1 = node1.parentElement;\n      if (parent1 && !parent1.contains(node2)) {\n        return checkNonZeroMarginBorderPadding(parent1, node2);\n      }\n      if (node2.nodeType === 1) {\n        const style = document.defaultView.getComputedStyle(node2 as Element);\n        if (\n          parseFloat(style.marginInlineStart) ||\n          parseFloat(style.borderInlineStartWidth) ||\n          parseFloat(style.paddingInlineStart)\n        ) {\n          return true;\n        }\n      }\n      const parent2 = node2.parentElement;\n      if (parent2 && !parent2.contains(node1)) {\n        return checkNonZeroMarginBorderPadding(node1, parent2);\n      }\n      return false;\n    }\n\n    if (autospace.ideographAlpha || autospace.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((autospace.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (autospace.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement)) &&\n        !checkNonZeroMarginBorderPadding(prevNode, textNode)\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((autospace.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (autospace.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement)) &&\n        !checkNonZeroMarginBorderPadding(textNode, nextNode)\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n      true, // text-spacing must be processed before others (Issue #1105)\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n\nexport function preprocessForTextSpacing(element: Element): void {\n  textPolyfill.preprocessForTextSpacing(element);\n}\n\nexport function processGeneratedContent(\n  element: HTMLElement,\n  textAutospace: Css.Val,\n  textSpacingTrim: Css.Val,\n  hangingPunctuation: Css.Val,\n  lang: string,\n  vertical: boolean,\n): void {\n  textPolyfill.processGeneratedContent(\n    element,\n    textAutospace,\n    textSpacingTrim,\n    hangingPunctuation,\n    lang,\n    vertical,\n  );\n}\n", "/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /** @override */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /** @override */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n          // text-spacing & hanging-punctuation support\n          TextPolyfill.preprocessForTextSpacing(element);\n        }\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(\n    public nodeContext,\n    public pseudoElementHeight,\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /** @override */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  override findAcceptableBreak(\n    column: Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated =\n        !!this.breakNodeContext || penalty > 0 || !!column.pseudoParent;\n    }\n    return this.breakNodeContext;\n  }\n\n  override getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  override getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  breakAtTheEdgeBeforeFloat: string | null = null;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical\n      ? this.rtl\n        ? this.endEdge\n        : this.startEdge\n      : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical\n      ? this.rtl\n        ? this.startEdge\n        : this.endEdge\n      : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical\n      ? this.afterEdge\n      : this.rtl\n        ? this.endEdge\n        : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical\n      ? this.beforeEdge\n      : this.rtl\n        ? this.startEdge\n        : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode?.nodeType === 3 &&\n          position.sourceNode.nextSibling?.nodeType === 3 &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '\u201CFoo' may be split to '\u201C' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          !LayoutHelper.isSpecialNodeContext(position) &&\n          // Prevent breaking inside SVG etc. (Issue #1406)\n          position.viewNode.parentElement?.namespaceURI === Base.NS.XHTML\n        ) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (\n              this.isFloatNodeContext(position) &&\n              // Exclude normal floats (fix for issue #611)\n              (PageFloats.isPageFloat(position.floatReference) ||\n                position.floatSide === \"footnote\")\n            ) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      if (height < 1) {\n        height = 0;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      if (width < 1) {\n        width = 0;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\" || f === \"none\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    let foundNonZeroWidthBand: GeometryUtil.Band = null;\n\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n\n      // Hacky workaround for issue #1071\n      // (Top page float should not absorb margin/border/padding of the block below)\n      if (band.x1 < x2 && band.x2 > x1) {\n        foundNonZeroWidthBand = band;\n      } else if (!foundNonZeroWidthBand) {\n        Base.setCSSProperty(band.right, \"float\", \"none\");\n      }\n    }\n\n    if (foundNonZeroWidthBand) {\n      // Update footnoteEdge (Fix for issue #1298)\n      const lastBand = bands[bands.length - 1];\n      const y2 = this.vertical ? -this.getLeftEdge() : this.getBottomEdge();\n      if (foundNonZeroWidthBand !== lastBand && lastBand.y2 >= y2) {\n        this.footnoteEdge = this.vertical\n          ? -foundNonZeroWidthBand.y2\n          : foundNonZeroWidthBand.y2;\n      }\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\"\n   * @return parsed and adjusted length value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string): number {\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return this.clientLayout.adjustLengthValue(parseFloat(r[0]));\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.rtl ? this.endEdge : this.startEdge;\n      let x2 = this.rtl ? this.startEdge : this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(\n          this.rtl ? this.getEndEdge(parentBox) : this.getStartEdge(parentBox),\n          x1,\n        );\n        x2 = Math.min(\n          this.rtl ? this.getStartEdge(parentBox) : this.getEndEdge(parentBox),\n          x2,\n        );\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        if (parent !== nodeContext.parent && !nodeContext.firstPseudo) {\n          // Unless float is specified on ::first-letter (Fix for issue #923)\n          parent.viewNode.appendChild(element);\n\n          // Mark the moved float box so that it is not removed wrongly\n          // when page breaking occurs inside the inline parent.\n          // (Issue #1383, #1422)\n          element.setAttribute(\"data-vivliostyle-float-box-moved\", \"true\");\n        }\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.rtl = floatContainer.rtl;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      Base.mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos + minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Text-spacing etc. must be done before calculating edge. (Issue #898)\n        this.postLayoutBlock(resNodeContext, checkPoints);\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          // Text-spacing etc. must be done before calculating edge. (Issue #898)\n          // this.postLayoutBlock(nodeContext, checkPoints);\n\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n\n    if (\n      position.checkPointIndex === 0 &&\n      position.index === nodeContext.boxOffset\n    ) {\n      // Prevent wrong break at beginning of paragraph (Issue #1401, #1406)\n      return null;\n    }\n\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    } else {\n      // Fix for issue #821, #885, #1459\n      const p = LayoutHelper.findAncestorSpecialInlineNodeContext(nodeContext);\n      if (p) {\n        if (\n          this.breakPositions?.[0] instanceof BoxBreakPosition &&\n          p?.viewNode.contains(this.breakPositions[0].checkPoints[0].viewNode)\n        ) {\n          // Prevent breaks at beginning of the column\n          return null;\n        }\n        // Prevent breaks inside inline-blocks\n        nodeContext = p;\n\n        // Prevent breaks at beginning of paragraph content (Issue #1459)\n        while (!nodeContext.after && nodeContext.inline && nodeContext.parent) {\n          let node = nodeContext.viewNode?.previousSibling;\n          while (\n            node &&\n            (VtreeImpl.canIgnore(node, nodeContext.parent.whitespace) ||\n              LayoutHelper.isOutOfFlow(node))\n          ) {\n            node = node.previousSibling;\n          }\n          if (node) {\n            break;\n          }\n          nodeContext = nodeContext.parent;\n        }\n      }\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elements\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        const element = node.nodeType === 1 ? (node as Element) : null;\n        if (!element) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          !element.firstChild ||\n          Base.mediaTags[element.localName] ||\n          /^r(uby|[bt]c?)$/.test(element.localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(element).display,\n          )\n        ) {\n          // img, ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            if (element.localName === \"ruby\" && node.firstChild) {\n              // Fix for issue #985\n              node = node.firstChild;\n            }\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          } else if (!/^r(uby|tc?)$/.test(element.localName)) {\n            // Fix for issue #1319 and #1401\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    for (let nc = nodeContext; nc; nc = nc.parent) {\n      if (\n        !nc.inline &&\n        Break.isCloneBoxDecorationBreak(nc.viewNode as Element)\n      ) {\n        const paddingBorders = this.getComputedPaddingBorder(\n          nc.viewNode as Element,\n        );\n        clonedPaddingBorder += nc.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (nc.display === \"table\") {\n          clonedPaddingBorder += (nc.vertical ? -1 : 1) * nc.blockBorderSpacing;\n        }\n      }\n    }\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // Workaround for the case of block child after text in parent block\n    // (Issue #1036)\n    let lastNode = checkPoints[checkPoints.length - 1].viewNode;\n    if (lastNode?.parentElement.localName === \"viv-ts-inner\") {\n      lastNode = lastNode.parentElement.parentElement;\n    }\n    if (\n      (lineIndex === linePositions.length && lastNode.nextSibling) ||\n      (lineIndex >= linePositions.length - 1 &&\n        lastNode.parentElement.querySelector(\".MJXc-display\")) // for MathJax\n    ) {\n      // Prevent unnecessary page break before the last line\n      // when a block box (may be generated by MathJax) exists\n      // just after the text or inline box.\n      widows = 0;\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && dir * (edge - blockEdge) > 0) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    for (let nc = flowPosition; nc; nc = nc.parent) {\n      if (LayoutHelper.isOutOfFlow(nc.viewNode)) {\n        return false;\n      }\n    }\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    for (let nc = nodeContext; nc; nc = nc.parent) {\n      if (LayoutHelper.isOutOfFlow(nc.viewNode)) {\n        return false;\n      }\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    const clearLR = /^(top|bottom|(block|inline)-(start|end))$/.test(clear)\n      ? PageFloats.resolveInlineFloatDirection(\n          clear,\n          nodeContext.vertical,\n          nodeContext.direction,\n        )\n      : clear;\n    switch (clearLR) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (!nodeContext.floatSide) {\n        if (this.vertical) {\n          let wAdj = afterEdge + margin.right - clearEdge;\n          if (wAdj > 0 == margin.right >= 0) {\n            // In addition to collapsed portion\n            wAdj += margin.right;\n          }\n          spacer.style.marginLeft = `${wAdj}px`;\n        } else {\n          let hAdj = clearEdge - (afterEdge + margin.top);\n          if (hAdj > 0 == margin.top >= 0) {\n            // In addition to collapsed portion\n            hAdj += margin.top;\n          }\n          spacer.style.marginBottom = `${hAdj}px`;\n        }\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak(): boolean {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge &&\n          Break.isForcedBreakValue(breakAtTheEdge) &&\n          // prevent unnecessary breaks at the beginning of the column/page\n          // after out-of-flow elements, e.g. position:absolute or running().\n          // (Issue #1176)\n          !atLeadingEdgeIgnoringOutOfFlow())\n      );\n    }\n\n    function atLeadingEdgeIgnoringOutOfFlow(): boolean {\n      if (!lastAfterNodeContext) {\n        return false;\n      }\n      // Exclude if itself is a float (Issue #1288)\n      if (nodeContext.floatSide) {\n        return false;\n      }\n      for (let nc = lastAfterNodeContext; nc?.parent; nc = nc.parent) {\n        let node = nc.after ? nc.viewNode : nc.viewNode?.previousSibling;\n        while (\n          node &&\n          (VtreeImpl.canIgnore(node, nc.parent.whitespace) ||\n            LayoutHelper.isOutOfFlow(node))\n        ) {\n          node = node.previousSibling;\n        }\n        if (node) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Save break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                this.breakAtTheEdgeBeforeFloat = Break.isAvoidBreakValue(\n                  breakAtTheEdge,\n                )\n                  ? breakAtTheEdge\n                  : null;\n              }\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              // Check break opportunity between anonymous block box and block-level box\n              // (Issue #611)\n              if (\n                !nodeContext.inline &&\n                !nodeContext.repeatOnBreak &&\n                (lastAfterNodeContext\n                  ? LayoutHelper.findAncestorSpecialInlineNodeContext(\n                      lastAfterNodeContext,\n                    )\n                  : this.breakPositions[\n                      this.breakPositions.length - 1\n                    ] instanceof BoxBreakPosition)\n              ) {\n                this.saveEdgeBreakPosition(\n                  nodeContext.copy(),\n                  breakAtTheEdge,\n                  false,\n                );\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer ||\n                // Check empty block box (Issue #749)\n                (!nodeContext.nodeShadow &&\n                  !(nodeContext.sourceNode as Element).firstElementChild &&\n                  VtreeImpl.canIgnore(\n                    nodeContext.sourceNode.firstChild,\n                    nodeContext.whitespace,\n                  ))\n              ) {\n                // new formatting context, or float or flex container,\n                // or empty block box (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Restore break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                breakAtTheEdge =\n                  breakAtTheEdge ?? this.breakAtTheEdgeBeforeFloat;\n                this.breakAtTheEdgeBeforeFloat = null;\n              }\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (Base.mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (Base.mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? this.rtl\n          ? columnBBox.bottom\n          : columnBBox.top\n        : this.rtl\n          ? columnBBox.right\n          : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? this.rtl\n          ? columnBBox.top\n          : columnBBox.bottom\n        : this.rtl\n          ? columnBBox.left\n          : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    const checkJoiningType =\n      // /[\\p{Joining_Type=D}\\p{Joining_Type=C}]\\p{Mn}*$/\n      // eslint-disable-next-line no-misleading-character-class\n      /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u07FA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u0883-\\u0886\\u0889-\\u088D\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3-\\u08B8\\u08BA-\\u08C8\\u1807\\u180A\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\u200D\\uA840-\\uA871\\u{10AC0}-\\u{10AC4}\\u{10AD3}-\\u{10AD6}\\u{10AD8}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D01}-\\u{10D21}\\u{10D23}\\u{10EC3}\\u{10EC4}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{10F70}-\\u{10F73}\\u{10F76}-\\u{10F81}\\u{10FB0}\\u{10FB2}\\u{10FB3}\\u{10FB8}\\u{10FBB}\\u{10FBC}\\u{10FBE}\\u{10FBF}\\u{10FC1}\\u{10FC4}\\u{10FCA}\\u{1E900}-\\u{1E943}]\\p{Mn}*$/u;\n    const zwj = checkJoiningType.test(text.slice(0, viewIndex)) ? \"\\u200D\" : \"\";\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord\n        ? zwj + resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    if (zwj) {\n      const p = nodeContext.preprocessedTextContent[0][1] as string;\n      nodeContext.preprocessedTextContent[0][1] =\n        p.slice(0, viewIndex + 1) + zwj + p.slice(viewIndex + 1);\n    }\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  override prepareLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  override clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  override saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  override restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /** @override */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  override openAllViews(\n    position: Vtree.NodePosition,\n  ): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /** @override */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /** @override */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /** @override */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.enableSkippingFooter &&\n      nodeContext &&\n      this.isAfterLastContent(nodeContext)\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /** @override */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /** @override */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /** @override */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /** @override */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  override accept(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  override finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  override clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n", "/**\n * Copyright 2016 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as HTMLElement;\n    const { verticalAlign, alignContent } = element.style;\n    if (verticalAlign !== \"top\" && verticalAlign !== \"baseline\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    if (alignContent && alignContent !== \"normal\") {\n      Base.setCSSProperty(element, \"align-content\", \"normal\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    if (alignContent && alignContent !== \"normal\") {\n      Base.setCSSProperty(element, \"align-content\", alignContent);\n    }\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  override getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    const cellFragments = this.getCellFragments();\n    penalty += Math.max(\n      0,\n      ...cellFragments.map((cf) => cf.cellNodeContext.breakPenalty),\n    );\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  override findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (\n      this !== column.breakPositions[0] && // Fix for issue #1458, case 2\n      penalty < this.getMinBreakPenalty()\n    ) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  override getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = this.beforeNodeContext.breakPenalty;\n\n    const breakPositions = this.getAcceptableCellBreakPositions();\n    const cellFragments = this.getCellFragments();\n    penalty += Math.max(\n      0,\n      ...cellFragments.map((cf) => cf.cellNodeContext.breakPenalty),\n    );\n\n    // If there is a box break in a row-spanning cell, do not add penalty.\n    // This is to prevent the cell content from disappearing due to the situation\n    // that a box break occurs in a row-spanning cell but the row break fails.\n    // (Issue #1403)\n    const foundBoxBreakInRowSpanningCell = breakPositions.some(\n      (bp, i) =>\n        bp.breakPosition instanceof Layout.BoxBreakPosition &&\n        (cellFragments[i].cellNodeContext.sourceNode as HTMLTableCellElement)\n          .rowSpan > 1,\n    );\n\n    breakPositions.forEach((bp, i) => {\n      let penalty1 = bp.breakPosition.getMinBreakPenalty();\n      if (\n        foundBoxBreakInRowSpanningCell &&\n        bp.breakPosition instanceof BreakPosition.EdgeBreakPosition &&\n        bp.breakPosition.overflows &&\n        penalty1 >= 3\n      ) {\n        // When a box break occurs in a row-spanning cell, the height of the row group decreases,\n        // and the overflows flag that was set before the box break may be no longer valid.\n        // So,check the overflow again, and if the cell does not overflow, reduce the penalty.\n        // (Issue #1403)\n        const overflows = cellFragments[i].column.checkOverflowAndSaveEdge(\n          bp.nodeContext,\n          null,\n        );\n        if (!overflows) {\n          penalty1 -= 3;\n        }\n      }\n      penalty += penalty1;\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  override getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  override isFirstTime(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n  ): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  override getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  override saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  override restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  override startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  override afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  override startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  override afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      const width = vertical ? rect[\"height\"] : rect[\"width\"];\n      // Workaround for issue #958\n      // Non-integer width causes problem, so return rounded-up value.\n      return Math.ceil(width);\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n      // Set table-layout to fixed so that the widths of the columns\n      // are respected. (Fix for issue #1475)\n      Base.setCSSProperty(rootViewNode, \"table-layout\", \"fixed\");\n      Base.setCSSProperty(\n        rootViewNode,\n        formattingContext.vertical ? \"height\" : \"width\",\n        `${formattingContext.tableWidth}px`,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /** @override */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /** @override */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /** @override */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    adjustRowHeight(nodeContext);\n    return false;\n  }\n\n  /** @override */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            adjustRowHeight(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    adjustRowHeight(nodeContext);\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (\n    !repetitiveElements ||\n    !(\n      repetitiveElements.isHeaderRegistered() ||\n      repetitiveElements.isFooterRegistered()\n    ) // Fix for issue #1458, case 1\n  ) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n}\n\n/**\n * Adjusts the height of a table row to prevent another preceding row\n * containing fragmented rowspanning cells and dummy empty cells which\n * should have zero height from having non-zero height due to\n * Chromium's behavior when rowspanning cells exist.\n * (Fix for issue #1458, case 3)\n *\n * @param nodeContext - node context of table or table-row\n */\nfunction adjustRowHeight(nodeContext: Vtree.NodeContext): void {\n  const tbodyElement =\n    nodeContext.display === \"table-row\"\n      ? nodeContext.viewNode.parentElement\n      : nodeContext.display === \"table\"\n        ? (nodeContext.viewNode as Element).querySelector(\"tbody\")\n        : null;\n  if (!tbodyElement) {\n    return;\n  }\n  // Find row elements that only have rowspanning cells and empty cells.\n  const spanStartRows = tbodyElement.querySelectorAll(\n    \":scope>tr:has(>:empty):not(:has(>:not([rowspan]:not([rowspan='1']),:empty)))\",\n  );\n  if (spanStartRows.length === 0) {\n    return;\n  }\n  const spanStartRowHeight = Array.from(spanStartRows).reduce(\n    (totalHeight, rowElement) => {\n      const rect = rowElement.getBoundingClientRect();\n      const height = nodeContext.vertical ? rect.width : rect.height;\n      return totalHeight + height;\n    },\n    0,\n  );\n  const spanStartLastRow = spanStartRows[spanStartRows.length - 1];\n  const spanStartLastRowIndex = Array.from(tbodyElement.children).indexOf(\n    spanStartLastRow,\n  );\n  const rowSpan = Array.from(spanStartLastRow.children).reduce((r, cell) => {\n    const span = (cell as HTMLTableCellElement).rowSpan;\n    return span > 1 &&\n      spanStartLastRowIndex + span < tbodyElement.childElementCount\n      ? Math.max(r, span)\n      : r;\n  }, 0);\n  // Find the row element that needs to be adjusted.\n  let rowToBeAdjusted = rowSpan\n    ? tbodyElement.children[spanStartLastRowIndex + rowSpan - 1]\n    : tbodyElement.lastElementChild;\n  if (\n    rowToBeAdjusted != tbodyElement.lastElementChild &&\n    rowToBeAdjusted.querySelector(\":scope>*>div>div\")\n  ) {\n    for (\n      let row = rowToBeAdjusted;\n      row && row !== tbodyElement.lastElementChild;\n      row = row.nextElementSibling\n    ) {\n      if (row.querySelector(\":scope>[rowspan]:not([rowspan='1'])\")) {\n        rowToBeAdjusted = row;\n        break;\n      }\n    }\n  }\n  const rowRect = rowToBeAdjusted.getBoundingClientRect();\n  const rowHeight = nodeContext.vertical ? rowRect.width : rowRect.height;\n  const newRowHeight = spanStartRowHeight + rowHeight;\n  Base.setCSSProperty(\n    rowToBeAdjusted,\n    nodeContext.vertical ? \"width\" : \"height\",\n    `${newRowHeight}px`,\n  );\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  override resolveLayoutMode(\n    nodeContext: Vtree.NodeContext,\n  ): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  override clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  override restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  override getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  override breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  override doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  override allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  override nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  override postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  override finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  override equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Val,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n", "/**\n * Copyright 2017 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\n\n/** */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n", "/**\n * Copyright 2017 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n  if (container.vertical) {\n    const outerWidth = parseFloat(\n      (container.element as HTMLElement).style?.width,\n    );\n    container.originX = outerWidth - container.width;\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  override preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  override calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  override hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  override updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n\n  // The computedBlockSize of the last column may be a little larger than\n  // the others even though columns are balanced, because of the issue\n  // that only the last column's computedBlockSize includes the last\n  // half-leading space.\n  // To work around this, we add an error margin to the other columns.\n  const errorMargin = 6;\n  return otherColumns.every(\n    (c) => lastColumnBlockSize > c.computedBlockSize + errorMargin,\n  );\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  override calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  override hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  override updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): void;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name] as CssCascade.CascadeValue;\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed &&\n        this.displayValue() !== Css.ident.none &&\n        !Display.isRunning(this.styleValue(\"position\"));\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      if (whitespace && !Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this, this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name] as CssCascade.CascadeValue;\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    if (isBody) {\n      for (const propName of [\"writing-mode\", \"direction\"]) {\n        if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n          // Copy it over, but keep it at the root element as well.\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    } else {\n      for (const propName in elemStyle) {\n        if (CssCascade.isInherited(propName)) {\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    }\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? (elemStyle[\"background-color\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? (elemStyle[\"background-image\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      if (\n        (backgroundColor && !Css.isDefaultingValue(backgroundColor)) ||\n        (backgroundImage && !Css.isDefaultingValue(backgroundImage))\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      // root element\n      const fontSize = elemStyle[\"font-size\"] as CssCascade.CascadeValue;\n      let isRelativeFontSize = true;\n      if (fontSize && !Css.isDefaultingValue(fontSize.value)) {\n        const val = fontSize.evaluate(this.context);\n        if (val instanceof Css.Numeric) {\n          let px = val.num;\n          switch (val.unit) {\n            case \"em\":\n            case \"rem\":\n              px *= this.context.initialFontSize;\n              break;\n            case \"ex\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            case \"%\":\n              px *= this.context.initialFontSize / 100;\n              break;\n            case \"lh\":\n            case \"rlh\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"lh\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            default: {\n              const unitSize = Exprs.defaultUnitSizes[val.unit];\n              if (unitSize) {\n                px *= unitSize;\n              }\n              isRelativeFontSize = false;\n            }\n          }\n          this.context.rootFontSize = px;\n          this.context.isRelativeRootFontSize = isRelativeFontSize;\n        }\n      }\n      const rootFontSize =\n        this.context.rootFontSize ?? this.context.initialFontSize;\n      const lineHeight = elemStyle[\"line-height\"] as CssCascade.CascadeValue;\n      if (lineHeight && !Css.isDefaultingValue(lineHeight.value)) {\n        const val = lineHeight.evaluate(this.context);\n        if (val instanceof Css.Num) {\n          this.context.rootLineHeight = val.num * rootFontSize;\n        } else if (val instanceof Css.Numeric) {\n          let px = val.num;\n          switch (val.unit) {\n            case \"em\":\n            case \"rem\":\n              px *= rootFontSize;\n              break;\n            case \"ex\":\n              px *=\n                (rootFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            case \"%\":\n              px *= rootFontSize / 100;\n              break;\n            case \"lh\":\n            case \"rlh\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"lh\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            default: {\n              const unitSize = Exprs.defaultUnitSizes[val.unit];\n              if (unitSize) {\n                px *= unitSize;\n              }\n            }\n          }\n          this.context.rootLineHeight = px;\n        }\n      } else {\n        // Note: \"rlh\" unit is inaccurate for line-height:normal, not using font metrics.\n        this.context.rootLineHeight =\n          (this.context.fontSize() * Exprs.defaultUnitSizes[\"lh\"]) /\n          Exprs.defaultUnitSizes[\"em\"];\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"] as CssCascade.CascadeValue;\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"] as CssCascade.CascadeValue;\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"] as CssCascade.CascadeValue;\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(this, elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageCV = style[\"page\"] as CssCascade.CascadeValue;\n          const pageType =\n            pageCV &&\n            !Css.isDefaultingValue(pageCV.value) &&\n            pageCV.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /** @override */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /** @override */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Base from \"./base\";\nimport { ValidationTxt } from \"./assets\";\nimport { TokenType } from \"./css-tokenizer\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(\n    public where: number,\n    public success: boolean,\n  ) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 0x01;\n\nexport const ALLOW_STR = 0x02;\n\nexport const ALLOW_IDENT = 0x04;\n\nexport const ALLOW_POS_NUMERIC = 0x08;\n\nexport const ALLOW_POS_NUM = 0x10;\n\nexport const ALLOW_POS_INT = 0x20;\n\nexport const ALLOW_COLOR = 0x40;\n\nexport const ALLOW_URL = 0x80;\n\nexport const ALLOW_NEGATIVE = 0x100;\n\nexport const ALLOW_ZERO = 0x200;\n\nexport const ALLOW_ZERO_PERCENT = 0x400;\n\nexport const ALLOW_SLASH = 0x800;\n\nexport const ALLOW_URANGE = 0x1000;\n\nexport const ALLOW_IMAGE = 0x2000;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  override visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", ident.name)) {\n        return ident;\n      }\n    }\n    return null;\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (/^([0-9A-F]{3,4}|([0-9A-F]{2}){3,4})$/i.test(color.hex)) {\n        return color;\n      }\n    }\n    return null;\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  override visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", func.toString())) {\n        return func;\n      }\n    }\n    if (this.allowed & ALLOW_IMAGE) {\n      if (CSS.supports(\"background-image\", func.toString())) {\n        return func;\n      }\n    }\n    if (\n      func.name === \"calc\" &&\n      this.allowed &\n        (ALLOW_POS_NUMERIC |\n          ALLOW_POS_NUM |\n          ALLOW_POS_INT |\n          ALLOW_NEGATIVE |\n          ALLOW_ZERO |\n          ALLOW_ZERO_PERCENT)\n    ) {\n      return func;\n    }\n    return null;\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS: ValueMap = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  override visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  override visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  override validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  override validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(\n    public readonly name: string,\n    group: ValidatingGroup,\n  ) {\n    super(group);\n  }\n\n  override validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(\n    validatorSet: ValidatorSet,\n    public readonly name: string,\n  ) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  override tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  override success(\n    rval: Css.Val,\n    shorthandValidator: ShorthandValidator,\n  ): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(\n    validatorSet: ValidatorSet,\n    public readonly names: string[],\n  ) {\n    super(validatorSet, names[0]);\n  }\n\n  override success(\n    rval: Css.Val,\n    shorthandValidator: ShorthandValidator,\n  ): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  override tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] ??\n            this.validatorSet.defaultValues[name] ??\n            Css.ident.initial,\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateDefaultingValue(\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, value, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  override visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  override visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  override visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  override visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  override visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  override visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  override visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  override visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  override visitExpr(expr: Css.Expr): Css.Val {\n    return this.validateSingle(expr);\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val =\n        values[name] ??\n        this.validatorSet.defaultValues[name] ??\n        Css.ident.initial;\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  override validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  override visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  override visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport class TextSpacingShorthandValidator extends SimpleShorthandValidator {\n  override validateList(list: Css.Val[]): number {\n    if (list.length === 1 && list[0] instanceof Css.Ident) {\n      switch (list[0].name.toLowerCase()) {\n        case \"normal\":\n          list = [\n            this.validatorSet.defaultValues[\"text-autospace\"],\n            this.validatorSet.defaultValues[\"text-spacing-trim\"],\n          ];\n          break;\n        case \"auto\":\n          list = [Css.ident.auto, Css.ident.auto];\n          break;\n        case \"none\":\n          list = [Css.getName(\"no-autospace\"), Css.getName(\"space-all\")];\n          break;\n      }\n    }\n    return super.validateList(list);\n  }\n}\n\nconst propsExcludedFromAll = [\n  \"unicode-bidi\",\n  \"direction\",\n\n  // excludes css-logical\n  \"margin-block-start\",\n  \"margin-block-end\",\n  \"margin-inline-start\",\n  \"margin-inline-end\",\n  \"padding-block-start\",\n  \"padding-block-end\",\n  \"padding-inline-start\",\n  \"padding-inline-end\",\n  \"border-block-start-color\",\n  \"border-block-end-color\",\n  \"border-inline-start-color\",\n  \"border-inline-end-color\",\n  \"border-block-start-style\",\n  \"border-block-end-style\",\n  \"border-inline-start-style\",\n  \"border-inline-end-style\",\n  \"border-block-start-width\",\n  \"border-block-end-width\",\n  \"border-inline-start-width\",\n  \"border-inline-end-width\",\n  \"block-start\",\n  \"block-end\",\n  \"inline-start\",\n  \"inline-end\",\n  \"block-size\",\n  \"inline-size\",\n  \"max-block-size\",\n  \"max-inline-size\",\n  \"min-block-size\",\n  \"min-inline-size\",\n\n  // excludes non-standards and special\n  \"behavior\",\n  \"bleed\",\n  \"conflicting-partitions\",\n  \"crop-offset\",\n  \"crop-marks-line-color\",\n  \"enabled\",\n  \"flow-consume\",\n  \"flow-from\",\n  \"flow-into\",\n  \"flow-linger\",\n  \"flow-options\",\n  \"flow-priority\",\n  \"font-display\",\n  \"font-size-adjust\",\n  \"font-stretch_css3\",\n  \"font-variant_css2\",\n  \"glyph-orientation-vertical\",\n  \"marks\",\n  \"min-page-height\",\n  \"min-page-width\",\n  \"repeat-on-break\",\n  \"required\",\n  \"required-partitions\",\n  \"ruby-align\",\n  \"shape-inside\",\n  \"snap-height\",\n  \"snap-width\",\n  \"template\",\n  \"text-decoration-skip\",\n  \"text-justify\",\n  \"text-zoom\",\n  \"unicode-range\",\n  \"utilization\",\n  \"wrap-flow\",\n];\n\nexport class AllShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  override init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    for (const name in this.validatorSet.validators) {\n      if (!propsExcludedFromAll.includes(name)) {\n        this.propList.push(name);\n      }\n    }\n  }\n\n  override validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n  TEXT_SPACING: TextSpacingShorthandValidator,\n  ALL: AllShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == TokenType.HASH) {\n      cssval = new Css.HexColor(token.text);\n    } else if (token.type == TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"COLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IMAGE_FUNCTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IMAGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        lh: Css.empty,\n        rlh: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == TokenType.COMMA);\n      if (token.type != TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents: ValueMap = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case TokenType.INT: {\n            const idents: ValueMap = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case TokenType.BAR:\n            setop(\"|\");\n            break;\n          case TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (token.type == TokenType.IDENT && shorthandValidators[token.text]) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        map[pname] = this.defaultValues[pname] ?? Css.ident.initial;\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    if (\n      Css.isCustomPropName(name) ||\n      // Check if it is a `@font-face` descriptor (Issue #1307)\n      (receiver as PropertyReceiver & { ruleType?: string }).ruleType ===\n        \"font-face\" ||\n      // Check if the property value containing `var(\u2026)`\n      containsVar(value)\n    ) {\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      if (CSS.supports(origName, value.toString())) {\n        // Browser supports this property\n        receiver.simpleProperty(origName, value, important);\n      } else if (prefix && !Base.knownPrefixes.includes(`-${prefix}-`)) {\n        // Ignore properties with unknown prefix to avoid unnecessary warnings\n      } else {\n        receiver.unknownProperty(origName, value);\n      }\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        Css.isDefaultingValue(value) || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else if (!prefix && CSS.supports(name, value.toString())) {\n        // Browser supports this property value\n        receiver.simpleProperty(name, value, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (Css.isDefaultingValue(value)) {\n        shorthand.propagateDefaultingValue(value, important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n\nclass VarCheckVisitor extends Css.Visitor {\n  varFound = false;\n\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name === \"var\") {\n      this.varFound = true;\n    } else if (!this.varFound) {\n      this.visitValues(func.values);\n    }\n    return null;\n  }\n}\n\nexport function containsVar(val: Css.Val): boolean {\n  const varCheckVisitor = new VarCheckVisitor();\n  val.visit(varCheckVisitor);\n  return varCheckVisitor.varFound;\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nfunction getFontTraitNames(properties: { [key: string]: Css.Val }): string[] {\n  return Object.keys(properties)\n    .filter((prop) => ![\"src\", \"font-family\", \"font-display\"].includes(prop))\n    .sort();\n}\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop of getFontTraitNames(properties)) {\n    sb.append(`${prop}:${properties[prop].toString()};`);\n  }\n  return sb.toString();\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop of getFontTraitNames(this.properties)) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop of getFontTraitNames(srcFace.properties)) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const style = this.head.ownerDocument.createElement(\"style\");\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    this.head.appendChild(style);\n    Logging.logger.debug(\"Load font:\", src);\n    frame.finish(viewFontFace);\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.debug(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        // Get URL from `@font-face` src value.\n        const url = src.replace(/^url\\(\"([^\"]+)\"\\).*$/, \"$1\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(url)\n          : null;\n        if (deobfuscator) {\n          Net.fetchFromURL(url, Net.FetchResponseType.BLOB).then((response) => {\n            if (!response.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(response.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers).thenAsync(() =>\n      this.waitFontLoading(),\n    );\n  }\n\n  waitFontLoading(): Task.Result<boolean> {\n    const fonts = this.head.ownerDocument.fonts; // FontFaceSet\n    let unloadedCount = 0;\n    fonts.forEach((fontFace) => {\n      if (fontFace.status === \"unloaded\") {\n        unloadedCount++;\n        fontFace.load().catch((e) => {\n          // Prevent \"A network error occurred.\" errors in console\n        });\n      }\n    });\n    if (unloadedCount === 0) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"waitFontLoading\");\n    frame\n      .loop(() => {\n        return frame.sleep(20).thenAsync(() => {\n          if (fonts.status === \"loading\") {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport { PageRuleMasterInstance } from \"./css-page\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(\n    scope: Exprs.LexicalScope,\n    public pageMaster: PageMaster,\n  ) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  override createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  override clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  override createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  override clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  override createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  override clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (!val && CssCascade.isInherited(name)) {\n      // inherit from root style\n      if (\n        name === \"font-size\" &&\n        context.isRelativeRootFontSize &&\n        context.rootFontSize\n      ) {\n        val = new Css.Numeric(context.rootFontSize, \"px\");\n      } else {\n        const rootStyle = (\n          context as Exprs.Context & {\n            styler: { rootStyle: { [key: string]: CssCascade.CascadeValue } };\n          }\n        ).styler?.rootStyle;\n        val = rootStyle[name]?.value;\n      }\n    }\n    if (val) {\n      val = CssCascade.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      let percentRef = /\\b(height|top|bottom)\\b/.test(name)\n        ? (context.pageAreaHeight ?? context.pageHeight())\n        : (context.pageAreaWidth ?? context.pageWidth());\n      val = CssCascade.evaluateCSSToCSS(context, val, name, percentRef);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      if (\n        (name.startsWith(\"background\") || name === \"z-index\") &&\n        element.parentElement.hasAttribute(\"data-vivliostyle-bleed-box\")\n      ) {\n        // Move background properties and z-index to the parent bleed-box element.\n        // (Fix for issue #644, #1166)\n        element = element.parentElement;\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (!this.parentInstance || this.rtl != this.parentInstance.rtl) {\n      Base.setCSSProperty(\n        container.element,\n        \"direction\",\n        this.rtl ? \"rtl\" : \"ltr\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSingleUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    const hasWidth = (): boolean => {\n      const width = (\n        (this.cascaded[\"width\"] ??\n          this.cascaded[\n            this.vertical ? \"block-size\" : \"inline-size\"\n          ]) as CssCascade.CascadeValue\n      )?.value;\n      return (\n        !!width && width !== Css.ident.auto && !Css.isDefaultingValue(width)\n      );\n    };\n    const hasHeight = (): boolean => {\n      const height = (\n        (this.cascaded[\"height\"] ??\n          this.cascaded[\n            this.vertical ? \"inline-size\" : \"block-size\"\n          ]) as CssCascade.CascadeValue\n      )?.value;\n      return (\n        !!height && height !== Css.ident.auto && !Css.isDefaultingValue(height)\n      );\n    };\n\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      const name = passSingleUriContentProperties[i];\n      if (\n        (name === \"width\" && !hasWidth()) ||\n        (name === \"height\" && !hasHeight())\n      ) {\n        // Don't propagate width/height to the img element if it's not specified.\n        // (Issue #1177)\n        continue;\n      }\n      this.propagatePropertyToElement(context, element, name, docFaces);\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos = this.vertical\n            ? ((containerSize + columnGap) * i) / columnCount -\n              columnGap / 2 +\n              container.paddingTop -\n              ruleWidth / 2\n            : ((containerSize + columnGap) * i) / columnCount -\n              columnGap / 2 +\n              container.paddingLeft -\n              ruleWidth / 2;\n          const size = this.vertical\n            ? container.width + container.paddingLeft + container.paddingRight\n            : container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (\n        this instanceof PageRuleMasterInstance &&\n        this.pageBox.pseudoName == \"vivliostyle-page-rule-master\" &&\n        (name === \"writing-mode\" || name === \"direction\")\n      ) {\n        // Prevent writing-mode and direction specified on `@page` not working.\n        // (Fix for issue #1392)\n        continue;\n      }\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    const content = style[\"content\"] as CssCascade.CascadeValue;\n    if (content) {\n      style[\"content\"] = content.filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-combine-upright\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-decoration-thickness\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-fill-color\",\n  \"text-orientation\",\n  \"text-shadow\",\n  \"text-stroke-color\",\n  \"text-stroke-width\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  override boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  override boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!page.pageAreaElement) {\n      // The overflow property of a `@-epubx-partition` is set by default to hidden.\n      Base.setCSSProperty(container.element, \"overflow\", \"hidden\");\n    }\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  override startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  override startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  const writingMode = (style[\"writing-mode\"] as CssCascade.CascadeValue)?.value;\n  const direction = (style[\"direction\"] as CssCascade.CascadeValue)?.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n  cropOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n    cropOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marksCV = style[\"marks\"];\n  const bleedCV = style[\"bleed\"];\n  const marks =\n    marksCV && !Css.isDefaultingValue(marksCV.value)\n      ? marksCV.value\n      : Css.ident.none;\n  const bleed =\n    bleedCV && !Css.isDefaultingValue(bleedCV.value)\n      ? bleedCV.value\n      : Css.ident.auto;\n  if (bleed === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks !== Css.ident.none) {\n      let hasCrop = false;\n      if (marks.isSpaceList()) {\n        hasCrop = (marks as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed as Css.Numeric;\n  }\n\n  // crop-offset (Issue #913)\n  const cropOffsetCV = style[\"crop-offset\"];\n  const cropOffset =\n    cropOffsetCV && !Css.isDefaultingValue(cropOffsetCV.value)\n      ? cropOffsetCV.value\n      : Css.ident.auto;\n  if (cropOffset === Css.ident.auto) {\n    if (marks !== Css.ident.none) {\n      pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n    }\n  } else if (cropOffset.isNumeric()) {\n    pageSizeAndBleed.cropOffset = cropOffset as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    Math.max(0, pageSizeAndBleed.bleed.num) *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    !pageSizeAndBleed.cropOffset.num && pageSizeAndBleed.bleedOffset.num\n      ? pageSizeAndBleed.bleedOffset.num *\n        context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false)\n      : Math.max(\n          0,\n          pageSizeAndBleed.cropOffset.num *\n            context.queryUnitSize(pageSizeAndBleed.cropOffset.unit, false) -\n            bleed,\n        );\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  lineColor: Css.Val,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\n    \"stroke\",\n    lineColor === Css.ident.auto ? \"#010101\" : lineColor.toString(),\n  );\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  lineColor: Css.Val,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth, lineColor);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth, lineColor);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineColor: Css.Val,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth, lineColor);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth, lineColor);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, lineColor, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"] as CssCascade.CascadeValue;\n  if (marks) {\n    const value = marks.value;\n    if (value instanceof Css.SpaceList) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Math.max(\n    0,\n    evaluatedPageSizeAndBleed.bleedOffset -\n      Css.toNumber(defaultPrinterMarkLineLength, context),\n  );\n  const lineLength = evaluatedPageSizeAndBleed.bleedOffset - printerMarkOffset;\n\n  const lineColorCV = cascadedPageStyle[\n    \"crop-marks-line-color\"\n  ] as CssCascade.CascadeValue;\n  const lineColor =\n    lineColorCV && !Css.isDefaultingValue(lineColorCV.value)\n      ? lineColorCV.value\n      : Css.ident.auto;\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineColor,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineColor,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (\n          val &&\n          val.value !== Css.empty &&\n          val.value !== Css.ident.inherit &&\n          val.value !== Css.ident.unset &&\n          val.value !== Css.ident.revert\n        ) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  override createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  override initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  override initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  override adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    const val = style[isHorizontal ? \"width\" : \"height\"];\n    this.hasAutoSize_ =\n      !val || val === Css.ident.auto || Css.isDefaultingValue(val);\n  }\n\n  /** @override */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /** @override */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /** @override */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /** @override */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /** @override */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /** @override */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /** @override */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /** @override */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  override hasAutoSize(): boolean {\n    return false;\n  }\n\n  override getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  override getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  override getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  override applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  override initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  override initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n\n    if (\n      pageSize.width !== Css.fullWidth ||\n      pageSize.height !== Css.fullHeight ||\n      this.hasBorderOrOutline() ||\n      (marginStart instanceof Exprs.Numeric && marginStart.num < 0) ||\n      (marginEnd instanceof Exprs.Numeric && marginEnd.num < 0)\n    ) {\n      style[startSide] = new Css.Expr(marginStart);\n      style[endSide] = new Css.Expr(marginEnd);\n      style[`margin-${startSide}`] = Css.numericZero;\n      style[`margin-${endSide}`] = Css.numericZero;\n      style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n      style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    } else {\n      // If page size is auto and page box has no border or outline and margins are not negative,\n      // use transparent borders for page margins. This is to improve text selection behavior.\n      style[startSide] = Css.numericZero;\n      style[endSide] = Css.numericZero;\n      style[`margin-${startSide}`] = Css.numericZero;\n      style[`margin-${endSide}`] = Css.numericZero;\n      style[`border-${startSide}-width`] = new Css.Expr(marginStart);\n      style[`border-${endSide}-width`] = new Css.Expr(marginEnd);\n      style[`border-${startSide}-style`] = Css.ident.solid;\n      style[`border-${endSide}-style`] = Css.ident.solid;\n      style[`border-${startSide}-color`] = Css.ident.transparent;\n      style[`border-${endSide}-color`] = Css.ident.transparent;\n      style[\"background-clip\"] = Css.ident.padding_box;\n    }\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  private hasBorderOrOutline(): boolean {\n    const hasBorder1 = (propName: string): boolean => {\n      const propValue = CssCascade.getProp(this.cascaded, propName)?.value;\n      return !!propValue && propValue !== Css.ident.none;\n    };\n    return (\n      hasBorder1(\"border-top-style\") ||\n      hasBorder1(\"border-bottom-style\") ||\n      hasBorder1(\"border-left-style\") ||\n      hasBorder1(\"border-right-style\") ||\n      hasBorder1(\"border-block-start-style\") ||\n      hasBorder1(\"border-block-end-style\") ||\n      hasBorder1(\"border-inline-start-style\") ||\n      hasBorder1(\"border-inline-end-style\") ||\n      hasBorder1(\"outline-style\")\n    );\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    page.pageAreaElement = container.element as HTMLElement;\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  override prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    Base.setCSSProperty(\n      element,\n      \"flex-flow\",\n      this.vertical ? (this.rtl ? \"row-reverse\" : \"row\") : \"column\",\n    );\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n    const content: Css.Val = this.getProp(context, \"content\");\n    if (\n      this.vertical ||\n      content instanceof Css.URL ||\n      (content instanceof Css.Expr &&\n        content.expr instanceof Exprs.Native &&\n        content.expr.str.startsWith(\"running-element-\"))\n    ) {\n      let align = \"center\";\n      if (this.boxInfo.isInTopRow || this.boxInfo.isInBottomRow) {\n        if (\n          this.boxInfo.isInLeftColumn ||\n          this.boxInfo.positionAlongVariableDimension ===\n            MarginBoxPositionAlongVariableDimension.END\n        ) {\n          align = this.vertical || this.rtl ? \"start\" : \"end\";\n        } else if (\n          this.boxInfo.isInRightColumn ||\n          this.boxInfo.positionAlongVariableDimension ===\n            MarginBoxPositionAlongVariableDimension.START\n        ) {\n          align = this.vertical || this.rtl ? \"end\" : \"start\";\n        }\n      }\n      Base.setCSSProperty(element, \"align-items\", align);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  override initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  override initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  override finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop] as CssCascade.CascadeValue;\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"] as CssCascade.CascadeValue;\n    if (size && !Css.isDefaultingValue(size.value)) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      CssCascade.setPropCascadeValue(\n        pageMasterStyle,\n        \"width\",\n        new CssCascade.CascadeValue(pageSize.width, priority),\n        this.context,\n      );\n      CssCascade.setPropCascadeValue(\n        pageMasterStyle,\n        \"height\",\n        new CssCascade.CascadeValue(pageSize.height, priority),\n        this.context,\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 3;\n  }\n\n  override makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  override getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  override apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  override startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  override tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  override pseudoclassSelector(\n    name: string,\n    params: (number | string)[],\n  ): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  override nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  override startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  override simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        const result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(\n                  props,\n                  n,\n                  noPageSelectorProps[n] as CssCascade.CascadeValue,\n                );\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          CssCascade.setPropCascadeValue(props, name, result);\n        }\n      });\n    }\n  }\n\n  override insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  override makeApplyRuleAction(\n    specificity: number,\n  ): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  override startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  override property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /** @override */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /** @override */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n", "/**\n * Copyright 2022 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Scripts - Supports JavaScript in source document.\n */\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as Logging from \"./logging\";\nimport * as TaskUtil from \"./task-util\";\n\n/**\n * Enable or disable JavaScript in html support\n */\nexport let allowScripts = true;\nexport function setAllowScripts(value: boolean): void {\n  allowScripts = value;\n}\n\nconst deferredScripts: HTMLScriptElement[] = [];\n\nfunction sameScripts(s1: HTMLScriptElement, s2: HTMLScriptElement): boolean {\n  return (\n    s1 === s2 ||\n    (s1.src || s2.src ? s1.src === s2.src : s1.textContent === s2.textContent)\n  );\n}\n\nfunction getScriptsInOrNearHead(document: Document): HTMLScriptElement[] {\n  // To support Chrome < 88 and Firefox < 84, we cannot use\n  // the selector \"body > script:not(:not(script, link, style) ~ *)\".\n  // (Issue #919)\n  const scriptsInBodyNotNearHead = Array.from(\n    document.querySelectorAll(\n      \"body > :not(script):not(link):not(style) ~ script\",\n    ),\n  ) as HTMLScriptElement[];\n  return (\n    Array.from(\n      document.querySelectorAll(\"head > script, body > script\"),\n    ) as HTMLScriptElement[]\n  ).filter((script) => !scriptsInBodyNotNearHead.includes(script));\n}\n\nexport function loadScript(\n  srcScriptElem: HTMLScriptElement,\n  window: Window,\n  flags?: { inHead?: boolean; atEnd?: boolean; forceDefer?: boolean },\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  if (\n    !flags?.inHead &&\n    !flags?.atEnd &&\n    getScriptsInOrNearHead(srcScriptElem.ownerDocument).includes(srcScriptElem)\n  ) {\n    // The script elements at beginning of body have already been processed.\n    return Task.newResult(false);\n  }\n\n  const scriptContent = srcScriptElem.textContent;\n  const src = srcScriptElem.src;\n  const isModule = srcScriptElem.type === \"module\";\n  const async = (isModule || src) && srcScriptElem.async;\n  const defer = (isModule && !async) || (src && srcScriptElem.defer);\n  const needDefer = !flags?.atEnd && (flags?.forceDefer || defer || async);\n\n  if (!hasScripts(window)) {\n    // `window.onload = startViewer`, which was set by vivliostyle-viewer,\n    // has to be unset to prevent `startViewer` restarting because of\n    // `window.dispatchEvent(new Event(\"load\"))` in `loadScriptsAtEnd()`.\n    window.onload = null;\n  }\n\n  if (needDefer) {\n    if (!deferredScripts.some((s) => sameScripts(s, srcScriptElem))) {\n      deferredScripts.push(srcScriptElem);\n    }\n    return Task.newResult(true);\n  }\n\n  if (src.includes(\"/mathjax\")) {\n    const builtinMathJax2 = window.document.head.querySelector(\n      \"script[src*='MathJax.js']:not([data-vivliostyle-scripting])\",\n    );\n    if (builtinMathJax2) {\n      if (src.includes(\"/mathjax@3\")) {\n        // Remove the builtin MathJax 2 when MathJax 3 is specified\n        window.document.head.removeChild(builtinMathJax2);\n        if (window[\"MathJax\"]?.version?.startsWith(\"2.\")) {\n          delete window[\"MathJax\"];\n        }\n      } else if (src.includes(\"/MathJax.js\")) {\n        // Ignore the specified MathJax 2, and use the builtin MathJax 2\n        return Task.newResult(true);\n      }\n    }\n  }\n\n  for (const s of window.document.head.getElementsByTagName(\"script\")) {\n    if (\n      s.hasAttribute(\"data-vivliostyle-scripting\") &&\n      sameScripts(s, srcScriptElem)\n    ) {\n      // If same script is already loaded, remove the already loaded one before load the new one.\n      window.document.head.removeChild(s);\n    }\n  }\n\n  const scriptElem = window.document.createElement(\"script\");\n  scriptElem.textContent = scriptContent;\n  if (src) {\n    scriptElem.src = src;\n  }\n  scriptElem.async = async;\n  scriptElem.defer = defer;\n  scriptElem.setAttribute(\"data-vivliostyle-scripting\", \"true\");\n\n  for (const attr of srcScriptElem.attributes) {\n    if (![\"src\", \"async\", \"defer\"].includes(attr.name)) {\n      scriptElem.setAttribute(attr.name, attr.value);\n    }\n  }\n  Logging.logger.debug(\"script:\", src);\n  if (!src) {\n    window.document.head.appendChild(scriptElem);\n    return Task.newResult(true);\n  } else {\n    const fetcher = Net.loadElement(scriptElem);\n    window.document.head.appendChild(scriptElem);\n    return TaskUtil.waitForFetchers([fetcher]);\n  }\n}\n\nfunction getAllFontFamilyList(\n  srcDocument: Document,\n  styler: CssStyler.Styler,\n): string {\n  const fontFamilySet = {};\n  const findFontFamilyInStyle = (style: any): void => {\n    const fontFamily = style[\"font-family\"]?.value;\n    if (fontFamily) {\n      if (fontFamily.values) {\n        for (const family1 of fontFamily.values) {\n          fontFamilySet[family1.stringValue()] = true;\n        }\n      } else {\n        fontFamilySet[fontFamily.stringValue()] = true;\n      }\n    }\n    const marginBoxes = style[\"_marginBoxes\"];\n    if (marginBoxes) {\n      for (const marginBoxStyle of Object.values(marginBoxes)) {\n        findFontFamilyInStyle(marginBoxStyle);\n      }\n    }\n  };\n  const findAllFontFamily = (arg: any): void => {\n    if (arg instanceof CssCascade.ApplyRuleAction) {\n      findFontFamilyInStyle(arg.style);\n    } else if (arg instanceof CssCascade.CascadeAction || Array.isArray(arg)) {\n      for (const v of Object.values(arg)) {\n        findAllFontFamily(v);\n      }\n    }\n  };\n  // Find all font-family values in stylesheets.\n  for (const obj of Object.values(styler.cascade.code)) {\n    for (const arg of Object.values(obj ?? {})) {\n      findAllFontFamily(arg);\n    }\n  }\n  // Find all font-family values in inline style.\n  for (const elem of srcDocument.querySelectorAll(\"[style]\")) {\n    if ((elem as HTMLElement).style?.fontFamily) {\n      fontFamilySet[(elem as HTMLElement).style.fontFamily] = true;\n    }\n  }\n  return Object.keys(fontFamilySet).join(\",\");\n}\n\nfunction prepareTextContentForWebFonts(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): HTMLElement {\n  const textContentDiv: HTMLElement =\n    window.document.querySelector(\"[data-vivliostyle-textcontent]\") ??\n    window.document.createElement(\"div\");\n  textContentDiv.style.position = \"fixed\";\n  textContentDiv.style.fontSize = \"0\";\n  textContentDiv.setAttribute(\"data-vivliostyle-textcontent\", \"true\");\n  textContentDiv.setAttribute(\"aria-hidden\", \"true\");\n  textContentDiv.style.fontFamily = getAllFontFamilyList(srcDocument, styler);\n  textContentDiv.textContent = srcDocument.documentElement.textContent;\n  window.document.body.appendChild(textContentDiv);\n  return textContentDiv;\n}\n\nexport function loadScriptsInHead(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  // Process script elements in head and also beginning of body\n  const srcScripts: HTMLScriptElement[] = getScriptsInOrNearHead(srcDocument);\n  if (srcScripts.length === 0) {\n    return Task.newResult(false);\n  }\n  const needPrepareForWebFonts = srcScripts.some(\n    (s) => !(s.async || s.defer || s.type === \"module\"),\n  );\n\n  // Web fonts needs text content of the document\n  const textContentDiv = needPrepareForWebFonts\n    ? prepareTextContentForWebFonts(srcDocument, window, styler)\n    : null;\n  const fonts = window.document.fonts; // FontFaceSet\n  const savedDollar = window[\"$\"];\n  let forceDefer = false;\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (srcScripts.length === 0) {\n        if (!needPrepareForWebFonts) {\n          return Task.newResult(false); // break\n        }\n        return frame.sleep(20).thenAsync(() => {\n          if (\n            fonts.status === \"loading\" ||\n            // for Typekit Web Font Loader (Adobe Fonts)\n            window.document.documentElement.classList.contains(\"wf-loading\") ||\n            // For DynaFont\n            // FIXME: checking the global variable `ret` set in https://dfo.dynacw.co.jp/JSDynaFont/DynaFont.js\n            // would be not very good, because it seems to have been made global by mistake.\n            (window[\"FontJSON\"]?.Font &&\n              window[\"ret\"]?.readyState &&\n              window[\"ret\"].readyState < 4)\n          ) {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      }\n      const srcScriptElem = srcScripts.shift();\n      return loadScript(srcScriptElem, window, {\n        inHead: true,\n        forceDefer,\n      }).thenAsync(() => {\n        if (!forceDefer && window[\"$\"] !== savedDollar) {\n          // jQuery `$(\u2026)` does not work before document is loaded, so need to defer\n          deferredScripts.push(srcScriptElem);\n          forceDefer = true;\n        }\n        if (srcScripts.length === 0) {\n          if (needPrepareForWebFonts) {\n            // Some web font loaders (DynaFont, FONTPLUS) need DOMContentLoaded event\n            Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (document)\");\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\"));\n          }\n        }\n        return Task.newResult(true); // continue\n      });\n    })\n    .then(() => {\n      if (textContentDiv) {\n        textContentDiv.remove();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function loadScriptsAtEnd(window: Window): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (deferredScripts.length === 0) {\n        return Task.newResult(false);\n      }\n      return loadScript(deferredScripts.shift(), window, {\n        atEnd: true,\n      }).thenReturn(deferredScripts.length > 0);\n    })\n    .then(() => {\n      Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (window)\");\n      window.dispatchEvent(new Event(\"DOMContentLoaded\"));\n      Logging.logger.debug(\"dispatchEvent: load (window)\");\n      window.dispatchEvent(new Event(\"load\"));\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function hasScripts(window: Window) {\n  if (!allowScripts) {\n    return false;\n  }\n  return (\n    deferredScripts.length > 0 ||\n    !!window.document.head.querySelector(\"script[data-vivliostyle-scripting]\")\n  );\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap: { [key: string]: string } = {};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /** @override */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n          const child = element.firstElementChild;\n          if (child && Vtree.canIgnore(child.previousSibling)) {\n            const childStyle = styler.getStyle(child, false);\n            if (childStyle) {\n              const childDisplay = CssCascade.getProp(childStyle, \"display\");\n              if (\n                childDisplay?.value &&\n                childDisplay.value !== Css.ident.inline\n              ) {\n                continue;\n              }\n            }\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"] as CssCascade.CascadeValue;\n          if (!content || !Vtree.nonTrivialContent(content.value)) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ): CssCascade.ElementStyleMap {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap: CssCascade.ElementStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle: { [key: string]: CssCascade.CascadeValue } =\n        (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (\n      templateURLVal instanceof Css.URL ||\n      templateURLVal === Css.ident.footnote\n    ) {\n      const url =\n        templateURLVal instanceof Css.URL\n          ? templateURLVal.url\n          : Base.resolveURL(\"user-agent.xml#footnote\", Base.resourceBaseURL);\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n        cont2.then((shadow) => {\n          shadow = this.createPseudoelementShadow(\n            element,\n            isRoot,\n            cascStyle,\n            computedStyle,\n            styler,\n            context,\n            shadowContext,\n            shadow,\n          );\n          frame.finish(shadow);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    const isRoot = !this.nodeContext?.parent;\n    if (isRoot) {\n      // Ensure that writing-mode and direction are set on the root element.\n      if (!cascMap[\"writing-mode\"] && this.styler.rootStyle[\"writing-mode\"]) {\n        cascMap[\"writing-mode\"] = this.styler.rootStyle[\n          \"writing-mode\"\n        ] as CssCascade.CascadeValue;\n      }\n      if (!cascMap[\"direction\"] && this.styler.rootStyle[\"direction\"]) {\n        cascMap[\"direction\"] = this.styler.rootStyle[\n          \"direction\"\n        ] as CssCascade.CascadeValue;\n      }\n    }\n    const verticalParent = vertical;\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    const verticalChanged = !isRoot && vertical !== verticalParent;\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n\n    const transform = (\n      name: string,\n      cascVal: CssCascade.CascadeValue,\n    ): Css.Val => {\n      // The percent value of inline-size on vertical-in-horizontal or\n      // horizontal-in-vertical block needs to be resolved against the\n      // page area height or width. (Fix for issue #1264)\n      let percentRef: number;\n      if (verticalChanged) {\n        if (vertical) {\n          if (/^(min-|max-)?(height|inline-size)$/.test(name)) {\n            percentRef = context.pageAreaHeight;\n          }\n        } else {\n          if (/^(min-|max-)?(width|inline-size)$/.test(name)) {\n            percentRef = context.pageAreaWidth;\n          }\n        }\n      }\n      let value = cascVal.evaluate(context, name, percentRef, vertical);\n      if (name == \"font-family\") {\n        value = this.docFaces.filterFontFamily(value);\n      }\n      return value;\n    };\n\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      transform,\n    );\n\n    if (verticalChanged) {\n      // The auto value of inline-size on vertical-in-horizontal or\n      // horizontal-in-vertical block is changed to max-content.\n      // (Fix for issue #1264)\n      const inlineSize = computedStyle[vertical ? \"height\" : \"width\"];\n      if (!inlineSize || inlineSize === Css.ident.auto) {\n        computedStyle[vertical ? \"height\" : \"width\"] = Css.ident.max_content;\n      }\n    }\n\n    if (Display.isRunning(computedStyle[\"position\"])) {\n      // Running elements\n      computedStyle[\"position\"] = Css.ident.fixed;\n      computedStyle[\"visibility\"] = Css.ident.hidden;\n      return vertical;\n    }\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"];\n    const display =\n      (computedStyle[\"display\"] as Css.Ident) ||\n      ((this.sourceNode as Element).namespaceURI === Base.NS.XHTML\n        ? Css.ident.inline\n        : undefined); // leave it to the browser for MathML and SVG\n    const displayValues = Display.getComputedDisplayValue(\n      display,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      let fontSize: Css.Val;\n      let lineHeight: Css.Val;\n\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const prop = CssCascade.getProp(style, name);\n        let prop1 = prop;\n        if (!Css.isDefaultingValue(prop.value)) {\n          if (\n            name === \"font-size\" &&\n            i === styles.length - 1 &&\n            this.context.isRelativeRootFontSize &&\n            this.context.rootFontSize\n          ) {\n            // Fix for issue #608, #549\n            prop1 = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootFontSize, \"px\"),\n              prop.priority,\n            );\n          } else if (\n            name === \"line-height\" &&\n            i === styles.length - 1 &&\n            this.context.rootLineHeight &&\n            prop.value instanceof Css.Numeric &&\n            (prop.value.unit === \"lh\" || prop.value.unit === \"rlh\")\n          ) {\n            // line-height with lh or rlh unit on root element\n            prop1 = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootLineHeight, \"px\"),\n              prop.priority,\n            );\n          } else if (\n            i === 0 &&\n            prop.value instanceof Css.Numeric &&\n            prop.value.unit === \"lh\"\n          ) {\n            // line-height with lh unit on current element\n            prop1 = new CssCascade.CascadeValue(\n              new Css.Numeric(\n                prop.value.num *\n                  this.getLineHeightUnitSize(name, fontSize, lineHeight),\n                \"px\",\n              ),\n              prop.priority,\n            );\n          } else if (!Css.isCustomPropName(name)) {\n            prop1 = prop.filterValue(inheritanceVisitor);\n          }\n\n          if (name === \"font-size\") {\n            fontSize = prop1.value;\n          } else if (name === \"line-height\") {\n            lineHeight = prop1.value;\n          }\n\n          props[name] = prop1;\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (Css.isDefaultingValue(value)) {\n            if (value === Css.ident.initial) {\n              props[name] = undefined;\n            }\n          } else if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n              default:\n                props[name] = value;\n            }\n          } else {\n            props[name] = value;\n          }\n          if (![\"widows\", \"orphans\"].includes(name)) {\n            // Note: widows and orphans are polyfilled for page and\n            // root multi-column, but they should be left to the browser\n            // for multi-column boxes inside body. (Issue #1182)\n            delete computedStyle[name];\n          }\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Val,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? this.nodeContext.shadowContext.styler\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const positionCV: CssCascade.CascadeValue = elementStyle[\"position\"];\n    const floatCV: CssCascade.CascadeValue = elementStyle[\"float\"];\n    const floatReferenceCV: CssCascade.CascadeValue =\n      elementStyle[\"float-reference\"];\n    const floatReference =\n      floatCV &&\n      !Css.isDefaultingValue(floatCV.value) &&\n      floatCV.value !== Css.ident.none &&\n      floatReferenceCV &&\n      !Css.isDefaultingValue(floatReferenceCV.value)\n        ? PageFloats.floatReferenceOf(floatReferenceCV.value.toString())\n        : null;\n    if (\n      this.nodeContext.parent &&\n      (Display.isRunning(positionCV?.value) ||\n        (floatReference && PageFloats.isPageFloat(floatReference)))\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    if (\n      floatReference &&\n      PageFloats.isPageFloat(floatReference) &&\n      computedStyle[\"display\"] === Css.ident.block\n    ) {\n      // Fix page float margin collapsing issue (Issue #1282)\n      computedStyle[\"display\"] = Css.ident.flow_root;\n    }\n    styler.processContent(\n      element,\n      computedStyle,\n      this.nodeContext.viewNode ?? this.nodeContext.parent?.viewNode,\n    );\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    if (\n      Scripts.allowScripts &&\n      element.localName === \"script\" &&\n      element.namespaceURI === Base.NS.XHTML\n    ) {\n      Scripts.loadScript(\n        element as HTMLScriptElement,\n        this.viewport.window,\n      ).thenFinish(frame);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"] as Css.Ident;\n    if (Css.isDefaultingValue(display)) {\n      if (display === Css.ident.initial || display === Css.ident.unset) {\n        display = Css.ident.inline;\n      } else if (display === Css.ident.inherit) {\n        display =\n          this.nodeContext.parent?.display &&\n          Css.getName(this.nodeContext.parent?.display);\n      } else {\n        display = null;\n      }\n    }\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"] as Css.Ident;\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"] as Css.Ident;\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"] as Css.Ident,\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide instanceof Css.SpaceList ||\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.snap_inline ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.inline_start ||\n          clearSide === Css.ident.inline_end ||\n          clearSide === Css.ident.block_start ||\n          clearSide === Css.ident.block_end ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      const breakInside = computedStyle[\"break-inside\"];\n      if (\n        floating ||\n        (breakInside &&\n          !Css.isDefaultingValue(breakInside) &&\n          breakInside !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      const floatMinWrapBlock = computedStyle[\"float-min-wrap-block\"];\n      this.nodeContext.floatMinWrapBlock =\n        floatMinWrapBlock && !Css.isDefaultingValue(floatMinWrapBlock)\n          ? (floatMinWrapBlock as Css.Numeric)\n          : null;\n\n      // Leaves handling of multicol specified on non-root/body elements to the browser\n      const insideNonRootMultiColumn = this.isInsideNonRootMultiColumn();\n\n      const columnSpan = computedStyle[\"column-span\"];\n      this.nodeContext.columnSpan =\n        !insideNonRootMultiColumn &&\n        columnSpan &&\n        !Css.isDefaultingValue(columnSpan)\n          ? columnSpan\n          : null;\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (\n          breakAfter &&\n          !Css.isDefaultingValue(breakAfter) &&\n          !(insideNonRootMultiColumn && breakAfter === Css.ident.column)\n        ) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n          if (Break.forcedBreakValues[this.nodeContext.breakAfter]) {\n            delete computedStyle[\"break-after\"];\n          }\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (\n          breakBefore &&\n          !Css.isDefaultingValue(breakBefore) &&\n          !(insideNonRootMultiColumn && breakBefore === Css.ident.column)\n        ) {\n          if (this.nodeContext.fragmentIndex === 1) {\n            this.nodeContext.breakBefore = breakBefore.toString();\n          }\n          if (Break.forcedBreakValues[this.nodeContext.breakBefore]) {\n            delete computedStyle[\"break-before\"];\n          }\n        }\n        // Named page type\n        const pageVal: Css.Val = computedStyle[\"page\"];\n        let pageType =\n          pageVal && !Css.isDefaultingValue(pageVal) && pageVal.toString();\n        if (\n          !pageType &&\n          !this.nodeContext.parent &&\n          (this.nodeContext.shadowContext ||\n            display === Css.ident.table_header_group ||\n            display === Css.ident.table_footer_group)\n        ) {\n          // Keep currentPageType for shadowContext (Fix for issue #1233)\n          pageType = this.styler.cascade.currentPageType;\n        }\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (\n          this.styler.cascade.currentPageType !== pageType &&\n          // Fixed positioned or running elements should not affect page type\n          // unless page type is explicitly set\n          !(!pageType && computedStyle[\"position\"] === Css.ident.fixed)\n        ) {\n          if (\n            this.nodeContext.fragmentIndex === 1 &&\n            !Break.isSpreadBreakValue(this.nodeContext.breakBefore)\n          ) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          // Fix for issue #1309\n          if (pageType !== this.styler.cascade.previousPageType) {\n            this.styler.cascade.previousPageType =\n              this.styler.cascade.currentPageType;\n          }\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing: Css.Val;\n        let blockBorderSpacing: Css.Val;\n        if (borderSpacing) {\n          if (borderSpacing instanceof Css.SpaceList) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      const footnotePolicy = computedStyle[\"footnote-policy\"] as Css.Ident;\n      this.nodeContext.footnotePolicy =\n        footnotePolicy && !Css.isDefaultingValue(footnotePolicy)\n          ? footnotePolicy\n          : null;\n      const firstPseudo = computedStyle[\"x-first-pseudo\"] as Css.Int;\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter instanceof Css.Str) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      if (\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere\n      ) {\n        this.nodeContext.breakWord = true;\n      }\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (elementStyle[\"content\"]?.value?.url) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else if (computedStyle[\"display\"] === Css.ident.none) {\n          // No element should be created if display:none is set.\n          // (Fix issue #924)\n          frame.finish(false);\n          return;\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        let delayedAlt: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (!Scripts.allowScripts && attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                const transformedValue =\n                  this.documentURLTransformer.transformFragment(\n                    attributeValue,\n                    this.xmldoc.url,\n                  );\n                if (\n                  Scripts.allowScripts &&\n                  result.localName !== \"tr\" && // issue #1439\n                  !(\n                    result.namespaceURI === Base.NS.SVG &&\n                    result.localName !== \"svg\"\n                  ) &&\n                  !result.ownerDocument.getElementById(attributeValue)\n                ) {\n                  // Keep original id value so that JavaScript can manipulate it\n                  result.setAttribute(attributeName, attributeValue);\n                  result.setAttribute(\"data-vivliostyle-id\", transformedValue);\n\n                  // Create an anchor element with transformed id, necessary for internal links in output PDF\n                  // (issue #877)\n                  const anchorElem = result.ownerDocument.createElement(\"a\");\n                  anchorElem.setAttribute(attributeName, transformedValue);\n                  anchorElem.setAttribute(Vtree.SPECIAL_ATTR, \"1\");\n                  anchorElem.style.position = \"absolute\";\n                  result.appendChild(anchorElem);\n                } else {\n                  result.setAttribute(attributeName, transformedValue);\n                }\n                this.page.registerElementWithId(result, transformedValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            } else if (\n              attributeName === \"data\" &&\n              custom &&\n              tag === \"object\" &&\n              result.hasAttribute(\"data\")\n            ) {\n              // the data attribute is already set in OPFView.makeObjectView()\n              continue;\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = Net.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.documentURLTransformer.transformURL(\n                this.resolveURL(attributeValue),\n                this.xmldoc.url,\n              );\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"alt\" &&\n            !attributeNS &&\n            tag == \"img\" &&\n            ns == Base.NS.XHTML\n          ) {\n            // The alt attribute should be assigned after the src attribute\n            // to avoid the image box size being determined by the alt text.\n            // (Issue #1343)\n            delayedAlt = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(Net.loadElement(result, attributeValue));\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = Net.loadElement(image, delayedSrc, delayedAlt);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          const isInsideRunningElement = (): boolean => {\n            // Check if the image is inside a position:fixed or running element\n            // which is converted to position:fixed.\n            if (computedStyle[\"position\"] === Css.ident.fixed) {\n              return true;\n            }\n            for (\n              let p = this.nodeContext.parent?.viewNode as HTMLElement;\n              p && p !== this.viewRoot;\n              p = p.parentElement\n            ) {\n              if (p.style?.[\"position\"] === \"fixed\") {\n                return true;\n              }\n            }\n            return false;\n          };\n          const hasPercentBlockSize = (): boolean => {\n            // Check if the image has percentage block size, which is usually same as auto,\n            // which means the size is not determined until the image is loaded.\n            const blockSize = this.nodeContext.vertical ? cssWidth : cssHeight;\n            return blockSize instanceof Css.Numeric && blockSize.unit === \"%\";\n          };\n          if (\n            !hasAutoWidth &&\n            !hasAutoHeight &&\n            !hasPercentBlockSize() &&\n            !isInsideRunningElement()\n          ) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(Net.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n\n        if (this.nodeContext.inline) {\n          if (!firstTime) {\n            Break.setBoxBreakFlag(result, \"inline-start\");\n            if (Break.isCloneBoxDecorationBreak(result)) {\n              Break.setBoxBreakFlag(result, \"clone\");\n            }\n          }\n        } else {\n          if (!firstTime) {\n            const blockSizeP = this.nodeContext.vertical ? \"width\" : \"height\";\n            if (Base.getCSSProperty(result, blockSizeP)) {\n              // When a box with a specified block size is fragmented,\n              // the fragmented box should not have the block size.\n              // If the box is table-row, set a very small block size\n              // (0 does not work in Firefox, so use 0.01px instead)\n              // to prevent the row block size from expanding due to\n              // large rowspanning cells.\n              Base.setCSSProperty(\n                result,\n                blockSizeP,\n                this.nodeContext.display === \"table-row\" ? \"0.01px\" : \"\",\n              );\n            }\n            Break.setBoxBreakFlag(result, \"block-start\");\n            if (Break.isCloneBoxDecorationBreak(result)) {\n              Break.setBoxBreakFlag(result, \"clone\");\n            }\n            Break.setMarginDiscardFlag(result, \"block-start\");\n          } else if (\n            !Display.isAbsolutelyPositioned(computedStyle[\"position\"])\n          ) {\n            const marginBreak = computedStyle[\"margin-break\"];\n\n            // Detect forced or unforced break at this point\n            // to handle margin-break properly.\n            // Note: Do not use `atUnforcedBreak` which may be inaccurate.\n            const breakType = this.getBreakTypeAt(this.nodeContext);\n            const anyBreak = breakType !== null;\n            const unforcedBreak = breakType === \"auto\";\n            if (\n              (marginBreak === Css.ident.discard && anyBreak) ||\n              (marginBreak !== Css.ident.keep &&\n                unforcedBreak &&\n                !this.nodeContext.floatSide)\n            ) {\n              Break.setMarginDiscardFlag(result, \"block-start\");\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Check if the current element is inside multi-column element\n   * that is not root or body element in the source tree.\n   *\n   * Note: vivliostyle handles multi-column on the root and body element on its own,\n   * but leaves it to the browser to handle other multi-column.\n   * This check is for such non-root/body multi-column.\n   */\n  private isInsideNonRootMultiColumn(): boolean {\n    for (\n      let node = this.nodeContext.parent?.viewNode;\n      node;\n      node = node.parentNode\n    ) {\n      const style = node.nodeType === 1 ? (node as HTMLElement).style : null;\n      if (!style) {\n        break;\n      }\n      if (\n        !isNaN(parseFloat(style.columnCount)) ||\n        !isNaN(parseFloat(style.columnWidth))\n      ) {\n        return true;\n      }\n      if (style.position === \"absolute\") {\n        break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced or unforced break\n   * (Fix for Issue #690)\n   *\n   * @param nodeContext\n   * @returns forced break type, or \"auto\" for unforced break, or null for not break\n   */\n  private getBreakTypeAt(nodeContext: Vtree.NodeContext): string | null {\n    for (let nc = nodeContext; nc && !nc.after; nc = nc.parent) {\n      if (Break.isForcedBreakValue(nc.breakBefore)) {\n        return nc.breakBefore; // forced break\n      }\n      if (nc.fragmentIndex === 1 && !nc.parent) {\n        if (nc.sourceNode === nc.sourceNode.ownerDocument.documentElement) {\n          // beginning of document\n          return \"page\";\n        } else {\n          // page floats, etc.\n          return null;\n        }\n      }\n      if (nc.parent?.floatSide) {\n        // inside float, not break (Issue #1282)\n        return null;\n      }\n      const parentViewNode = nc.parent?.viewNode as Element;\n      if (parentViewNode) {\n        const style = this.viewport.window.getComputedStyle(parentViewNode);\n        const paddingBlockStart = parseFloat(style.paddingBlockStart);\n        const borderBlockStartWidth = parseFloat(style.borderBlockStartWidth);\n        if (paddingBlockStart || borderBlockStartWidth) {\n          // parent's viewNode has block-start padding or border\n          return null;\n        }\n        let node = parentViewNode?.firstChild;\n        while (\n          node &&\n          (Vtree.canIgnore(node, nc.parent.whitespace) ||\n            (!nc.floatSide && LayoutHelper.isOutOfFlow(node)))\n        ) {\n          node = node.nextSibling;\n        }\n        if (node && node !== nc.viewNode) {\n          // parent's viewNode already has other content\n          return null;\n        }\n      }\n    }\n\n    const startBreakType = (\n      this.context as Exprs.Context & {\n        currentLayoutPosition: Vtree.LayoutPosition;\n      }\n    )?.currentLayoutPosition?.flowPositions[this.flowName]?.startBreakType;\n\n    if (Break.isForcedBreakValue(startBreakType)) {\n      return startBreakType; // forced break\n    } else {\n      return \"auto\"; // unforced break\n    }\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle: { [key: string]: Css.Val } = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (\n        repeatOnBreak === Css.ident.auto ||\n        Css.isDefaultingValue(repeatOnBreak)\n      ) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const isPseudo = (node: Node, name: string): boolean =>\n          node?.nodeType === 1 &&\n          PseudoElement.getPseudoName(node as Element) === name;\n        const p = this.nodeContext.parent;\n        const parent = p\n          ? isPseudo(this.viewNode, \"after\") &&\n            isPseudo(p.viewNode, \"first-letter\") &&\n            p.viewNode?.hasChildNodes()\n            ? (p.parent.viewNode as Element) // Fix for issue #1175\n            : (p.viewNode as Element)\n          : this.viewRoot;\n        if (parent) {\n          if (\n            this.nodeContext.inline &&\n            // ignore whitespace text node\n            !(this.viewNode.nodeType === 3 && Vtree.canIgnore(this.viewNode)) &&\n            !parent.hasChildNodes() &&\n            Break.getBoxBreakFlags(parent).includes(\"block-start\")\n          ) {\n            Break.setBoxBreakFlag(parent, \"text-start\");\n          }\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /** @override */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /** @override */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(Net.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    const propList = Object.keys(computedStyle);\n    propList.sort(Css.processingOrderFn);\n    let fontSize: Css.Val;\n    let lineHeight: Css.Val;\n\n    for (const propName of propList) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || (value === Css.empty && !Css.isCustomPropName(propName))) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value instanceof Css.Numeric &&\n        Exprs.needUnitConversion(value.unit)\n      ) {\n        if (value.unit === \"lh\") {\n          // for browsers not supporting \"lh\" unit\n          value = new Css.Numeric(\n            value.num *\n              this.getLineHeightUnitSize(propName, fontSize, lineHeight),\n            \"px\",\n          );\n        } else {\n          // font-size for the root element is already converted to px\n          value = Css.convertNumericToPx(value, this.context);\n        }\n      }\n\n      if (propName === \"font-size\") {\n        fontSize = value;\n      } else if (propName === \"line-height\") {\n        lineHeight = value;\n      }\n\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Get \"lh\" unit size in px\n   */\n  private getLineHeightUnitSize(\n    propName: string,\n    fontSize: Css.Val,\n    lineHeight: Css.Val,\n  ): number {\n    // Note: \"lh\" unit is inaccurate for line-height:normal, not using font metrics.\n    const defaultLineHeightNum =\n      Exprs.defaultUnitSizes[\"lh\"] / Exprs.defaultUnitSizes[\"em\"];\n\n    const parentStyle =\n      this.nodeContext.parent?.viewNode?.nodeType === 1\n        ? this.viewport.window.getComputedStyle(\n            this.nodeContext.parent.viewNode as Element,\n          )\n        : null;\n\n    const parentFontSize = parentStyle\n      ? parseFloat(parentStyle.fontSize)\n      : this.context.fontSize();\n\n    const parentLineHeight = parentStyle\n      ? parentStyle.lineHeight === \"normal\"\n        ? parentFontSize * defaultLineHeightNum\n        : parseFloat(parentStyle.lineHeight)\n      : this.context.rootLineHeight;\n\n    if (propName === \"line-height\" || propName === \"font-size\") {\n      return parentLineHeight;\n    }\n\n    let lineHeightNum: number | null = null;\n\n    if (lineHeight) {\n      if (\n        lineHeight instanceof Css.Num ||\n        (lineHeight instanceof Css.Numeric &&\n          (lineHeight.unit === \"em\" || lineHeight.unit === \"%\"))\n      ) {\n        lineHeightNum =\n          lineHeight instanceof Css.Numeric && lineHeight.unit === \"%\"\n            ? lineHeight.num / 100\n            : lineHeight.num;\n      } else if (lineHeight instanceof Css.Numeric) {\n        return (\n          lineHeight.num * this.context.queryUnitSize(lineHeight.unit, false)\n        );\n      }\n    } else {\n      for (\n        let viewNode = this.nodeContext.parent?.viewNode;\n        ;\n        viewNode = viewNode.parentNode\n      ) {\n        if (!viewNode || viewNode.nodeType !== 1) {\n          lineHeightNum = defaultLineHeightNum;\n          break;\n        }\n        const ancestorLH = (viewNode as HTMLElement)?.style?.lineHeight;\n        if (ancestorLH) {\n          if (/^[0-9.]+$/.test(ancestorLH)) {\n            lineHeightNum = parseFloat(ancestorLH);\n          }\n          if (ancestorLH === \"normal\") {\n            lineHeightNum = defaultLineHeightNum;\n          }\n          break;\n        }\n      }\n    }\n\n    if (lineHeightNum !== null) {\n      if (fontSize instanceof Css.Numeric) {\n        return (\n          lineHeightNum *\n          CssCascade.convertFontSizeToPx(fontSize, parentFontSize, this.context)\n            .num\n        );\n      } else {\n        return lineHeightNum * parentFontSize;\n      }\n    }\n    return parentLineHeight;\n  }\n\n  /** @override */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /** @override */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /** @override */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle: { [key: string]: Css.Val } = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle: { [key: string]: Css.Val } = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /** @override */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    const nodeContext1 =\n      !nodeContext.inline && nodeContext.after\n        ? nodeContext.parent\n        : nodeContext;\n    // Fix for problem with math (Issue #1038)\n    let isBeforeBlock = false;\n    if (\n      nodeContext.inline &&\n      nodeContext.after &&\n      !nodeContext.shadowContext &&\n      nodeContext.sourceNode.nextSibling?.nodeType === 1\n    ) {\n      const nextElem = nodeContext.sourceNode.nextSibling as Element;\n      const display = CssCascade.getProp(\n        this.styler.getStyle(nextElem, false),\n        \"display\",\n      )?.value.toString();\n      isBeforeBlock =\n        (display && !Display.isInlineLevel(display)) ||\n        (nextElem.getAttribute(\"data-math-typeset\") === \"true\" &&\n          /^\\s*(\\$\\$|\\\\\\[)/.test(nextElem.textContent));\n    }\n\n    let blockNestCount = 0;\n    for (let nc = nodeContext1; nc; nc = nc.parent) {\n      if (nc.viewNode?.nodeType !== 1) continue;\n\n      const elem = nc.viewNode as HTMLElement;\n      if (!elem.style) continue;\n\n      if (nc.inline) {\n        Break.setBoxBreakFlag(elem, \"inline-end\");\n        if (Break.isCloneBoxDecorationBreak(elem)) {\n          const extentBefore = nc.vertical\n            ? elem.offsetWidth\n            : elem.offsetHeight;\n          Break.setBoxBreakFlag(elem, \"clone\");\n          const extentAfter = nc.vertical\n            ? elem.offsetWidth\n            : elem.offsetHeight;\n          if (extentAfter > extentBefore) {\n            // Workaround for Chrome box-decoration-break:clone problem\n            this.fixClonedBoxDecorationOverflow(elem);\n          }\n        }\n      } else {\n        const blockSizeP = this.nodeContext.vertical ? \"width\" : \"height\";\n        if (Base.getCSSProperty(elem, blockSizeP)) {\n          // When a box with a specified block size is fragmented,\n          // the fragmented box should not have the block size.\n          Base.setCSSProperty(elem, blockSizeP, \"\");\n        }\n        Break.setBoxBreakFlag(elem, \"block-end\");\n        if (!blockNestCount++) {\n          if (nc !== nodeContext1) {\n            const { textAlign } = this.viewport.window.getComputedStyle(elem);\n            if (textAlign === \"justify\" && !isBeforeBlock) {\n              // Workaround for the problem that text-align-last:justify is\n              // not only effective at the last line of the block but also\n              // effective at lines just before child block-level or `<br>`\n              // elements.\n              const elem2 = this.createChildAnonymousBlockIfNeeded(elem);\n              if (elem2) {\n                if (elem2 !== elem) {\n                  // child anonymous block created\n                  Break.setBoxBreakFlags(elem2, [\n                    \"block-start\",\n                    \"text-start\",\n                    \"block-end\",\n                    \"text-end\",\n                    \"justify\",\n                  ]);\n                } else {\n                  Break.setBoxBreakFlag(elem, \"text-end\");\n                  Break.setBoxBreakFlag(elem, \"justify\");\n                }\n              } else {\n                // text-align-last:justify is not necessary (`<br>` at very last)\n                // or not appropriate (e.g. the last `<br>` is in middle of nested inline)\n                Break.setBoxBreakFlag(elem, \"text-end\");\n              }\n            } else {\n              Break.setBoxBreakFlag(elem, \"text-end\");\n            }\n          }\n        }\n        if (Break.isCloneBoxDecorationBreak(elem)) {\n          Break.setBoxBreakFlag(elem, \"clone\");\n        }\n        Break.setMarginDiscardFlag(elem, \"block-end\");\n      }\n    }\n  }\n\n  private fixClonedBoxDecorationOverflow(elem: HTMLElement): void {\n    const computedStyle = this.viewport.window.getComputedStyle(elem);\n    const paddingInlineEnd = parseFloat(computedStyle.paddingInlineEnd);\n    const borderInlineEndWidth = parseFloat(computedStyle.borderInlineEndWidth);\n    const adjust = -(paddingInlineEnd + borderInlineEndWidth);\n    if (!isNaN(adjust)) {\n      elem.style.marginInlineEnd = `${adjust}px`;\n    }\n  }\n\n  private createChildAnonymousBlockIfNeeded(\n    elem: HTMLElement,\n  ): HTMLElement | null {\n    const checkForcedLineBreakElem = (elem1: Element): boolean | null => {\n      const { display, position, float } =\n        this.viewport.window.getComputedStyle(elem1);\n      if (elem1.localName === \"ruby\" || Base.mediaTags[elem1.localName]) {\n        return false;\n      }\n      if (elem1.localName === \"br\") {\n        return true;\n      }\n      if (\n        (display === \"inline\" || display === \"contents\") &&\n        elem1.hasChildNodes()\n      ) {\n        const lastChild = elem1.lastElementChild;\n        if (\n          lastChild &&\n          (!lastChild.nextSibling ||\n            (lastChild.nextSibling === elem1.lastChild &&\n              Vtree.canIgnore(lastChild.nextSibling)))\n        ) {\n          const found = checkForcedLineBreakElem(lastChild);\n          if (found || found === null) {\n            return found;\n          }\n        }\n        for (\n          let child = lastChild?.previousElementSibling;\n          child;\n          child = child.previousElementSibling\n        ) {\n          const found = checkForcedLineBreakElem(child);\n          if (found || found === null) {\n            // forced line break is found at middle of nested inline\n            return null;\n          }\n        }\n        return false;\n      }\n      if (\n        display === \"none\" ||\n        position === \"absolute\" ||\n        position === \"fixed\" ||\n        (float && float !== \"none\") ||\n        elem1.hasAttribute(Vtree.SPECIAL_ATTR)\n      ) {\n        const prevElem = elem1.previousElementSibling;\n        if (\n          prevElem &&\n          (prevElem.nextSibling === elem1 ||\n            (prevElem.nextSibling === elem1.previousSibling &&\n              Vtree.canIgnore(prevElem.nextSibling)))\n        ) {\n          return checkForcedLineBreakElem(prevElem);\n        }\n        return false;\n      }\n      if (!display || Display.isInlineLevel(display)) {\n        return false;\n      }\n      return true;\n    };\n\n    let forcedBreakElem: Element | null = null;\n    for (\n      let child = elem.lastElementChild;\n      child;\n      child = child.previousElementSibling\n    ) {\n      const found = checkForcedLineBreakElem(child);\n      if (found) {\n        forcedBreakElem = child;\n        break;\n      }\n      if (found === null) {\n        // forced line break is found at middle of nested inline\n        return null;\n      }\n    }\n\n    if (!forcedBreakElem) {\n      // forced line break is not found\n      return elem;\n    }\n\n    if (\n      forcedBreakElem === elem.lastElementChild &&\n      (!forcedBreakElem.nextSibling ||\n        (forcedBreakElem.nextSibling === elem.lastChild &&\n          Vtree.canIgnore(forcedBreakElem.nextSibling)))\n    ) {\n      // forced line break is found at very last\n      return null;\n    }\n\n    const anonymousBlock = elem.ownerDocument.createElement(\"span\");\n    anonymousBlock.className = \"viv-anonymous-block\";\n\n    for (\n      let node = forcedBreakElem.nextSibling, nextNode = null;\n      node;\n      node = nextNode\n    ) {\n      nextNode = node.nextSibling;\n      anonymousBlock.appendChild(node);\n    }\n    elem.appendChild(anonymousBlock);\n    return anonymousBlock;\n  }\n\n  /** @override */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /** @override */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  \"margin-break\": true,\n  page: true,\n};\n\n/**\n * Need to scale `getBoundingClientRect()` result for high pixel ratio output?\n * Note: This is only needed for Chromium older than 128. (Issue #1370)\n */\nlet needScaleRect: boolean | null = null;\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n  scaleRatio: number;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n    this.scaleRatio = viewport.scaleRatio;\n  }\n\n  private scaleRect(rect: Vtree.ClientRect): Vtree.ClientRect {\n    return needScaleRect\n      ? ({\n          left: rect.left * this.scaleRatio,\n          top: rect.top * this.scaleRatio,\n          right: rect.right * this.scaleRatio,\n          bottom: rect.bottom * this.scaleRatio,\n          width: rect.width * this.scaleRatio,\n          height: rect.height * this.scaleRatio,\n        } as Vtree.ClientRect)\n      : rect;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /** @override */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.scaleRect(this.subtractOffsets(rect, layoutBoxRect)),\n    );\n  }\n\n  /** @override */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.scaleRect(this.subtractOffsets(rect, layoutBoxRect));\n  }\n\n  /** @override */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n\n  /**\n   * Adjust length value with rendering precision.\n   * @param value Length value to adjust\n   * @return Adjusted length value\n   * @override\n   */\n  adjustLengthValue(value: number): number {\n    const precision = 64 * (this.scaleRatio || 1);\n    return Math.floor(value * precision) / precision;\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: HTMLElement;\n  width: number;\n  height: number;\n  scaleRatio: number = 1;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    public readonly pixelRatio: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n\n    let outerZoomBox = this.root.firstElementChild as HTMLElement;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild as HTMLElement;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n\n    if (pixelRatio > 0 && CSS.supports(\"zoom\", \"8\")) {\n      // Emulate high pixel ratio using zoom and transform:scale().\n      // Workaround for issue #419 (minimum border width too thick)\n      // and #1076 (layout depends on device pixel ratio).\n      //\n      // CSS variables --viv-outputPixelRatio, --viv-devicePixelRatio,\n      // and --viv-outputScale are used in zoom and transform property values\n      // to emulate high pixel ratio output.\n      // (see VivliostyleViewportCss in assets.ts)\n      Base.setCSSProperty(this.root, \"--viv-outputPixelRatio\", `${pixelRatio}`);\n      Base.setCSSProperty(\n        this.root,\n        \"--viv-devicePixelRatio\",\n        `${window.devicePixelRatio}`,\n      );\n\n      this.scaleRatio = pixelRatio / window.devicePixelRatio;\n      if (needScaleRect === null) {\n        // Check if getBoundingClientRect() result needs to be scaled.\n        // Note: This is only needed for Chromium older than 128. (Issue #1370)\n        needScaleRect = !(\"currentCSSZoom\" in contentContainer);\n      }\n      if (needScaleRect) {\n        Base.setCSSProperty(\n          this.root,\n          \"--viv-scaleRectRatio\",\n          `${this.scaleRatio}`,\n        );\n      }\n    }\n\n    let layoutBox = outerZoomBox.nextElementSibling as HTMLElement;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox;\n    this.contentContainer = contentContainer;\n    this.layoutBox = layoutBox;\n    this.width =\n      opt_width ||\n      parseFloat(window.getComputedStyle(this.root).width) ||\n      this.root.offsetWidth ||\n      window.innerWidth;\n    this.height =\n      opt_height ||\n      parseFloat(window.getComputedStyle(this.root).height) ||\n      this.root.offsetHeight ||\n      window.innerHeight;\n\n    // Use the fallbackPageSize if window size is 0 or browser is in headless mode.\n    const fallbackPageSize = {\n      // compromise between A4 (210mm 297mm) and letter (8.5in 11in)\n      width: 794, // 210mm (8.27in)\n      height: 1056, // 279.4mm (11in)\n    };\n    const isHeadlessBrowser =\n      (!window.outerWidth && !window.outerHeight) ||\n      /Headless/.test(navigator.userAgent) ||\n      (navigator.webdriver &&\n        window.innerWidth === 800 &&\n        window.innerHeight === 600);\n\n    if (!this.width || (!opt_width && isHeadlessBrowser)) {\n      this.width = fallbackPageSize.width;\n    }\n    if (!this.height || (!opt_height && isHeadlessBrowser)) {\n      this.height = fallbackPageSize.height;\n    }\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.root, \"--viv-outputScale\", `${scale}`);\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.FetchResponse): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.FetchResponse,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.FetchResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss, UserAgentTocCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"] as CssCascade.CascadeValue;\n      const height = viewportProps[\"height\"] as CssCascade.CascadeValue;\n      const textZoom = viewportProps[\"text-zoom\"] as CssCascade.CascadeValue;\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).then(() => {\n      // JavaScript in HTML documents support\n      Scripts.loadScriptsInHead(\n        this.xmldoc.document,\n        this.viewport.window,\n        this.styler,\n      ).thenFinish(frame);\n    });\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    if (!pageProps[\"\"]) {\n      pageProps[\"\"] = {};\n    }\n    Object.keys(pageProps).forEach((selector) => {\n      let pageStyle = pageProps[selector] as {\n        [key: string]: CssCascade.CascadeValue;\n      };\n\n      // Substitute var() in @page\n      this.styler.cascade.applyVarFilter([pageStyle], this.styler, null);\n\n      // Calculate calc()\n      this.styler.cascade.applyCalcFilter(pageStyle, this.styler.context);\n\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageStyle),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /** @override */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /** @override */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /** @override */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /** @override */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): void {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  override evalSupportsTest(\n    name: string,\n    value: string,\n    isFunc: boolean,\n  ): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        return this.evalSupportsSelector(value);\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  /**\n   * @param selectorText\n   * @returns true if selectorText is supported selector\n   */\n  private evalSupportsSelector(selectorText: string): boolean {\n    const sph = new StyleParserHandler(null);\n    const tokenizer = new CssTokenizer.Tokenizer(selectorText + \"{}\", sph);\n    const parser = new CssParser.Parser(\n      CssParser.actionsBase,\n      tokenizer,\n      sph,\n      \"\",\n    );\n    if (\n      parser.runParser(Number.POSITIVE_INFINITY, false, false, false, false)\n    ) {\n      return !sph.cascadeParserHandler.invalid;\n    }\n    return false;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string | null): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = flowPos.startBreakType;\n          flowPos.startBreakType = Break.breakValueToStartBreakType(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n      if (\n        pageMaster.pageBox.pseudoName ===\n          PageMaster.userAgentPageMasterPseudo &&\n        !(this.actualPageWidth && this.actualPageHeight)\n      ) {\n        // If page master is UA page master and page size is not determined,\n        // set lookup position to infinity.\n        // This is to prevent pagination problem depending on viewport size.\n        // (Fix for Issue #1228)\n        coeff = Infinity;\n      }\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      const savedPageType = this.styler.cascade.currentPageType;\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      this.styler.cascade.currentPageType = savedPageType; // Fix for Issue #1450\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startBreakType);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats. (Issue #681)\n    const checkPageFloatForLaterPage = (\n      float: PageFloats.PageFloat,\n    ): boolean => {\n      // FIXME: This check is incomplete when float-reference is other than \"page\".\n      // so give up for now to prevent another problem (Issue #962, #1273).\n      if (float.floatReference !== PageFloats.FloatReference.PAGE) {\n        return false;\n      }\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      const deferredFloatOffset = this.xmldoc.getNodeOffset(\n        float.nodePosition.steps[0].node,\n        0,\n        false,\n      );\n      return (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      );\n    };\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n\n        // Prevent deferred page floats from appearing in the preceding pages\n        // (Issue #681)\n        if (checkPageFloatForLaterPage(float)) {\n          loopFrame.breakLoop();\n          return;\n        }\n\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startBreakType)) {\n      return Task.newResult(true);\n    }\n\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    // forced break or \"auto\"\n                    flowPosition.startBreakType =\n                      Break.breakValueToStartBreakType(column.pageBreakType);\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.rtl = layoutContainer.rtl;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              (layoutContainer.rtl\n                ? columnCount - currentColumnIndex - 1\n                : currentColumnIndex) *\n                (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              (layoutContainer.rtl\n                ? columnCount - currentColumnIndex - 1\n                : currentColumnIndex) *\n                (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if ((column.vertical ? column.height : column.width) >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.vertical\n          ? layoutContainer.height\n          : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.rtl = boxInstance.rtl;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n\n    if (\n      boxInstance instanceof CssPage.PageRuleMasterInstance &&\n      (layoutContainer.width <= 0 || layoutContainer.height <= 0)\n    ) {\n      Logging.logger.warn(\"Negative or zero page area size\");\n    }\n\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (\n        contentVal instanceof Css.Expr &&\n        contentVal.expr instanceof Exprs.Native &&\n        contentVal.expr.str.startsWith(\"running-element-\")\n      ) {\n        // Single running element\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            boxContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n      } else if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSingleUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n        if (innerContainerTag == \"span\") {\n          // text-spacing & hanging-punctuation on margin boxes\n          TextPolyfill.processGeneratedContent(\n            innerContainer,\n            boxInstance.getProp(this, \"text-autospace\"),\n            boxInstance.getProp(this, \"text-spacing-trim\"),\n            boxInstance.getProp(this, \"hanging-punctuation\"),\n            this.lang,\n            boxInstance.vertical,\n          );\n        }\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n\n    // Limit number of pages to prevent endless page generation\n    const LIMIT_PAGES = 10000;\n    if (cp.page > LIMIT_PAGES) {\n      throw new Error(`Too many pages generated (over ${LIMIT_PAGES} pages)`);\n    }\n    cp.page++;\n\n    const startSide = cp.startSideOfFlow(\"body\");\n    cp.isBlankPage =\n      Break.isSpreadBreakValue(startSide) && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    if (page.pageType == null) {\n      page.pageType =\n        (page.isBlankPage\n          ? this.styler.cascade.previousPageType\n          : this.styler.cascade.currentPageType) ?? \"\";\n      // Fix for issue #1309\n      this.styler.cascade.previousPageType =\n        this.styler.cascade.currentPageType;\n    }\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(page.pageType);\n\n    // Substitute var()\n    this.styler.cascade.applyVarFilter([cascadedPageStyle], this.styler, null);\n\n    // Calculate calc()\n    this.styler.cascade.applyCalcFilter(cascadedPageStyle, this.styler.context);\n\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        (pageMaster.pageBox.specified[\"width\"] as CssCascade.CascadeValue)\n          .value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        (pageMaster.pageBox.specified[\"height\"] as CssCascade.CascadeValue)\n          .value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  override startPageTemplateRule(): void {}\n\n  override startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  override startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  override startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  override startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n        \"font-face\",\n      ),\n    );\n  }\n\n  override startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  override startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  override startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  override startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.FetchResponse,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.FetchResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.triggerSingleDocumentPreprocessing = true;\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(\n    response: Net.FetchResponse,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        sources.push({\n          url: Base.resolveURL(\"user-agent-page.css\", Base.resourceBaseURL),\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (isTocBox) {\n          sources.push({\n            url: Base.resolveURL(\"user-agent-toc.css\", Base.resourceBaseURL),\n            text: UserAgentTocCss,\n            flavor: CssParser.StylesheetFlavor.USER_AGENT,\n            classes: null,\n            media: null,\n          });\n        } else {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const href = elem.getAttribute(\"href\");\n                const rel = elem.getAttribute(\"rel\")?.split(/\\s+/);\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  href &&\n                  rel?.includes(\"stylesheet\") &&\n                  (!rel.includes(\"alternate\") || classes)\n                ) {\n                  const src = Base.resolveURL(href, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: this.processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  processViewportMeta(meta: Element): string {\n    return \"\";\n  }\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport function findTocElements(doc: Document): Array<Element> {\n  // Find `<nav epub:type=\"toc\">` etc. for EPUB.\n  let tocElems = Array.from(\n    doc.querySelectorAll(\"nav[*|type],nav[epub\\\\:type]\"),\n  );\n  if (tocElems.length > 0) {\n    return tocElems;\n  }\n  // Find `role=\"doc-toc\"` for webpub.\n  tocElems = Array.from(doc.querySelectorAll(\"[role=doc-toc]\"));\n  if (tocElems.length > 0) {\n    return tocElems;\n  }\n  // If neither found, find TOC elements with the following selector.\n  const navs = \"nav,.toc,#toc,#table-of-contents,#contents,[role=directory]\";\n  for (const elem of doc.querySelectorAll(navs)) {\n    if (tocElems.find((e) => e.contains(elem))) {\n      continue; // Skip nested TOC elements.\n    }\n    let tocElem = elem;\n    if (/^h[1-6]$/.test(tocElem.localName)) {\n      // If the element is a heading, use its parent or next sibling as TOC element.\n      if (!tocElem.previousElementSibling) {\n        // If the heading is the first element, use its parent.\n        tocElem = tocElem.parentElement;\n      } else {\n        // Otherwise, use its next sibling.\n        tocElem = tocElem.nextElementSibling;\n      }\n    }\n    // TOC element must have at least one list item with an anchor element.\n    if (tocElem && tocElem.querySelector(\"li a[href]\")) {\n      tocElems.push(tocElem);\n    }\n  }\n  return tocElems;\n}\n\nexport function findTocAnchorElements(doc: Document): Array<Element> {\n  const tocElems = findTocElements(doc);\n  const anchors = [] as Array<Element>;\n  for (const tocElem of tocElems) {\n    for (const anchor of tocElem.querySelectorAll(\"li a[href]\")) {\n      anchors.push(anchor);\n    }\n  }\n  return anchors;\n}\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /** @override */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-container\":\n            computedStyle[\"padding\"] = Css.numericZero;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        Vtree.canIgnore(firstChild)\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = Base.stripFragment(this.url) + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      for (const tocElem of findTocElements(xmldoc.document)) {\n        // Set `data-vivliostyle-role=\"doc-toc\"`\n        tocElem.setAttribute(\"data-vivliostyle-role\", \"doc-toc\");\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        0,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  loadPubDoc(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.fetchFromURL(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(pubURL: string, root: string): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              opf = new OPFDoc(this, pubURL);\n              opf.initWithXMLDoc(opfXML, encXML).then(() => {\n                this.opfByURL[url] = opf;\n                this.primaryOPFByEPubURL[pubURL] = opf;\n                frame.finish(opf);\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.toc && opf.toc.src === xmldoc.url) {\n              // toc is the primary entry (X)HTML\n              if (Toc.findTocElements(doc).length === 0) {\n                // TOC is not found in the primary entry (X)HTML\n                opf.toc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (!/^https?:?\\/\\/[^/]/.test(docURL)) {\n        // not a valid URL\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  override load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n\n  override processViewportMeta(meta: Element): string {\n    let content = meta.getAttribute(\"content\");\n    if (!content) {\n      return \"\";\n    }\n    const vals = {};\n    let r: RegExpMatchArray;\n    while (\n      (r = content.match(\n        /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n      )) != null\n    ) {\n      content = content.substr(r[0].length);\n      vals[r[1]] = r[2];\n    }\n    const width = vals[\"width\"] - 0;\n    const height = vals[\"height\"] - 0;\n    if (width && height) {\n      const prePaginated = !!Object.values(this.primaryOPFByEPubURL).find(\n        (opf) => opf.prePaginated,\n      );\n      return (\n        `@-epubx-viewport{width:${width}px;height:${height}px;}` +\n        (prePaginated\n          ? `@page{size:${width}px ${height}px;margin:0;}`\n          : `@page{margin:0;}`)\n      );\n    }\n    return \"\";\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    makeDigest(\"SHA-1\", uid).then((hash) => {\n      const head = blob.slice(0, 1040);\n      const tail = blob.slice(1040, blob.size);\n      Net.readBlob(head).then((buf) => {\n        const dataView = new DataView(buf);\n        for (let k = 0; k < dataView.byteLength; k++) {\n          let b = dataView.getUint8(k);\n          b ^= hash[k % 20];\n          dataView.setUint8(k, b);\n        }\n        frame.finish(Net.makeBlob([dataView, tail]));\n      });\n    });\n    return frame.result();\n  };\n}\n\nfunction makeDigest(algorithm: string, str: string): Task.Result<Uint8Array> {\n  const frame = Task.newFrame(\"makeDigest\") as Task.Frame<Uint8Array>;\n  const continuation = frame.suspend();\n  window.crypto.subtle\n    .digest(algorithm, new TextEncoder().encode(str))\n    .then((buf) => {\n      continuation.schedule(new Uint8Array(buf));\n    });\n  return frame.result();\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  toc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /** @override */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /** @override */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.spine.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /** @override */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.toc && item.itemProperties[\"nav\"]) {\n          this.toc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Have to deobfuscate in JavaScript\n      const deobfuscator = makeDeobfuscator(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n      }\n    }\n    if (this.prePaginated) {\n      this.assignAutoPages();\n    }\n    return Task.newResult(true);\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      manifestObj[\"name\"] || manifestObj[\"metadata\"]?.[\"title\"] || doc?.title;\n    if (title) {\n      this.metadata[metaTerms.title] = (\n        Array.isArray(title) ? title : [title]\n      ).map((item) => ({ v: item.value ?? item }));\n    }\n    const author =\n      manifestObj[\"author\"] ||\n      manifestObj[\"creator\"] ||\n      manifestObj[\"metadata\"]?.[\"author\"] ||\n      Array.from(\n        doc?.querySelectorAll(\"meta[name='author'], meta[name='DC.Creator']\") ??\n          [],\n      ).map((meta: HTMLMetaElement) => meta.content);\n    if (author && author.length !== 0) {\n      this.metadata[metaTerms.creator] = (\n        Array.isArray(author) ? author : [author]\n      ).map((item) => ({ v: item.name ?? item }));\n    }\n    const language =\n      manifestObj[\"inLanguage\"] ||\n      manifestObj[\"metadata\"]?.[\"language\"] ||\n      doc?.documentElement.lang ||\n      doc?.documentElement.getAttribute(\"xml:lang\");\n    if (language) {\n      this.metadata[metaTerms.language] = (\n        Array.isArray(language) ? language : [language]\n      ).map((item) => ({ v: item }));\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      for (const anchorElem of Toc.findTocAnchorElements(doc)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        if (/\\.(jpe?g|png|gif|pdf|svg|mml)([#?]|$)/.test(href)) {\n          // Avoid link to non-HTML resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              readingOrderOrResources === manifestObj[\"readingOrder\"];\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              (!encodingFormat &&\n                itemObj.rel !== \"stylesheet\" &&\n                /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url))\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.toc = this.items[tocFound];\n      }\n\n      if (!this.toc) {\n        this.toc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      // remove items not in readingOrder (Issue #1257)\n      const readingOrderCount = manifestObj[\"readingOrder\"]?.length;\n      if (readingOrderCount && readingOrderCount < this.items.length) {\n        this.items.splice(readingOrderCount);\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocVisible: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n\n    const oldPage = viewItem.pages[pos ? pos.page : 0];\n    let page = this.makePage(viewItem, pos);\n    if (oldPage) {\n      // If the old page exists, keep the pageType (named page).\n      // This is necessary for named page with target-counter() to work.\n      // (fix for issue #1136)\n      page.pageType = oldPage.pageType;\n    }\n\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              // Save the page type and restore it after re-rendering page.\n              // This is necessary for named page with target-counter() to work.\n              // (fix for issue #1272)\n              const { currentPageType, previousPageType } =\n                viewItem.instance.styler.cascade;\n\n              // Save the scopes and restore them after re-rendering page.\n              // This is necessary for :blank page selector to work.\n              // (fix for issue #1131)\n              const scopes = Object.entries(viewItem.instance.scopes);\n\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                viewItem.instance.styler.cascade.currentPageType =\n                  currentPageType;\n                viewItem.instance.styler.cascade.previousPageType =\n                  previousPageType;\n                viewItem.instance.scopes = Object.fromEntries(scopes);\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            page.container.setAttribute(\n              \"data-vivliostyle-page-index\",\n              pageIndex,\n            );\n            page.container.setAttribute(\n              \"data-vivliostyle-spine-index\",\n              page.spineIndex,\n            );\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderAllPages\");\n    this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    ).then((result) => {\n      // Wait until all images are loaded (Issue #1321)\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            this.spineItems.some((viewItem) =>\n              viewItem?.pages.some((page) =>\n                page?.fetchers.some((fetcher) => !fetcher.arrived),\n              ),\n            )\n          ) {\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            loopFrame.breakLoop();\n          }\n        })\n        .then(() => {\n          frame.finish(result);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult({ left: null, right: null });\n    }\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getSpread\");\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (\n      page.offset === 0 &&\n      !(viewItem.instance.blankPageAtStart && viewItem.pages.length === 0)\n    ) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"object\");\n      if (data) {\n        result.setAttribute(\"data\", data);\n      }\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /** @override */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.pixelRatio,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        if (!this.opf.pageProgression && instance.pageProgression) {\n          // Use the first instance's page progression as the global page progression.\n          // (Fix for issue #1260)\n          this.opf.pageProgression = instance.pageProgression;\n        }\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.toc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    this.tocVisible = true;\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(344, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 16}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    this.tocVisible = false;\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return this.tocVisible && !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n", "/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport {\n  VivliostylePolyfillCss,\n  VivliostyleViewportCss,\n  VivliostyleViewportScreenCss,\n} from \"./assets\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  resized: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n  pixelRatio: number;\n  pixelRatioLimit: number;\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    const document = viewportElement.ownerDocument;\n    const findOrCreateStyleElement = (\n      id: string,\n      cssText?: string,\n    ): HTMLElement => {\n      let styleElement = document.getElementById(id);\n      if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        styleElement.id = id;\n        if (cssText) {\n          styleElement.textContent = cssText;\n        }\n        document.head.appendChild(styleElement);\n      }\n      return styleElement;\n    };\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-screen-css\",\n      VivliostyleViewportScreenCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-css\",\n      VivliostyleViewportCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-polyfill-css\",\n      VivliostylePolyfillCss,\n    );\n\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.resized = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = findOrCreateStyleElement(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.resized = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n\n    // Pixel ratio emulation on PDF output (PR #1079) does not work with\n    // non-Chromium browsers.\n    this.pixelRatioLimit = /Chrome/.test(navigator.userAgent)\n      ? 16 // max pixelRatio value on Chromium browsers\n      : 0; // disable pixelRatio emulation on non-Chromium browsers\n    this.pixelRatio = Math.min(8, this.pixelRatioLimit);\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    // JavaScript in HTML documents support\n    if (\n      typeof command[\"allowScripts\"] == \"boolean\" &&\n      command[\"allowScripts\"] !== Scripts.allowScripts\n    ) {\n      Scripts.setAllowScripts(command[\"allowScripts\"]);\n      this.needResize = true;\n    }\n    // output pixel ratio emulation\n    if (typeof command[\"pixelRatio\"] == \"number\") {\n      const pixelRatio = Math.min(command[\"pixelRatio\"], this.pixelRatioLimit);\n      if (pixelRatio !== this.pixelRatio) {\n        this.pixelRatio = pixelRatio;\n        this.needResize = true;\n      }\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        this.pixelRatio,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        this.pixelRatio,\n        viewportElement,\n      );\n    }\n  }\n\n  private resolveSpreadView(\n    viewport: Vgen.Viewport,\n    pageSize: { width: number; height: number } | null,\n  ): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        return (\n          (viewport.width - this.pref.pageBorder) / viewport.height >=\n            (pageSize ? (pageSize.width * 2) / pageSize.height : 1.45) &&\n          (!!pageSize || viewport.width > 800)\n        );\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const hasNoAutoSizedPages =\n      this.opfView?.hasPages() && !this.opfView.hasAutoSizedPages();\n    const spreadView = this.resolveSpreadView(\n      viewport,\n      this.resized && hasNoAutoSizedPages ? this.pageSizes[0] : null,\n    );\n    this.resized = false;\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n\n    // check if window.devicePixelRatio is changed\n    const scaleRatioChanged =\n      this.pixelRatio &&\n      this.opfView &&\n      this.pixelRatio / this.window.devicePixelRatio !==\n        this.opfView.clientLayout.scaleRatio;\n\n    if (\n      scaleRatioChanged ||\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (hasNoAutoSizedPages) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n    if (\n      pageIndex === 0 &&\n      this.pageViewMode === PageViewMode.AUTO_SPREAD &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.updateSpreadView(this.resolveSpreadView(this.viewport, pageSize));\n    }\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    // In this implementation, it generates one page rule with the largest\n    // page size both in width and height in the multiple page sizes.\n    // (Resolve issue #751)\n    if (\n      this.pageRuleStyleElement &&\n      (!this.pageSheetSizeAlreadySet ||\n        this.pageSizes[pageIndex].width !==\n          this.pageSizes[pageIndex - 1]?.width ||\n        this.pageSizes[pageIndex].height !==\n          this.pageSizes[pageIndex - 1]?.height)\n    ) {\n      const widthMax = Math.max(...this.pageSizes.map((p) => p.width));\n      const heightMax = Math.max(...this.pageSizes.map((p) => p.height));\n\n      function convertSize(px: number): number {\n        const pt = px * 0.75;\n        // Workaround for Chromium's rounded page size problem.\n        // (Fix for issue #934 and #936)\n        return Math.ceil(pt);\n      }\n      const widthPt = convertSize(widthMax);\n      const heightPt = convertSize(heightMax);\n\n      // Negative margin setting is necessary to prevent unexpected page breaking.\n      // Note that the high pixel ratio emulation, the pixelRatio setting, uses the CSS zoom property\n      // that enlarge the page content size, and Chromium splits such large pages unless this\n      // negative margin is specified.\n      const rightPt = widthPt * ((this.pixelRatio || 1) - 1) + 2;\n      const bottomPt = heightPt * ((this.pixelRatio || 1) - 1) + 2; // \"+ 2\" is for issue #947\n      const styleText = `@page {size: ${widthPt}pt ${heightPt}pt; margin: 0 ${-rightPt}pt ${-bottomPt}pt 0;}`;\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.tocVisible;\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.removeRenderedPages();\n    }\n    this.pageSizes = [];\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n\n    const spreadView = this.resolveSpreadView(this.viewport, page.dimensions);\n    if (spreadView !== this.pref.spreadView) {\n      this.updateSpreadView(spreadView);\n    }\n\n    if (spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          if (!spread.left && !spread.right) {\n            return Task.newResult(null);\n          }\n          if (\n            spread.left &&\n            spread.right &&\n            (!this.resolveSpreadView(this.viewport, spread.left.dimensions) ||\n              !this.resolveSpreadView(this.viewport, spread.right.dimensions))\n          ) {\n            // Turn off spread view mode if either left or right page is not\n            // suitable for spread view.\n            this.updateSpreadView(false);\n            this.showPage(page);\n            this.setPageZoom(page);\n            this.currentPage = page;\n            return Task.newResult(null);\n          }\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    if (!this.viewport) {\n      return this.zoom;\n    }\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          // JavaScript in HTML documents support\n                          if (\n                            Scripts.allowScripts &&\n                            Scripts.hasScripts(this.window)\n                          ) {\n                            Scripts.loadScriptsAtEnd(this.window).then(() => {\n                              if (this.renderAllPages) {\n                                this.setReadyState(\n                                  Constants.ReadyState.COMPLETE,\n                                );\n                              }\n                              this.callback({ t: \"loaded\" });\n                              frame.finish(p);\n                            });\n                          } else {\n                            if (this.renderAllPages) {\n                              this.setReadyState(Constants.ReadyState.COMPLETE);\n                            }\n                            this.callback({ t: \"loaded\" });\n                            frame.finish(p);\n                          }\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else if (typeof command[\"position\"]?.spineIndex == \"number\") {\n      const position = command[\"position\"] as Epub.Position;\n      method = () => this.opfView.findPage(position, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    if (!this.opfView) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer\n                .showCurrent(viewer.currentPage, !this.renderAllPages)\n                .then(() => {\n                  loopFrame.continueLoop();\n                });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n", "/**\n * Copyright 2015 Daishinsha Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\nimport { ErrorInfo } from \"./logging\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: ErrorInfo;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n * - allowScripts: Allow JavaScript in documents. default: true\n * - pixelRatio: Set output pixel ratio. Enables very thin border width and\n *   improves layout precision, emulating high pixel ratio.\n *   default: 8. Set 0 to disable pixel ratio emulation.\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n  allowScripts?: boolean;\n  pixelRatio?: number;\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n    allowScripts: true,\n    pixelRatio: 8,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (\n      !singleDocumentOptions ||\n      (Array.isArray(singleDocumentOptions)\n        ? !singleDocumentOptions[0] ||\n          (typeof singleDocumentOptions[0] !== \"string\" &&\n            !singleDocumentOptions[0].url)\n        : typeof singleDocumentOptions !== \"string\" &&\n          !singleDocumentOptions.url)\n    ) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: { error: new Error(\"No URL specified\") },\n      });\n      return;\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: { error: new Error(\"No URL specified\") },\n      });\n      return;\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * Navigate to the specified position.\n   */\n  navigateToPosition(position: {\n    spineIndex: number;\n    pageIndex?: number;\n    offsetInItem?: number;\n  }) {\n    this.adaptViewer_.sendCommand({\n      a: \"moveTo\",\n      position: {\n        spineIndex: position.spineIndex,\n        pageIndex: position.pageIndex ?? -1,\n        offsetInItem: position.offsetInItem ?? -1,\n      },\n    });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      this.adaptViewer_.opfView.opf.toc\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n", "// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  errorCallback: (message: string) => void | null;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  errorCallback: (message: string) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      errorCallback = null,\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.errorCallback = errorCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer({\n        viewportElement: this.iframeWin.document.body\n          .firstElementChild as HTMLElement,\n        window: this.iframeWin,\n        debug: true,\n      });\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      if (this.errorCallback) {\n        Viewer.addListener(\"error\", (payload) => {\n          const message =\n            payload.content.error?.toString() ??\n            payload.content.messages.join(\"\\n\");\n          this.errorCallback(message);\n        });\n      }\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n"],
  "mappings": "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B,GAAY,GAAY,CACzD,GACA,GACA,GACA,EACF,CAAC,EAEYqB,GAA0BrB,GAAY,GAAc,CAC/D,GACA,EACF,CAAC,EAEYsB,GAA+BtB,GAAY,GAAc,CACpE,GACA,EACF,CAAC,EAEYuB,GAA+BvB,GAAY,GAAe,CACrE,GACA,GACA,GACA,EACF,CAAC,EAEYwB,GAAwBxB,GAAY,GAAa,CAC5D,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,CAAC,EAEYyB,GAAwBzB,GAAY,GAAa,CAC5D,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,CAAC,EAEY0B,GAA2B1B,GAAY,GAAa,CAC/D,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,CAAC,EAEY2B,GAA2B3B,GAAY,GAAa,CAC/D,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,CAAC,EAEY4B,GAAuB5B,GAAY,GAAY,CAC1D,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,CAAC,EAEY6B,GAA6B7B,GAAY,GAAa,CACjE,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,IACA,EACF,CAAC,EAEY8B,GAA8B9B,GAAY,GAAa,CAClE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,EACF,CAAC,EAEY+B,GAA8B/B,GAAY,GAAa,CAClE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,EACF,CAAC,EAEYgC,GAA2BhC,GAAY,GAAgB,CAClE,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,CAAC,EAEYiC,GAAqB,GAErBC,GAAN,KAAgB,CAOrB,YACSC,EACSC,EAChB,CAFO,WAAAD,EACS,aAAAC,EARlBC,EAAA,kBACAA,EAAA,eACAA,EAAA,YAAe,GACfA,EAAA,YAAe,GACfA,EAAA,gBAAmB,GAMjB,KAAK,UAAYJ,GACjB,KAAK,OAAS,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",
  "names": ["require_diff", "__commonJSMin", "exports", "module", "DIFF_DELETE", "DIFF_INSERT", "DIFF_EQUAL", "diff_main", "text1", "text2", "cursor_pos", "cleanup", "_fix_unicode", "editdiff", "find_cursor_edit_diff", "commonlength", "diff_commonPrefix", "commonprefix", "diff_commonSuffix", "commonsuffix", "diffs", "diff_compute_", "diff_cleanupMerge", "diff_cleanupSemantic", "longtext", "shorttext", "i", "hm", "diff_halfMatch_", "text1_a", "text1_b", "text2_a", "text2_b", "mid_common", "diffs_a", "diffs_b", "diff_bisect_", "text1_length", "text2_length", "max_d", "v_offset", "v_length", "v1", "v2", "x", "delta", "front", "k1start", "k1end", "k2start", "k2end", "d", "k1", "k1_offset", "x1", "y1", "k2_offset", "x2", "diff_bisectSplit_", "k2", "y2", "y", "text1a", "text2a", "text1b", "text2b", "diffsb", "pointermin", "pointermax", "pointermid", "pointerstart", "is_surrogate_pair_start", "diff_commonOverlap_", "text_length", "best", "length", "pattern", "found", "pointerend", "is_surrogate_pair_end", "diff_halfMatchI_", "seed", "j", "best_common", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "prefixLength", "suffixLength", "hm1", "hm2", "changes", "equalities", "equalitiesLength", "lastequality", "pointer", "length_insertions1", "length_deletions1", "length_insertions2", "length_deletions2", "diff_cleanupSemanticLossless", "deletion", "insertion", "overlap_length1", "overlap_length2", "nonAlphaNumericRegex_", "whitespaceRegex_", "linebreakRegex_", "blanklineEndRegex_", "blanklineStartRegex_", "diff_cleanupSemanticScore_", "one", "two", "char1", "char2", "nonAlphaNumeric1", "nonAlphaNumeric2", "whitespace1", "whitespace2", "lineBreak1", "lineBreak2", "blankLine1", "blankLine2", "equality1", "edit", "equality2", "commonOffset", "commonString", "bestEquality1", "bestEdit", "bestEquality2", "bestScore", "score", "fix_unicode", "count_delete", "count_insert", "text_delete", "text_insert", "previous_equality", "ends_with_pair_start", "stray", "k", "starts_with_pair_end", "n", "charCode", "str", "remove_empty_tuples", "tuples", "ret", "make_edit_splice", "before", "oldMiddle", "newMiddle", "after", "oldText", "newText", "oldRange", "newRange", "oldLength", "newLength", "oldCursor", "oldBefore", "oldAfter", "maybeNewCursor", "editBefore", "newCursor", "newBefore", "newAfter", "oldPrefix", "newPrefix", "editAfter", "cursor", "oldSuffix", "newSuffix", "replaceRange", "diff", "vivliostyle_exports", "__export", "CoreViewer", "HOOKS", "Navigation", "PageProgression", "PageSide", "PageViewMode", "Profiler", "ReadyState", "UserAgentBaseCss", "UserAgentPageCss", "UserAgentTocCss", "UserAgentXml", "ValidationTxt", "VivliostylePolyfillCss", "VivliostyleViewportCss", "VivliostyleViewportScreenCss", "ZoomType", "getHooksForName", "isDebug", "pageProgressionOf", "plugin", "printHTML", "profile", "profiler", "registerHook", "removeHook", "setDebug", "__toCommonJS", "isDebug", "setDebug", "value", "PageProgression", "pageProgressionOf", "str", "PageSide", "ReadyState", "LogLevel", "Logger", "opt_console", "__publicField", "msg", "level", "args", "listener", "var_args", "argumentsToErrorInfo", "buildMessageAndStackTrace", "a", "e", "stack", "messages", "logger", "HOOKS", "hooks", "registerHook", "name", "fn", "atFirst", "logger", "hooksForName", "removeHook", "index", "getHooksForName", "plugin", "Profiler", "performanceInstance", "__publicField", "noop", "name", "timestamp", "registerTiming", "timestamps", "st", "stamps", "l", "t", "logger", "registerStartTiming", "registerEndTiming", "startEnd", "fallbackPerformanceInstance", "profiler", "profile", "firstLetterPattern", "ELEMENT_OFFSET_ATTR", "emptyObj", "stringToJSON", "str", "stripFragment", "url", "r", "stripFragmentAndQuery", "baseURL", "setBaseURL", "value", "resourceBaseURL", "setResourceBaseURL", "resolveURL", "relURL", "i", "urlOption", "j", "convertSpecialURL", "asString", "v", "PriorityQueue", "__publicField", "item", "index", "parentIndex", "parent", "result", "curr", "size", "childIndex", "knownPrefixes", "propNameMap", "checkIfPropertySupported", "prefix", "prop", "getPrefixedPropertyNames", "prefixed", "logger", "setCSSProperty", "elem", "value", "elemStyle", "prefixedPropertyNames", "getCSSProperty", "opt_value", "propertyNames", "err", "getLangAttribute", "element", "lang", "StringBuffer", "str", "escapeChar", "escapeCSSIdent", "name", "escapeCSSStr", "lightURLEncode", "isLetter", "ch", "escapeCharToHex", "escapeNameStrToHex", "s", "escapeRegExp", "unescapeCharFromHex", "unescapeStrFromHex", "unescapeChar", "regexp", "binarySearch", "high", "good", "l", "h", "m", "numberCompare", "a", "b", "indexArray", "arr", "key", "map", "k", "arrayToSet", "set", "i", "multiIndexArray", "mapObj", "obj", "fn", "res", "SimpleEventTarget", "__publicField", "evt", "list", "i", "type", "listener", "capture", "index", "mediaTags", "getId", "node", "idtxt", "escapeChar", "ch", "escape", "str", "unescapeChar", "unescape", "parseExtVal", "extstr", "result", "r", "p", "parseExt", "ext", "RefStep", "sb", "pos", "ChildStep", "index", "id", "sideBias", "elem", "childElements", "childElementCount", "child", "childIndex", "next", "movedNode", "logger", "OffsetStep", "offset", "textBefore", "textAfter", "nodeType", "textLength", "Fragment", "_Fragment", "__publicField", "fragstr", "i", "steps", "asString", "doc", "text", "after", "parent", "StringBuffer", "defaultPreferences", "clonePreferences", "pref", "defaultPreferencesInstance", "Special", "letterbox", "viewW", "viewH", "objW", "objH", "scale", "cssString", "str", "escapeCSSStr", "cssIdent", "name", "escapeCSSIdent", "makeQualifiedName", "objName", "memberName", "nextKeyIndex", "LexicalScope", "parent", "resolver", "__publicField", "Const", "builtIns", "x", "fn", "Native", "qualifiedName", "val", "isAbsoluteLengthUnit", "unit", "isViewportRelativeLengthUnit", "isFontRelativeLengthUnit", "isRootFontRelativeLengthUnit", "defaultUnitSizes", "needUnitConversion", "Context", "rootScope", "viewportWidth", "viewportHeight", "fontSize", "scope", "s", "k", "isRoot", "vertical", "pvw", "pvh", "vw", "vh", "isVertical", "params", "noBuiltInEval", "body", "args", "i", "not", "enabled", "feature", "value", "prefix", "r", "req", "actual", "isFunc", "key", "Val", "buf", "StringBuffer", "priority", "context", "other", "dependencyCache", "cached", "result", "Prefix", "Infix", "lhs", "rhs", "thisPriority", "Logical", "Comparison", "Additive", "Multiplicative", "Not", "NotMedia", "Negate", "And", "AndMedia", "Or", "Comma", "OrMedia", "Lt", "Le", "Gt", "Ge", "Eq", "Ne", "Add", "Subtract", "Multiply", "Divide", "Modulo", "Numeric", "num", "_a", "Named", "MediaName", "appendValArray", "arr", "expandValArray", "expanded", "p", "j", "Call", "_Call", "Val", "scope", "qualifiedName", "params", "buf", "priority", "appendValArray", "context", "other", "dependencyCache", "expandedParams", "expandValArray", "Cond", "_Cond", "cond", "ifTrue", "ifFalse", "Const", "val", "escapeCSSStr", "MediaTest", "_MediaTest", "name", "value", "SupportsTest", "isFunc", "Param", "index", "v", "and", "v1", "v2", "And", "add", "Add", "sub", "Negate", "Subtract", "mul", "Multiply", "div", "Divide", "Visitor", "values", "i", "empty", "slash", "str", "ident", "numeric", "num", "color", "url", "urange", "list", "func", "expr", "FilterVisitor", "__publicField", "arr", "before", "after", "k", "SpaceList", "CommaList", "Func", "Val", "buf", "StringBuffer", "scope", "ref", "toString", "visitor", "_Empty", "Const", "Empty", "_Slash", "Slash", "Str", "escapeCSSStr", "nameTable", "Ident", "name", "escapeCSSIdent", "getName", "r", "Numeric", "unit", "_a", "Multiply", "Num", "Int", "HexColor", "hex", "URL", "URange", "urangeText", "appendList", "separator", "_b", "length", "Expr", "AnyToken", "text", "toNumber", "val", "context", "convertNumericToPx", "hundredPercent", "fullWidth", "fullHeight", "numericZero", "fullURange", "processingOrder", "isDefaultingValue", "value", "processingOrderFn", "name1", "name2", "n1", "n2", "isCustomPropName", "Rect", "x1", "y1", "x2", "y2", "Point", "x", "y", "Insets", "left", "top", "right", "bottom", "Segment", "low", "high", "winding", "shapeId", "Band", "__publicField", "segmentCompare", "s1", "s2", "Shape", "_Shape", "points", "arr", "id", "length", "prev", "curr", "s", "offsetX", "offsetY", "p", "shapeForEllipse", "cx", "cy", "rx", "ry", "shapeForRect", "BandIntersection", "x", "winding", "shapeId", "lowOrHigh", "intersectY", "s", "y", "addBandIntersections", "intersections", "y1", "y2", "x1", "w1", "x2", "w2", "logger", "mergeIntersections", "includeCount", "excludeCount", "shapeCount", "windings1", "windings2", "xranges", "inside", "intersectionCount", "k", "intersection", "stillInside", "ceil", "v", "unit", "floor", "rotatePoint", "point", "Point", "rotateBox", "box", "Rect", "unrotateBox", "rotateShape", "shape", "Shape", "shapesToBands", "include", "exclude", "granularity", "snapHeight", "vertical", "result", "segments", "i", "segment", "segmentCount", "segmentCompare", "lowestIncludeIndex", "Band", "segmentIndex", "activeSegments", "y2min", "yn", "bandIntersections", "bi1", "bi2", "width", "rx", "rw", "normalize", "bands", "currBand", "prevBand", "findBand", "low", "high", "mid", "findUppermostFullyOpenRect", "rect", "topEdge", "band", "bottomEdge", "findBottommostFullyOpenRect", "positionFloat", "floatBox", "side", "floatWidth", "floatHeight", "index", "floatBottom", "addFloatToBands", "floatBands", "lastY", "floatBand", "SetVisitor", "Visitor", "__publicField", "ident", "list", "toSet", "val", "visitor", "err", "logger", "IntVisitor", "value", "num", "toInt", "def", "ShapeVisitor", "numeric", "Numeric", "func", "x", "y", "width", "height", "context", "numbers", "coord", "i", "ref", "points", "k", "Point", "Shape", "shapeForRect", "shapeForEllipse", "toShape", "CountersVisitor", "reset", "toCounters", "UrlTransformVisitor", "FilterVisitor", "baseUrl", "transformer", "url", "URL", "cloneCounterValues", "counters", "result", "name", "TargetCounterReference", "targetId", "resolved", "__publicField", "other", "CounterListener", "counterStore", "baseURL", "id", "CounterResolver", "rootScope", "pageScope", "styler", "url", "r", "transformedId", "resolveURL", "format", "getCounterNumber", "values", "expr", "Native", "arrayFormat", "arr", "getCounterNumbers", "lookForElement", "targetCounters", "countersOfName", "Const", "pageCounters", "pageCountersOfName", "elementCountersOfName", "retrievePosition", "namedRunningValues", "runningValues", "offsets", "a", "numberCompare", "currentPage", "pageStartOffset", "pageLastOffset", "ELEMENT_OFFSET_ATTR", "e", "firstOffset", "startOffset", "lastOffset", "firstExceptOffset", "i", "offset", "offsetPrev", "offsetNext", "elementAtOffset", "elementAtPageStartOffset", "element", "stringValue", "elementOffset", "CounterStore", "documentURLTransformer", "page", "counterName", "value", "pageNumber", "cascadedPageStyle", "context", "resetMap", "reset", "resetVal", "toCounters", "resetCounterName", "incrementMap", "increment", "incrementVal", "incrementCounterName", "counterValues", "unresolvedRefs", "resolvedRefs", "pushed", "ref", "j", "spineIndex", "pageIndex", "ids", "currentPageCounters", "oldPageIndex", "prevPageCounters", "refs", "idRefs", "r1", "r2", "val", "document", "node", "elemList", "clonedElem", "TARGET_COUNTER_ATTR", "foundPagesCounter", "o", "foundPageCounter", "PAGES_COUNTER_ATTR", "PAGE_COUNTER_ATTR", "runningElem", "nodes", "key", "counterExpr", "str", "targetNodes", "TARGET_COUNTER_IN_RUNNING_ATTR", "viewport", "pages", "runningNodes", "counterValue", "LayoutConstraint", "nodeContext", "viewNode", "escapeParseSingle", "str", "code", "escapeParse", "Token", "__publicField", "makeActions", "def", "spec", "a", "i", "actionsNormal", "actionsIdent", "actionsNumOrClass", "actionsMinus", "actionsIdentEsc", "actionsInt", "actionsNumber", "actionsCheckEq", "actionsColon", "actionsBar", "actionsAmp", "actionsSlash", "actionsComment", "actionsCommentStar", "actionsMinusMinus", "actionsLt", "actionsLtBang", "actionsLtBangMinus", "actionsIdentEscChr", "actionsStr1", "actionsStr2", "actionsStr1Esc", "actionsStr2Esc", "actionsURL", "actionsURLInside", "actionsURLInside1", "actionsURLInside2", "actionsURLTail", "INITIAL_INDEX_MASK", "Tokenizer", "input", "handler", "__publicField", "Token", "n", "tail", "head", "indexMask", "actions", "position", "buffer", "tokenType", "tokenPosition", "tokenText", "tokenNum", "seenSpace", "token", "backslashPos", "charCode", "escapeParse", "privateCurrentTask", "primaryScheduler", "currentTask", "newFrame", "name", "task", "frame", "Frame", "newScheduler", "opt_timer", "Scheduler", "TimerImpl", "newResult", "opt_value", "SyncResultImpl", "handle", "name", "code", "onErr", "frame", "newFrame", "err", "start", "func", "opt_name", "privateCurrentTask", "primaryScheduler", "TimerImpl", "fn", "delay", "token", "Scheduler", "timer", "__publicField", "PriorityQueue", "primaryScheduler", "slice", "timeout", "newTime", "now", "continuation", "opt_delay", "c", "err", "logger", "func", "opt_name", "task", "Task", "Frame", "done", "callback", "result", "savedTask", "privateCurrentTask", "Continuation", "otherComp", "other", "scheduler", "name", "frame", "newFrame", "opt_frame", "f", "out", "SyncResultImpl", "_SyncResultImpl", "value", "ResultImpl", "res1", "res2", "res", "parent", "step", "more", "m", "LoopBodyFrame", "opt_waitTarget", "Fetcher", "fetch", "opt_name", "__publicField", "currentTask", "frame", "newFrame", "resource", "piggibacks", "i", "err", "logger", "fn", "newResult", "waitForFetchers", "fetchers", "fetcher", "VivliostyleViewportScreenCss", "VivliostyleViewportCss", "ValidationTxt", "UserAgentXml", "UserAgentPageCss", "UserAgentBaseCss", "UserAgentTocCss", "VivliostylePolyfillCss", "fetchFromURL", "url", "opt_type", "opt_method", "frame", "newFrame", "requestInit", "continuation", "response", "res", "_a", "buffer", "fetchedContent", "makeBlob", "e", "logger", "parts", "type", "readBlob", "blob", "fileReader", "createObjectURL", "blob", "ResourceStore", "parser", "type", "__publicField", "url", "opt_required", "opt_message", "stripFragment", "resource", "newResult", "frame", "newFrame", "isTocBox", "userAgentXmlUrl", "resolveURL", "resourceBaseURL", "isUserAgentXml", "UserAgentXml", "fetchFromURL", "response", "fetcher", "Fetcher", "parseJSONResource", "store", "text", "stringToJSON", "newJSONStore", "loadElement", "elem", "src", "alt", "continuation", "done", "handler", "evt", "SPECIFICITY_USER_AGENT", "SPECIFICITY_USER", "SPECIFICITY_AUTHOR", "SPECIFICITY_STYLE", "SPECIFICITY_STYLE_IMPORTANT", "SPECIFICITY_AUTHOR_IMPORTANT", "SPECIFICITY_USER_IMPORTANT", "ParserHandler", "scope", "__publicField", "mnemonics", "token", "flavor", "ns", "name", "params", "id", "op", "value", "pseudoelem", "expr", "flowName", "pseudoName", "classes", "important", "funcName", "selectorText", "SPECIFICITY_USER_AGENT", "SPECIFICITY_USER_IMPORTANT", "SPECIFICITY_AUTHOR_IMPORTANT", "SPECIFICITY_USER", "SPECIFICITY_AUTHOR", "DispatchParserHandler", "slave", "_a", "logger", "SkippingParserHandler", "owner", "topLevel", "SlaveParserHandler", "message", "actionsBase", "actionsStyleAttribute", "actionsSelector", "actionsSelectorInFunc", "actionsSelectorCont", "actionsSelectorStart", "actionsPropVal", "actionsExprVal", "actionsExprOp", "actionsError", "actionsErrorDecl", "actionsErrorSelector", "priority", "OP_MEDIA_AND", "OP_MEDIA_OR", "OP_MEDIA_NOT", "actionsBase", "actionsStyleAttribute", "actionsSelectorStart", "actionsSelector", "actionsSelectorInFunc", "actionsSelectorCont", "actionsPropVal", "actionsExprVal", "actionsExprOp", "actionsError", "actionsErrorDecl", "actionsErrorSelector", "priority", "Parser", "actions", "tokenizer", "handler", "baseURL", "__publicField", "sep", "index", "arr", "valStack", "empty", "token", "parLevel", "v", "AnyToken", "count", "SpaceList", "actionsErrorDecl", "func", "Func", "name", "Ident", "isCustomPropName", "CommaList", "val", "Val", "mnemonics", "actionsError", "logger", "op", "val2", "tok", "args", "e1", "e2", "er", "Comma", "Expr", "name2", "name1", "Call", "makeQualifiedName", "MediaTest", "Not", "Negate", "OP_MEDIA_NOT", "NotMedia", "priority", "And", "OP_MEDIA_AND", "AndMedia", "OP_MEDIA_OR", "OrMedia", "Or", "Lt", "Gt", "Le", "Ge", "Eq", "Ne", "Add", "Subtract", "Multiply", "Divide", "Modulo", "Cond", "isFunc", "startPosition", "token1", "token2", "tokenN", "commaCount", "endPosition", "value", "SupportsTest", "hasLeadingPlus", "a", "b", "hasMinusSign", "hasSign", "r", "classes", "condition", "scope", "classList", "className", "and", "Named", "parsingValue", "parsingStyleAttr", "parsingMediaQuery", "parsingFunctionParam", "parsingRelationalSelector", "ns", "text", "num", "params", "selectorStartPosition", "actionsPropVal", "actionsSelectorStart", "actionsErrorSelector", "actionsSelectorInFunc", "actionsSelector", "pseudoclassType", "actionsSelectorCont", "actionsBase", "getName", "HexColor", "Num", "Int", "Numeric", "Str", "URL", "resolveURL", "URange", "slash", "actionsExprVal", "actionsStyleAttribute", "len", "actionsExprOp", "MediaName", "Const", "Param", "supportsTest", "ruleName", "rulePseudoName", "selectorText", "ErrorHandler", "ParserHandler", "parseStylesheet", "media", "frame", "newFrame", "parser", "parseMediaQuery", "Tokenizer", "resolvedURL", "innerFrame", "parseStylesheetFromURL", "newResult", "parseStylesheetFromText", "handle", "err", "url", "fetchFromURL", "response", "result", "parseValue", "parseStyleAttribute", "numProp", "takesOnlyNum", "propName", "evaluateExprToCSS", "context", "ident", "createRegExpMap", "valueMaps", "toPhysical", "map", "writingMode", "dest", "src", "direction", "p", "from", "to", "convert", "value", "maps", "maps2", "replaced", "values", "toPhysicalMaps", "toLogicalMaps", "toLogical", "lineRelativeValues", "toLineRelative", "i", "getSize", "clientLayout", "element", "sizes", "original", "doc", "parent", "container", "setCSSProperty", "getComputedValue", "name", "writingModeProperty", "getPrefixedPropertyNames", "writingModeValue", "isVertical", "inlineSizeName", "blockSizeName", "getFillAvailableInline", "r", "getMaxContentInline", "getMinContentInline", "getFitContentInline", "fillAvailableInline", "minContentInline", "parsedFillAvailable", "maxContentInline", "getIdealBlock", "getFillAvailableBlock", "result", "size", "_a", "isCloneBoxDecorationBreak", "element", "_a", "_b", "getBoxBreakFlags", "val", "setBoxBreakFlags", "boxBreakFlags", "setBoxBreakFlag", "boxBreakFlag", "getMarginDiscardFlags", "setMarginDiscardFlags", "marginDiscardFlags", "setMarginDiscardFlag", "marginDiscardFlag", "MarginDiscardFlags", "convertPageBreakAliases", "original", "name", "value", "ident", "forcedBreakValues", "isForcedBreakValue", "spreadBreakValues", "isSpreadBreakValue", "avoidBreakValues", "isAvoidBreakValue", "resolveEffectiveBreakValue", "first", "second", "firstIsForcedBreakValue", "secondIsForcedBreakValue", "breakValueToStartBreakType", "breakValue", "registerHook", "import_fast_diff", "diffChars", "originalText", "newText", "fastdiff", "restoreNewText", "changes", "result", "item", "fastdiff", "resolveNewIndex", "oldIndex", "resolveIndex", "resolveOriginalIndex", "newIndex", "index", "coef", "diff", "current", "change", "LayoutProcessor", "isInstanceOfBlockFormattingContext", "object", "PageFloats", "FloatReference", "Selectors", "isInstanceOfAfterIfContinuesLayoutConstraint", "RepetitiveElement", "isInstanceOfRepetitiveElementsOwnerFormattingContext", "Table", "isInstanceOfRepetitiveElementsOwnerLayoutConstraint", "isInstanceOfTableFormattingContext", "isInstanceOfTableRowLayoutConstraint", "Vtree", "Whitespace", "ShadowType", "delayedProps", "delayedPropsIfRelativePositioned", "DelayedItem", "target", "name", "value", "actions", "obj", "makeListener", "refs", "action", "actionFn", "k", "err", "_Page", "SimpleEventTarget", "container", "bleedBox", "__publicField", "e", "anchorElement", "href", "evt", "isAuto", "element", "id", "arr", "triggers", "clientLayout", "elems", "i", "list", "item", "setCSSProperty", "rect", "trigger", "observers", "listener", "Page", "SPECIAL_ATTR", "Whitespace", "Vtree", "whitespaceFromPropertyValue", "whitespace", "canIgnore", "node", "text", "Flow", "flowName", "parentFlowName", "FlowChunk", "startOffset", "priority", "linger", "exclusive", "repeated", "last", "breakBefore", "other", "clientrectIncreasingTop", "r1", "r2", "clientrectDecreasingRight", "isSameNodePositionStep", "nps1", "nps2", "_a", "_b", "Vtree", "isSameShadowContext", "isSameNodePosition", "np1", "np2", "i", "newNodePositionFromNode", "node", "ShadowType", "newNodePositionFromNodeContext", "nodeContext", "initialFragmentIndex", "makeNodeContextFromNodePositionStep", "step", "parent", "NodeContext", "ShadowContext", "owner", "root", "xmldoc", "parentShadow", "superShadow", "type", "styler", "__publicField", "other", "sc1", "sc2", "FirstPseudo", "outer", "count", "_NodeContext", "sourceNode", "boxOffset", "PageFloats", "Whitespace", "np", "npc", "npp", "_c", "nc", "steps", "actualOffsetInNode", "resolveOriginalIndex", "formattingContext", "ChunkPosition", "_ChunkPosition", "primary", "result", "FlowChunkPosition", "_FlowChunkPosition", "chunkPosition", "flowChunk", "FlowPosition", "_FlowPosition", "newfp", "arr", "newarr", "offset", "LayoutPosition", "_LayoutPosition", "newcp", "name", "thisFlowNames", "otherFlowNames", "flowName", "flowPos", "startBreakType", "isSpreadBreakValue", "flowChunkPosition", "Container", "element", "box", "top", "height", "setCSSProperty", "left", "width", "start", "extent", "outerExtent", "c", "rect", "shapeForRect", "offsetX", "offsetY", "Rect", "paddingX", "paddingY", "paddingWidth", "paddingHeight", "outerShapeProp", "context", "toShape", "outerX", "outerY", "outerWidth", "outerHeight", "ContentPropertyHandler", "Visitor", "elem", "rootContentValue", "exprContentListener", "str", "url", "img", "list", "expr", "ex", "val", "Named", "parseValue", "Tokenizer", "Native", "nonTrivialContent", "empty", "ident", "isDefaultingValue", "FloatReference", "PageFloats", "floatReferenceOf", "str", "isPageFloat", "floatReference", "resolveInlineFloatDirection", "floatSide", "vertical", "direction", "writingMode", "toLogical", "physicalValue", "toPhysical", "lineRelativeValue", "toLineRelative", "logger", "PageFloat", "nodePosition", "clearSide", "flowName", "floatMinWrapBlock", "__publicField", "pageFloatLayoutContext", "other", "PageFloatStore", "order", "float", "f", "isSameNodePosition", "index", "id", "PageFloatFragment", "continuations", "area", "continues", "c", "context", "i", "floats", "PageFloatContinuation", "PageFloatLayoutContext", "parent", "container", "generatingNodePosition", "ident", "previousSibling", "child", "result", "PageFloatLayoutStrategyResolver", "floatFragment", "dontInvalidate", "fr1", "fr2", "fragment", "element", "condition", "anchorViewNode", "anchors", "prev", "floatId", "cont", "continuation", "ignoreReference", "lastFollowing", "o", "lastFollowingOfParent", "c1", "c2", "done", "notAllowedFloat", "deferredFloats", "floatsInFragments", "r", "fr", "f1", "f2", "d", "elem", "k", "children", "side", "sides", "logicalSides", "logicalSide", "logicalFloatSides", "foundSnapBlock", "foundSnapInline", "s", "logicalFloatSide", "fragmentFloatSide", "stashed", "layoutContext", "clientLayout", "physicalSide", "limit", "parentLimit", "limits", "offsetX", "offsetY", "paddingRect", "resolveLengthPercentage", "numeric", "viewNode", "containerLength", "fragments", "l", "top", "left", "bottom", "right", "floatMinWrapBlockStart", "floatMinWrapBlockEnd", "anchorEdge", "init", "force", "blockStart", "blockEnd", "inlineStart", "inlineEnd", "blockOffset", "inlineOffset", "limitBlockStartEndValueWithOpenRect", "getRect", "rect", "openRect", "unrotateBox", "blockSize", "inlineSize", "outerBlockSize", "outerInlineSize", "rotateBox", "Rect", "findUppermostFullyOpenRect", "findBottommostFullyOpenRect", "availableBlockSize", "containerRect", "fromStart", "fromEnd", "getSize", "availableInlineSize", "isVertical", "edge", "clear", "column", "isContinuationOfAlreadyAppearedFloat", "isFragmentWithAlreadyAppearedFloat", "columnRect", "columnBlockEnd", "blockStartLimit", "logicalClearSide", "floatOrder", "isPrecedingFragment", "hasPrecedingFragmentInChildren", "hasPrecedingFragmentInParents", "layoutConstraint", "pageFloatLayoutStrategies", "strategy", "nodeContext", "NormalPageFloatLayoutStrategy", "ref", "newResult", "floatArea", "floatContainer", "PageFloatFragment", "Footnote", "_Footnote", "PageFloat", "nodePosition", "floatReference", "flowName", "footnotePolicy", "floatMinWrapBlock", "other", "FootnoteFragment", "continuations", "area", "continues", "float", "LineFootnotePolicyLayoutConstraint", "footnote", "nodeContext", "isSameNodePosition", "FootnoteLayoutStrategy", "pageFloatLayoutContext", "column", "FloatReference", "regionContext", "newResult", "floatSide", "floatArea", "f", "fragments", "fr", "floatContainer", "element", "ident", "constraint", "PageFloatLayoutStrategyResolver", "FLOW_ROOT_ATTR", "isFlowRoot", "element", "blockify", "display", "displayStr", "blockifiedStr", "getName", "isAbsolutelyPositioned", "position", "ident", "isRunning", "Func", "getComputedDisplayValue", "float", "isRoot", "isDefaultingValue", "isBlock", "isInlineLevel", "isRubyInternalDisplay", "establishesBFC", "overflow", "writingMode", "parentWritingMode", "establishesCBForAbsolute", "calculateEdge", "nodeContext", "clientLayout", "extraOffset", "vertical", "node", "element", "style", "isInlineLevel", "parentNode", "nextSibling", "cbox", "edge", "range", "length", "boxes", "box", "getElementHeight", "column", "rect", "margin", "isOrphan", "removeFollowingSiblings", "viewNode", "_a", "lastChild", "prevSibling", "isSpecial", "e", "SPECIAL_ATTR", "isOutOfFlow", "position", "isSpecialNodeContext", "isSpecialInlineDisplay", "display", "isRubyInternalDisplay", "findAncestorSpecialInlineNodeContext", "p", "AbstractBreakPosition", "column", "calculateOffset", "nodeContext", "elementsOffsets", "val", "repetitiveElement", "EdgeBreakPosition", "position", "breakOnEdge", "overflows", "computedBlockSize", "__publicField", "penalty", "preferDropping", "isAvoidBreakValue", "_a", "clonedPaddingBorder", "calculateEdge", "marginBlockStart", "cell", "table", "collapse", "padding", "border", "elem", "style", "edge", "offsets", "formattingContext", "RepetitiveElement", "repetitiveElements", "LayoutProcessorResolver", "formattingContext", "hooks", "getHooksForName", "i", "processor", "BlockLayoutProcessor", "nodeContext", "column", "leadingEdge", "position", "breakOnEdge", "overflows", "columnBlockSize", "EdgeBreakPosition", "stopAtOverflow", "parentNodeContext", "removeSelf", "_a", "Vtree", "isSpecialNodeContext", "node", "parentNode", "removeFollowingSiblings", "forceRemoveSelf", "endOfColumn", "newResult", "BlockFormattingContext", "parent", "__publicField", "firstTime", "state", "blockLayoutProcessor", "isInstanceOfBlockFormattingContext", "LayoutProcessor", "registerHook", "display", "floatSide", "isRoot", "isBlock", "AbstractLayoutRetryer", "__publicField", "nodeContext", "column", "frame", "newFrame", "mode", "positionAfter", "accepted", "initialPosition", "viewNode", "child", "sibling", "LayoutIteratorStrategy", "initialNodeContext", "state", "LayoutIterator", "strategy", "layoutContext", "frame", "newFrame", "loopFrame", "r", "canIgnore", "nextResult", "newResult", "nextNodeContext", "EdgeSkipper", "leadingEdge", "column", "needForcedBreak", "isForcedBreakValue", "nodeContext", "overflow", "layoutConstraint", "violateConstraint", "resolveEffectiveBreakValue", "cont", "repetitiveElementsCache", "clearRepetitiveElementsCache", "matchANPlusB", "order", "a", "b", "AnyMatcher", "matchers", "matcher", "AllMatcher", "_NthFragmentMatcher", "elementOffset", "fragmentIndex", "priority", "indices", "entry", "__publicField", "NthFragmentMatcher", "MatcherBuilder", "viewCondition", "strs", "inheritedProps", "polyfilledInheritedProps", "getPolyfilledInheritedProps", "getHooksForName", "props", "f", "supportedNamespaces", "coupledPatterns", "coupledExtentPatterns", "geomNames", "sides", "names", "i", "k", "name", "buildCouplingMap", "sideMap", "extentMap", "map", "pattern", "side", "name1", "name2", "extentPattern", "extent", "couplingMapVert", "couplingMapHor", "couplingMapVertRtl", "couplingMapHorRtl", "CascadeValue", "_CascadeValue", "value", "priority", "visitor", "specificity", "context", "propName", "percentRef", "vertical", "isCustomPropName", "evaluateCSSToCSS", "ConditionalCascadeValue", "_ConditionalCascadeValue", "condition", "err", "logger", "cascadeValues", "tv", "av", "setPropCascadeValue", "style", "SPECIALS", "isSpecialName", "isMapName", "isPropName", "isInherited", "getProp", "setProp", "getStyleMap", "getMutableStyleMap", "r", "getViewConditionalStyleMap", "getSpecial", "getMutableSpecial", "mergeIn", "target", "pseudoelement", "regionId", "viewConditionMatcher", "_a", "_b", "item", "styleMap", "prop", "as", "ts", "cascval", "propListLH", "propLH", "avLH", "empty", "mergeAll", "styles", "chainActions", "chain", "action", "a", "b", "chained", "InheritanceVisitor", "FilterVisitor", "__publicField", "defaultUnitSizes", "isAbsoluteLengthUnit", "numeric", "convertFontSizeToPx", "convertFontRelativeLengthToPx", "expr", "baseFontSize", "unit", "num", "ratio", "Numeric", "parentFontSize", "CascadeAction", "cascadeInstance", "other", "CompoundAction", "ConditionItemAction", "conditionItem", "_CompoundAction", "list", "ApplyRuleAction", "viewConditionId", "ChainedAction", "cascade", "CheckClassAction", "className", "CheckIdAction", "id", "CheckLocalNameAction", "localName", "CheckNSTagAction", "ns", "prefix", "nsTag", "CheckTargetEpubTypeAction", "epubTypePatt", "targetLocalName", "elem", "epubType", "CheckNamespaceAction", "checkAttribute", "element", "pred", "qname", "CheckAttributePresentAction", "CheckAttributeEqAction", "CheckNamespaceSupportedAction", "CheckAttributeRegExpAction", "regexp", "CheckLangAction", "langRegExp", "IsFirstAction", "IsRootAction", "IsNthAction", "order", "matchANPlusB", "IsNthSiblingAction", "IsNthSiblingOfTypeAction", "IsNthLastSiblingAction", "IsNthLastSiblingOfTypeAction", "counts", "nsCounts", "IsEmptyAction", "node", "IsEnabledAction", "IsDisabledAction", "IsCheckedAction", "CheckConditionAction", "CheckAppliedAction", "_CheckAppliedAction", "cloned", "MatchesAction", "chains", "firstAction", "MatchesNoneAction", "MatchesRelationalAction", "selectorTexts", "selectorText", "selectorWithScope", "scopingRoot", "e", "AbstractConditionItem", "viewCondition", "DescendantConditionItem", "_DescendantConditionItem", "depth", "ChildConditionItem", "_ChildConditionItem", "AdjacentSiblingConditionItem", "_AdjacentSiblingConditionItem", "FollowingSiblingConditionItem", "_FollowingSiblingConditionItem", "AfterPseudoelementItem", "afterprop", "RestoreLangItem", "lang", "QuotesScopeItem", "oldQuotes", "AttrValueFilterVisitor", "str", "type", "URL", "Str", "func", "attributeName", "defaultValue", "SpaceList", "values", "getStringValueFromCssContentVal", "val", "nonTrivialContent", "v", "ContentPropVisitor", "counterResolver", "ident", "quotes", "maxDepth", "result", "upper", "lower", "additiveNumbering", "additiveFormat", "alphabeticNumbering", "alphabeticFormat", "fixed", "chineseCounter", "chineseTradInformal", "counterName", "arr", "numval", "c", "Expr", "separator", "sb", "StringBuffer", "numvals", "parts", "elementCounters", "targetUrl", "targetUrlStr", "retrievePosition", "_c", "_d", "_e", "_f", "pseudoName", "stringValue", "pseudos", "firstLetterPattern", "leader", "Ident", "Native", "postLayoutBlockLeader", "nodeContext", "checkPoints", "column", "leaders", "setLeaderTextContent", "leaderStr", "direction", "RLM", "leaderElem", "overrun", "inner", "pseudoAfter", "box", "setLeader", "previous", "templeader", "j", "mid", "getInset", "inset", "p", "container", "writingMode", "marginInlineEnd", "innerInit", "innerMarginInlineEnd", "innerInline", "innerAligned", "padding", "registerHook", "additiveNumbering", "alphabeticNumbering", "fixed", "additiveFormat", "entries", "num", "max", "result", "i", "value", "count", "expandAlphabet", "str", "arr", "first", "last", "k", "alphabeticFormat", "alphabetStr", "alphabet", "digit", "chineseTradInformal", "chineseCounter", "numbering", "res", "StringBuffer", "thousands", "hundreds", "tens", "ones", "ORDER_INCREMENT", "copyTable", "src", "dst", "n", "Cascade", "_Cascade", "__publicField", "r", "p", "table", "key", "action", "a", "context", "counterListener", "counterResolver", "lang", "CascadeInstance", "cascade", "Str", "item", "condition", "viewCondition", "viewConditionId", "matcher", "MatcherBuilder", "dependentConditionMatchers", "conditionId", "conditions", "classes", "pageType", "baseStyle", "EMPTY", "counterName", "scoping", "props", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "displayVal", "ident", "display", "floatVal", "float", "resetMap", "incrementMap", "setMap", "reset", "resetVal", "toCounters", "set", "setVal", "increment", "incrementVal", "incrPropValue", "SpaceList", "resetCounterName", "incrementCounterName", "counterValues", "setCounterName", "listItemCounts", "listItemCount", "CascadeValue", "Num", "stringSet", "ContentPropVisitor", "sets", "CommaList", "name", "stringValue", "v", "getStringValueFromCssContentVal", "position", "Func", "pseudoprops", "element", "content", "styler", "elementOffset", "prefix", "types", "getLangAttribute", "RestoreLangItem", "isRoot", "siblingOrderStack", "siblingTypeCountsStack", "currentSiblingTypeCounts", "currentNamespaceTypeCounts", "followingSiblingOrderStack", "followingSiblingTypeCountsStack", "currentFollowingSiblingTypeCounts", "quotesCasc", "itemToPushLast", "quotesVal", "QuotesScopeItem", "id", "counters", "pseudos", "getStyleMap", "before", "pseudoName", "pseudoNames", "pseudoProps", "nonTrivialContent", "getProp", "AfterPseudoelementItem", "visitor", "elementStyle", "propName", "isPropName", "isCustomPropName", "AttrValueFilterVisitor", "currentStyle", "pseudoMap", "elementStyles", "VarFilterVisitor", "LIMIT_LOOP", "propsLH", "isMapName", "cascVal", "empty", "after", "validatorSet", "shorthand", "isDefaultingValue", "nameLH", "avLH", "tvLH", "setProp", "cascadeValues", "valueSH", "parseValue", "Tokenizer", "av", "setPropCascadeValue", "CalcFilterVisitor", "depth", "list", "uaBaseCascade", "setUABaseCascade", "value", "CascadeParserHandler", "SlaveParserHandler", "scope", "owner", "condition", "parent", "regionId", "validatorSet", "topLevel", "__publicField", "Cascade", "action", "chained", "chainActions", "mnemonics", "ns", "name", "CheckNSTagAction", "CheckLocalNameAction", "CheckNamespaceAction", "message", "logger", "CheckConditionAction", "handler", "MatchesParameterParserHandler", "CheckClassAction", "params", "IsEnabledAction", "IsDisabledAction", "IsCheckedAction", "IsRootAction", "CheckAttributePresentAction", "patt", "escapeRegExp", "targetLocalName", "CheckTargetEpubTypeAction", "langValue", "CheckLangAction", "ActionClass", "nthSelectorActionClasses", "IsFirstAction", "IsNthLastSiblingAction", "IsNthSiblingOfTypeAction", "IsNthLastSiblingOfTypeAction", "IsEmptyAction", "n", "id", "CheckIdAction", "op", "CheckAttributeEqAction", "CheckAttributeRegExpAction", "CheckNamespaceSupportedAction", "conditionCount", "ConditionItemAction", "DescendantConditionItem", "ChildConditionItem", "AdjacentSiblingConditionItem", "FollowingSiblingConditionItem", "token", "flavor", "specificity", "ApplyRuleAction", "val", "ConditionalCascadeValue", "CascadeValue", "getMutableSpecial", "important", "ident", "SpaceList", "getHooksForName", "hook", "converted", "priority", "cascval", "setPropCascadeValue", "funcName", "parameterParserHandler", "NotParameterParserHandler", "WhereParameterParserHandler", "HasParameterParserHandler", "IsNthSiblingAction", "_MatchesParameterParserHandler", "MatchesRelationalAction", "MatchesAction", "MatchesNoneAction", "forgiving", "selectorText", "DefineParserHandler", "unit", "dim", "Numeric", "PropSetParserHandler", "elementStyle", "ruleType", "ORDER_INCREMENT", "PropertyParserHandler", "ErrorHandler", "SPECIFICITY_STYLE_IMPORTANT", "SPECIFICITY_STYLE", "forEachViewConditionalStyles", "style", "callback", "viewConditionalStyles", "getViewConditionalStyleMap", "entry", "mergeViewConditionalStyles", "cascMap", "context", "mergeStyle", "parseStyleAttribute", "baseURL", "styleAttrValue", "tokenizer", "Tokenizer", "err", "isVertical", "cascaded", "vertical", "writingModeCasc", "writingMode", "isRtl", "rtl", "directionCasc", "direction", "flattenCascadedStyle", "regionIds", "isFootnote", "nodeContext", "isPropName", "getProp", "forEachStylesInRegion", "regionStyle", "regions", "getStyleMap", "footnoteRegion", "to", "from", "property", "newVal", "oldVal", "cascadeValues", "convertToPhysical", "src", "dest", "transform", "couplingMap", "couplingMapVertRtl", "couplingMapVert", "couplingMapHorRtl", "couplingMapHor", "propName", "cascVal", "coupledName", "targetName", "coupledCascVal", "geomNames", "VarFilterVisitor", "FilterVisitor", "elementStyles", "styler", "element", "_a", "_b", "_c", "_d", "_e", "elem", "func", "Ident", "isCustomPropName", "empty", "varVal", "CommaList", "CalcFilterVisitor", "resolveViewportUnit", "percentRef", "exprText", "exprVal", "parseValue", "Expr", "exprResult", "Num", "numeric", "isViewportRelativeLengthUnit", "isRootFontRelativeLengthUnit", "evaluateCSSToCSS", "Native", "evaluateExprToCSS", "Func", "HANGING_PUNCTUATION_NONE", "hangingPunctuationFromPropertyValue", "value", "cssval", "Val", "getName", "ident", "values", "SpaceList", "hangingPunctuation", "val", "Ident", "isHangingPunctuationNone", "SPACING_TRIM_NONE", "SPACING_TRIM_NORMAL", "SPACING_TRIM_BOTH", "spacingTrimFromPropertyValue", "textSpacing", "AUTOSPACE_NONE", "AUTOSPACE_NORMAL", "autospaceFromPropertyValue", "autospace", "isTextSpacingNone", "spacingTrim", "normalizeLang", "lang", "TextSpacingPolyfill", "document", "element", "_a", "nodeIter", "node", "textArr", "lastIndex", "i", "autospaceVal", "spacingTrimVal", "hangingPunctuationVal", "vertical", "whiteSpaceSave", "prevNode", "nextNode", "isFirstInBlock", "isFirstAfterForcedLineBreak", "isLastBeforeForcedLineBreak", "isLastInBlock", "nodeContext", "checkPoints", "_b", "_c", "_d", "_e", "_f", "_g", "isFirstFragment", "checkIfFirstInBlock", "isAfterForcedLineBreak", "checkIfAfterForcedLineBreak", "isOutOfLine", "elem", "SPECIAL_ATTR", "position", "float", "p", "pp", "prev", "canIgnore", "Whitespace", "display", "iFirst", "checkIfFirstAfterForcedLineBreak", "prevP", "checkIfLastBeforeForcedLineBreak", "nextP", "isFirstAfterBreak", "mediaTags", "next", "nextNext", "firstInInlineBlock", "lastInInlineBlock", "textNode", "text", "currRange", "prevRange", "nextRange", "isAtStartOfLine", "rect", "prevRects", "prevRect", "isAtEndOfLine", "nextRect", "punctProcessing", "hangingFirst", "hangingLast", "hangingEnd", "tagName", "checkFullWidth", "fullWidthThreshold", "linePosition", "outerElem", "innerElem", "isFullWidth", "linePos", "atEnd", "atEndNoHang", "spaceIdeoAlnumProcessing", "checkUpright", "style", "checkNonZeroMarginBorderPadding", "node1", "node2", "parent1", "parent2", "registerHook", "textPolyfill", "preprocessForTextSpacing", "processGeneratedContent", "textAutospace", "textSpacingTrim", "document", "pseudoNames", "PSEUDO_ATTR", "getPseudoName", "element", "setPseudoName", "name", "PseudoelementStyler", "style", "styler", "context", "exprContentListener", "__publicField", "deep", "pseudoName", "getStyleMap", "nest", "r", "CascadeValue", "Int", "styles", "viewNode", "contentVal", "nonTrivialContent", "ContentPropertyHandler", "preprocessForTextSpacing", "isInstanceOfAfterIfContinuesLayoutConstraint", "Selectors", "registerFragmentIndex", "NthFragmentMatcher", "clearFragmentIndices", "AfterIfContinues", "sourceNode", "styler", "column", "parentNodeContext", "viewRoot", "pseudoColumn", "PseudoColumn", "initialPageBreakType", "pseudoElement", "setCSSProperty", "newResult", "document", "setPseudoName", "shadowContext", "nodePosition", "ChunkPosition", "root", "ShadowContext", "Vtree", "AfterIfContinuesLayoutConstraint", "_AfterIfContinuesLayoutConstraint", "nodeContext", "afterIfContinues", "pseudoElementHeight", "__publicField", "overflownNodeContext", "allowed", "positionAfter", "initialPosition", "element", "AfterIfContinuesElementsOffset", "constraint", "processAfterIfContinuesOfNodeContext", "calculatePseudoElementHeight", "processAfterIfContinues", "result", "processAfterIfContinuesOfAncestors", "frame", "newFrame", "current", "parentNode", "height", "getElementHeight", "AllLayoutConstraint", "constraints", "c", "BoxBreakPosition", "AbstractBreakPosition", "checkPoints", "penalty", "Column", "Container", "element", "layoutContext", "clientLayout", "layoutConstraint", "pageFloatLayoutContext", "__publicField", "nodeContext", "edge", "pageFloatExclusions", "position", "frame", "newFrame", "steps", "stepIndex", "prevContext", "step", "makeNodeContextFromNodePositionStep", "r", "newResult", "resolveNewIndex", "count", "_a", "_b", "text", "firstLetterPattern", "firstLetterLength", "text2", "r2", "firstLetterText", "checkPoints", "violateConstraint", "bodyFrame", "isSpecialNodeContext", "position1Param", "position1", "positionParam", "isPageFloat", "atUnforcedBreak", "cont", "processAfterIfContinues", "sourceNode", "p", "ref", "side", "width", "height", "div", "setCSSProperty", "c", "nc", "e", "f", "bands", "x1", "x2", "foundNonZeroWidthBand", "band", "lastBand", "y2", "index", "boxOffset", "isOrphan", "calculateEdge", "offset", "val", "style", "insets", "Insets", "container", "nodeContextIn", "floatSide", "resolveInlineFloatDirection", "nodeContextAfter", "floatBBox", "margin", "floatBox", "Rect", "parent", "probe", "parentBox", "floatBoxMeasure", "box", "floatHorBox", "rotateBox", "dir", "boxExtent", "positionFloat", "unrotateBox", "offsets", "containingBlockForAbsolute", "floatBoxEdge", "floatBoxTop", "addFloatToBands", "area", "floatReference", "anchorEdge", "strategy", "condition", "floatLayoutContext", "floatContainer", "containingBlockRect", "fitWithinContainer", "float", "floatAreaElement", "parentPageFloatLayoutContext", "PageFloatLayoutContext", "FloatReference", "parentContainer", "floatArea", "PageFloatArea", "continuations", "clearSide", "allowFragmented", "pageFloatFragment", "context", "firstFloat", "result", "failed", "i", "loopFrame", "floatChunkPosition", "ChunkPosition", "newPosition", "logicalFloatSide", "newFragment", "continuation", "cancelLayout", "success", "PageFloatContinuation", "excluded", "stashedFloatFragments", "newFloatAreas", "newFragments", "stashedFragment", "PageFloatLayoutStrategyResolver", "fragment", "elem", "anchor", "SPECIAL_ATTR", "columnSpan", "columnContext", "regionContext", "ident", "inlineSize", "getSize", "nodePosition", "newNodePositionFromNodeContext", "resNodeContext", "lastCheckPoints", "totalLineCount", "firstPseudo", "linePositions", "lineBreak", "resNodeContextParam", "mediaTags", "trailingEdgeContexts", "maxPos", "minNeg", "m", "checkPointIndex", "overflown", "calculateOffset", "lineCont", "getHooksForName", "hook", "linePosition", "isUpdateMaxReachedAfterEdge", "effectiveLinePosition", "lowCP", "low", "low1", "highCP", "high", "mid", "high1", "mid1", "edgePosition", "force", "_c", "viewNode", "textNode", "findAncestorSpecialInlineNodeContext", "BoxBreakPosition", "node", "canIgnore", "isOutOfFlow", "prev", "TextNodeBreaker", "start", "end", "arr", "range", "wentUp", "lastGood", "haveStart", "endNotReached", "seekRange", "next", "isSpecial", "isSpecialInlineDisplay", "boxList", "positions", "boxes", "clientrectDecreasingRight", "clientrectIncreasingTop", "lineBefore", "lineAfter", "lineEnd", "lineLength", "overlap", "boxSize", "numberCompare", "clonedPaddingBorder", "isCloneBoxDecorationBreak", "paddingBorders", "bp", "parentNode", "nextSibling", "block", "widows", "orphans", "repetitiveElementsOffset", "firstOverflowing", "lineIndex", "binarySearch", "forceCutBeforeOverflowing", "lastNode", "blockEdge", "blockParent", "cp", "forceRemoveSelf", "endOfColumn", "LayoutProcessorResolver", "blockLayoutProcessor", "penalty", "nextPenalty", "minPenalty", "overflownNodeContext", "initialNodeContext", "initialComputedBlockSize", "logger", "flowPosition", "s", "marginEdge", "footnoteEdge", "saveEvenOverflown", "breakAtTheEdge", "spacer", "spacerBox", "clear", "clearEdge", "afterEdge", "wAdj", "hAdj", "formattingContext", "isInstanceOfBlockFormattingContext", "RepetitiveElement", "leadingEdge", "forcedBreakValue", "fc", "lastAfterNodeContext", "leadingEdgeContexts", "onStartEdges", "needForcedBreak", "isForcedBreakValue", "atLeadingEdgeIgnoringOutOfFlow", "processForcedBreak", "layoutProcessor", "isAvoidBreakValue", "resolveEffectiveBreakValue", "viewTag", "nextResult", "nodeContextParam", "resultNodeContext", "removeSelf", "columnBBox", "offsetX", "offsetY", "shapesToBands", "breakAtEdge", "overflows", "copy", "size", "chunkPosition", "breakAfter", "nextInTreeListener", "evt", "retryer", "ColumnLayoutRetryer", "positionAfter", "sortedFragmentLayoutConstraints", "a", "b", "pending", "chunkPositions", "last", "res", "pos", "blockStartEdgeOfBlockEndFloats", "repetitiveElements", "current", "constraint", "repetitiveElement", "Selectors", "Table", "PseudoColumn", "column", "viewRoot", "parentNodeContext", "parentClonedPaddingBorder", "pseudoColumn", "allowBreakAtStartPosition", "startNodeContext", "EdgeBreakPosition", "isSameNodePosition", "checkpointIndex", "viewIndex", "zwj", "resolveHyphenateCharacter", "ch0", "ch1", "isLetter", "AbstractLayoutRetryer", "DefaultLayoutMode", "clearRepetitiveElementsCache", "initialPosition", "removeFollowingSiblings", "processAfterIfContinuesOfAncestors", "accepted", "target", "refWidth", "refHeight", "convertPercentageToPx", "props", "refValue", "propName", "valueString", "getCSSProperty", "percentageValue", "value", "rootViewNode", "RepetitiveElementsOwnerFormattingContext", "parent", "rootSourceNode", "__publicField", "nodeContext", "firstTime", "position", "root", "vertical", "repetitiveElementsCache", "entry", "RepetitiveElements", "state", "ownerSourceNode", "newNodePositionFromNodeContext", "column", "getElementHeight", "rootNodeContext", "firstChild", "newResult", "nodePosition", "doc", "rootViewNode", "viewRoot", "pseudoColumn", "PseudoColumn", "initialPageBreakType", "ChunkPosition", "from", "to", "child", "SPECIAL_ATTR", "offset", "nc", "cache", "calculator", "cacheEntry", "result", "node", "includeChildren", "parentsOfNode", "n", "currentParent", "index", "current", "LayoutEntireBlock", "formattingContext", "positionAfter", "initialPosition", "accepted", "repetitiveElements", "LayoutFragmentedBlock", "LayoutEntireOwnerBlock", "processor", "LayoutFragmentedOwnerBlock", "RepetitiveElementsOwnerLayoutConstraint", "_RepetitiveElementsOwnerLayoutConstraint", "getRepetitiveElementsOwnerFormattingContext", "overflownNodeContext", "isOrphan", "allowed", "appendHeader", "appendFooter", "constraint", "RepetitiveElementsOwnerLayoutRetryer", "AbstractLayoutRetryer", "EntireBlockLayoutStrategy", "EdgeSkipper", "RepetitiveElementsOwnerLayoutProcessor", "BlockLayoutProcessor", "nodeContext", "column", "leadingEdge", "formattingContext", "getRepetitiveElementsOwnerFormattingContext", "appendHeaderToAncestors", "RepetitiveElementsOwnerLayoutRetryer", "repetitiveElements", "getRepetitiveElementsOwnerFormattingContextOrNull", "frame", "newFrame", "strategy", "EntireBlockLayoutStrategy", "LayoutIterator", "cont", "processAfterIfContinues", "resNodeContext", "nextNodeContext", "loopFrame", "pending", "nodeContextParam", "forceRemoveSelf", "endOfColumn", "parentNodeContext", "removeSelf", "eachAncestorNodeContext", "callback", "nc", "RepetitiveElementsOwnerFormattingContext", "Table", "RepetitiveElementsOwnerLayoutConstraint", "appendHeader", "rootNodeContext", "firstChild", "newResult", "appendFooter", "repetitiveLayoutProcessor", "registerHook", "TableRow", "rowIndex", "sourceNode", "__publicField", "cell", "c", "TableCell", "columnIndex", "viewElement", "height", "slot", "TableSlot", "TableCellFragment", "column", "pseudoColumnContainer", "cellNodeContext", "PseudoColumn", "element", "verticalAlign", "alignContent", "setCSSProperty", "bp", "TableCaptionView", "viewNode", "side", "BetweenTableRowBreakPosition", "EdgeBreakPosition", "position", "breakOnEdge", "overflows", "columnBlockSize", "penalty", "breakNodeContext", "cellFragments", "cf", "formattingContext", "cellFragment", "InsideTableRowBreakPosition", "AbstractBreakPosition", "beforeNodeContext", "acceptableCellBreakPositions", "allCellsBreakable", "index", "pseudoColumn", "nodeContext", "row", "breakPositions", "foundBoxBreakInRowSpanningCell", "i", "BoxBreakPosition", "penalty1", "TableFormattingContext", "RepetitiveElementsOwnerFormattingContext", "parent", "tableSourceNode", "firstTime", "p", "rowSlots", "rowUpper", "startColIndex", "list", "uniqueCells", "sum", "clientLayout", "rect", "tableCell", "col", "loop", "collected", "repetitiveElements", "elementsInColumn", "state", "ElementsOffsetOfTableCell", "entry", "constraint", "RepetitiveElement", "repetitiveElement", "Table", "repeatitiveElementsInColumns", "offsets", "resolver", "maxOffset", "calculateOffset", "getTableFormattingContext", "isTableRowGrouping", "display", "isTableRoot", "isValidParentOfTableRow", "skipNestedTable", "parentDisplay", "isNestedInlineTable", "nc", "nodeContextAfter", "newResult", "EntireTableLayoutStrategy", "EdgeSkipper", "r", "captionView", "computedStyle", "elem", "isSpecialNodeContext", "_TableLayoutStrategy", "colWidths", "width", "startChunkPosition", "colSpan", "cellViewNode", "slotIndex", "cellBreakPosition", "cellBreakPositions", "rowSpanningCellBreakPositions", "arr", "rowCount", "s", "layoutContext", "currentRow", "frame", "newFrame", "cont", "spanningCellRowIndex", "occupiedSlotIndices", "rowCellBreakPositions", "rowNodeContext", "makeNodeContextFromNodePositionStep", "cont1", "addDummyCellUntil", "upperColumnIndex", "dummy", "cellNodePosition", "breakChunkPosition", "tdNodeStep", "offset", "registerFragmentIndex", "afterNodeContext", "nextNodeContext", "startNodePosition", "newNodePositionFromNodeContext", "ChunkPosition", "TableLayoutStrategy", "tableLayoutOptionCache", "getTableLayoutOption", "tableRootSourceNode", "pair", "clearTableLayoutOptionCache", "TableLayoutProcessor", "strategy", "LayoutIterator", "lastRow", "columnCount", "vertical", "doc", "dummyRow", "dummyCells", "tableElement", "colGroups", "child", "cols", "colGroup", "span", "cloned", "fragment", "tableLayoutOption", "initialNodeContext", "tableBBox", "edge", "EntireTableBreakPosition", "rootViewNode", "firstChild", "captions", "caption", "iterator", "leadingEdge", "appendHeaderToAncestors", "LayoutRetryer", "stopAtOverflow", "adjustRowHeight", "forceRemoveSelf", "endOfColumn", "cells", "loopFrame", "adjustCellHeight", "blockLayoutProcessor", "parentNodeContext", "removeSelf", "BlockLayoutProcessor", "cellContentElement", "cellElement", "cellElementRect", "padding", "tbodyElement", "spanStartRows", "spanStartRowHeight", "totalHeight", "rowElement", "spanStartLastRow", "spanStartLastRowIndex", "rowSpan", "rowToBeAdjusted", "rowRect", "rowHeight", "newRowHeight", "AbstractLayoutRetryer", "tableFormattingContext", "processor", "LayoutEntireTable", "LayoutFragmentedTable", "initialPosition", "LayoutEntireBlock", "tableNodeContext", "EntireTableLayoutConstraint", "_EntireTableLayoutConstraint", "tableRootNode", "overflownNodeContext", "allowed", "positionAfter", "LayoutFragmentedBlock", "TableRowLayoutConstraint", "_TableRowLayoutConstraint", "RepetitiveElementsOwnerLayoutConstraint", "isOrphan", "constraints", "array", "dummyNode", "tableLayoutProcessor", "resolveFormattingContextHook", "floatSide", "isRoot", "ident", "resolveLayoutProcessor", "registerHook", "mean", "array", "prev", "curr", "variance", "meanValue", "x", "d", "ColumnBalancingTrialResult", "layoutResult", "penalty", "getBlockSize", "container", "setBlockSize", "size", "ColumnBalancer", "layoutContainer", "columnGenerator", "regionPageFloatLayoutContext", "__publicField", "frame", "newFrame", "candidates", "loopFrame", "result", "prev", "curr", "children", "newLayoutResult", "parent", "c", "COLUMN_LENGTH_STEP", "canReduceContainerSize", "lastCandidate", "secondLastCandidate", "columns", "maxColumnBlockSize", "maxPageFloatBlockSize", "reduceContainerSize", "_a", "newEdge", "outerWidth", "BalanceLastColumnBalancer", "columnCount", "totalBlockSize", "position", "isLastColumnLongerThanAnyOtherColumn", "lastColumnBlockSize", "otherColumns", "errorMargin", "BalanceNonLastColumnBalancer", "computedBlockSizes", "variance", "createColumnBalancer", "columnFill", "flowPosition", "ident", "noMoreContent", "lastColumn", "isLastColumnForceBroken", "SlipRange", "endStuckFixed", "endFixed", "endSlipped", "__publicField", "SlipMap", "range", "fixed", "index", "binarySearch", "slipped", "Box", "_Box", "context", "style", "offset", "isRoot", "flowChunk", "atBlockStart", "atFlowStart", "isParentBoxDisplayed", "pseudoMap", "beforeBox", "beforeContent", "nonTrivialContent", "resolveEffectiveBreakValue", "isForcedBreakValue", "afterBox", "afterContent", "name", "defaultValue", "cv", "ident", "display", "position", "float", "isBlock", "isRunning", "edge", "breakValue", "val", "BoxStack", "lastBox", "box", "newFlowChunk", "isAtFlowStart", "node", "whitespaceValue", "whitespace", "whitespaceFromPropertyValue", "canIgnore", "breakBefore", "parent", "atStart", "i", "Styler", "xmldoc", "cascade", "scope", "primaryFlows", "validatorSet", "counterListener", "counterResolver", "rootOffset", "map", "cascVal", "srcStyle", "pname", "cascval", "CascadeValue", "SPECIFICITY_AUTHOR", "elemStyle", "isBody", "_a", "propName", "isInherited", "backgroundColor", "backgroundImage", "isDefaultingValue", "columnProps", "fontSize", "isRelativeFontSize", "Numeric", "px", "defaultUnitSizes", "unitSize", "rootFontSize", "lineHeight", "Num", "elem", "styleAttrValue", "parseStyleAttribute", "rootStyle", "flowName", "getProp", "flowNameStr", "nodeOffset", "next", "flowListener", "id", "startOffset", "priority", "linger", "exclusive", "repeated", "last", "optionsCV", "options", "toSet", "lingerCV", "toInt", "priorityCV", "flow", "parentFlowName", "Flow", "FlowChunk", "forcedBreakOffsets", "previousValue", "lookup", "targetSlippedOffset", "slippedOffset", "breakAfter", "afterPseudoBreakBefore", "blockStartOffset", "pageCV", "pageType", "beforePseudoBreakAfter", "element", "deep", "key", "styles", "viewNode", "Node", "validator", "__publicField", "index", "Connection", "where", "success", "ValidatingGroup", "_ValidatingGroup", "__publicField", "arr", "nodeIndex", "i", "group", "node", "clonedNode", "Node", "connection", "groupConnection", "Connection", "start", "clause", "index", "ALWAYS_FAIL", "success", "failure", "arrs", "validator", "PrimitiveValidator", "how", "connectionIndex", "successTerminal", "failTerminal", "j", "ALLOW_EMPTY", "ALLOW_STR", "ALLOW_IDENT", "ALLOW_POS_NUMERIC", "ALLOW_POS_NUM", "ALLOW_POS_INT", "ALLOW_COLOR", "ALLOW_URL", "ALLOW_NEGATIVE", "ALLOW_ZERO", "ALLOW_ZERO_PERCENT", "ALLOW_SLASH", "ALLOW_URANGE", "ALLOW_IMAGE", "PropertyValidator", "Visitor", "values", "rval", "_PrimitiveValidator", "allowed", "idents", "units", "empty", "slash", "str", "ident", "val", "numeric", "num", "color", "url", "urange", "list", "func", "expr", "other", "unit", "NO_IDENTS", "ListValidator", "slice", "startIndex", "out", "current", "alternativeStack", "alternatives", "inval", "outval", "SpaceListValidator", "SpaceList", "CommaListValidator", "CommaList", "k", "hasCommaListValidator", "FuncValidator", "name", "Func", "ShorthandSyntaxNode", "shorthandValidator", "ShorthandSyntaxProperty", "validatorSet", "rvals", "len", "ShorthandSyntaxPropertyN", "names", "ShorthandSyntaxCompound", "nodes", "index0", "newIndex", "ShorthandValidator", "syntax", "propList", "important", "receiver", "_a", "_b", "value", "SimpleShorthandValidator", "InsetsShorthandValidator", "InsetsSlashShorthandValidator", "slashIndex", "index1", "vals", "CommaShorthandValidator", "acc", "FontShorthandValidator", "fontVariant", "fontStretch", "validators", "fontFamily", "familyList", "family", "props", "TextSpacingShorthandValidator", "Ident", "getName", "propsExcludedFromAll", "AllShorthandValidator", "shorthandValidators", "ValidatorSet", "token", "cssval", "Numeric", "HexColor", "op", "subgroup", "outer", "min", "max", "fn", "stdfont", "tok", "section", "rulePrefixes", "ruleName", "stack", "expectval", "reduce", "setop", "currop", "result", "builtIn", "Int", "open", "propName", "Num", "insetShorthand", "compound", "item", "text", "Tokenizer", "map", "prop", "shorthand", "pname", "isCustomPropName", "containsVar", "prefix", "origName", "r", "px", "knownPrefixes", "rvalue", "isDefaultingValue", "baseValidatorSet", "ValidationTxt", "VarCheckVisitor", "varCheckVisitor", "bogusFontData", "getFontTraitNames", "properties", "prop", "makeFontTraitKey", "sb", "StringBuffer", "prepareProperties", "context", "result", "getProp", "Face", "__publicField", "family", "other", "src", "fontBytes", "blobURL", "createObjectURL", "DocumentFaces", "deobfuscator", "srcFace", "viewFace", "srcFamily", "viewFamilyFromSrc", "viewFamilyFromView", "val", "CommaList", "list", "newValues", "v", "r", "getName", "rf", "Mapper", "head", "body", "opt_familyPrefix", "documentFaces", "viewFamily", "frame", "newFrame", "props", "fontFamily", "viewFontFace", "style", "logger", "srcFamilySrc", "fetcher", "viewFaceParam", "Fetcher", "url", "fetchFromURL", "response", "srcFaces", "fetchers", "waitForFetchers", "fonts", "unloadedCount", "fontFace", "e", "newResult", "keyCount", "PageBox", "scope", "name", "pseudoName", "classes", "parent", "__publicField", "parentInstance", "param", "dest", "specified", "destSpecified", "prop", "i", "RootPageBox", "CascadeValue", "fullWidth", "fullHeight", "PageMasterScope", "LexicalScope", "pageMaster", "resolver", "self", "qualifiedName", "isFunc", "r", "key", "boxInstance", "PageMaster", "_PageMaster", "condition", "specificity", "ident", "PageMasterInstance", "cloned", "PartitionGroup", "_PartitionGroup", "PartitionGroupInstance", "Partition", "_Partition", "PartitionInstance", "toExprIdent", "val", "def", "isDefaultingValue", "Const", "toExprAuto", "ref", "toExprNormal", "toExprZero", "toExprZeroAuto", "toExprZeroBorder", "styleVal", "toExprBool", "PageBoxInstance", "pageBox", "name1", "name2", "v1", "v2", "add", "expr", "altName", "map", "couplingMapVert", "couplingMapHor", "count", "Param", "columnCount", "columnWidth", "columnGap", "sub", "mul", "Call", "style", "enabled", "page", "currentPage", "Named", "and", "Eq", "minPageWidth", "Ge", "minPageHeight", "Expr", "parentWidth", "left", "marginLeft", "borderLeftWidth", "paddingLeft", "width", "maxWidth", "paddingRight", "borderRightWidth", "marginRight", "right", "leftBP", "rightBP", "extra", "remains", "snapWidthVal", "snapWidth", "parentHeight", "top", "marginTop", "borderTopWidth", "paddingTop", "height", "maxHeight", "paddingBottom", "borderBottomWidth", "marginBottom", "bottom", "topBP", "bottomBP", "snapHeightVal", "snapHeight", "Numeric", "div", "propName", "context", "regionIds", "cascMap", "flattenCascadedStyle", "isVertical", "isRtl", "convertToPhysical", "cascVal", "Native", "_a", "_b", "isInherited", "evaluateCSSToCSS", "percentRef", "toNumber", "arr", "getSpecial", "result", "v", "empty", "container", "docFaces", "element", "needUnitConversion", "convertNumericToPx", "setCSSProperty", "delayedItems", "DelayedItem", "xpos", "ypos", "clientLayout", "passPreProperties", "passContentProperties", "hasWidth", "hasHeight", "passSingleUriContentProperties", "column", "readHeight", "readWidth", "bbox", "ruleWidth", "ruleStyle", "ruleColor", "containerSize", "border", "pos", "size", "rule", "passPostProperties", "delayedProperties", "cascade", "docElementStyle", "PageRuleMasterInstance", "isPropName", "setProp", "getProp", "userAgentPageMasterPseudo", "content", "ContentPropVisitor", "child", "childInstance", "RootPageBoxInstance", "a", "b", "listVal", "conflicting", "list", "Ident", "CommaList", "qname", "makeQualifiedName", "term", "Not", "required", "flowName", "hasContent", "pmEnabledVal", "pmEnabled", "PageBoxParserHandler", "SlaveParserHandler", "owner", "target", "validatorSet", "value", "important", "SPECIFICITY_STYLE", "SPECIFICITY_STYLE_IMPORTANT", "PartitionParserHandler", "PartitionGroupParserHandler", "_PartitionGroupParserHandler", "hundredPercent", "partition", "handler", "partitionGroup", "PageMasterParserHandler", "resolvePageProgression", "style", "_a", "_b", "writingMode", "direction", "ident", "pageSizes", "Numeric", "defaultPrinterMarkLineWidth", "defaultPrinterMarkOffset", "defaultPrinterMarkLineLength", "defaultBleedOffset", "resolvePageSizeAndBleed", "pageSizeAndBleed", "fullWidth", "fullHeight", "numericZero", "size", "value", "val1", "val2", "s", "marksCV", "bleedCV", "marks", "isDefaultingValue", "bleed", "hasCrop", "v", "cropOffsetCV", "cropOffset", "evaluatePageSizeAndBleed", "context", "evaluated", "bleedOffset", "width", "height", "createPrinterMarkSvg", "doc", "mark", "createPrinterMarkElement", "lineWidth", "lineColor", "elementType", "line", "CornerMarkPosition", "createCornerMark", "position", "cropMarkLineLength", "offset", "bleedMarkLineLength", "defaultUnitSizes", "maxLineLength", "svgWidth", "points1", "points2", "p", "line1", "line2", "side", "CrossMarkPosition", "createCrossMark", "lineLength", "longLineLength", "horizontalLine", "verticalLine", "circle", "opposite", "key", "addPrinterMarks", "cascadedPageStyle", "evaluatedPageSizeAndBleed", "page", "crop", "cross", "SpaceList", "container", "toNumber", "printerMarkOffset", "lineColorCV", "propertiesAppliedToPartition", "sides", "props", "pageMarginBoxes", "pageMarginBoxNames", "boxes", "a", "b", "pageRuleMasterPseudoName", "marginBoxesKey", "PageRuleMaster", "PageMaster", "scope", "parent", "style", "__publicField", "pageSize", "resolvePageSizeAndBleed", "partition", "PageRulePartition", "marginBoxesMap", "name", "PageMarginBoxPartition", "CascadeValue", "ident", "propertiesAppliedToPartition", "parentInstance", "PageRuleMasterInstance", "Partition", "Int", "getName", "prop", "PageRulePartitionInstance", "marginBoxName", "ownStyle", "val", "ownVal", "inheritedProps", "empty", "PageMarginBoxPartitionInstance", "PageMasterInstance", "pageRuleMaster", "cascade", "docElementStyle", "numericZero", "dim", "Expr", "context", "page", "clientLayout", "marginBoxContainers", "horizontalDimensions", "verticalDimensions", "isHorizontal", "dimensions", "START", "CENTER", "END", "containers", "boxInstances", "boxParams", "boxInfo", "container", "boxInstance", "boxParam", "SingleBoxMarginBoxSizingParam", "evaluatedDim", "sizes", "needRecalculate", "maxOuterSizes", "n", "maxSize", "toExprAuto", "evaluatedMaxSize", "p", "FixedSizeMarginBoxSizingParam", "minOuterSizes", "minSize", "evaluatedMinSize", "endEdge", "startEndSum", "outerSize", "offset", "availableSize", "startBoxParam", "centerBoxParam", "endBoxParam", "params", "startEndBoxParam", "MultipleBoxesMarginBoxSizingParam", "centerSizes", "centerSize", "startEndAutoSize", "startEndSizes", "x", "y", "result", "xOuterMaxContentSize", "yOuterMaxContentSize", "maxContentSizeSum", "xOuterMinContentSize", "yOuterMinContentSize", "minContentSizeSum", "docFaces", "isDefaultingValue", "getSize", "size", "PartitionInstance", "pageRulePartition", "names", "startSide", "endSide", "extentName", "pageExtent", "extent", "marginStart", "marginEnd", "paddingStart", "toExprZero", "paddingEnd", "borderStartWidth", "toExprZeroBorder", "borderEndWidth", "remains", "sub", "add", "mul", "Const", "fullWidth", "fullHeight", "Numeric", "hasBorder1", "propName", "_a", "propValue", "getProp", "pageMarginBoxPartition", "pageRuleMasterInstance", "element", "setCSSProperty", "verticalAlign", "flexAlign", "content", "URL", "Native", "align", "availableExtent", "startOffset", "outerExtent", "div", "insideName", "outsideName", "pageMargin", "marginInside", "toExprZeroAuto", "marginOutside", "paddingInside", "paddingOutside", "borderInsideWidth", "borderOutsideWidth", "getComputedValues", "pageMarginValue", "borderAndPadding", "value", "column", "columnCount", "marginBoxes", "PageManager", "cascadeInstance", "pageScope", "rootPageBoxInstance", "styleInstance", "isVersoFirstPage", "pageNumber", "Named", "isVersoPage", "Eq", "Modulo", "Not", "resolvePageProgression", "pageType", "pageMasterInstance", "cascadedPageStyle", "pageMaster", "key", "applied", "userAgentPageMasterPseudo", "propsStr", "object", "props", "str", "newPageMaster", "pageMasterStyle", "priority", "setPropCascadeValue", "CheckPageTypeAction", "ChainedAction", "IsFirstPageAction", "IsBlankPageAction", "IsLeftPageAction", "IsRightPageAction", "IsRectoPageAction", "IsVersoPageAction", "IsNthPageAction", "IsNthAction", "ApplyPageRuleAction", "ApplyRuleAction", "specificity", "mergeInPageRule", "target", "mergeIn", "targetMap", "getMutableStyleMap", "boxName", "targetBox", "PageParserHandler", "CascadeParserHandler", "owner", "validatorSet", "pageProps", "ns", "selectors", "important", "s", "cascVal", "selector", "setProp", "noPageSelectorProps", "action", "marginBoxMap", "boxStyle", "handler", "PageMarginBoxParserHandler", "SlaveParserHandler", "cascval", "allowScripts", "setAllowScripts", "value", "deferredScripts", "sameScripts", "s1", "s2", "getScriptsInOrNearHead", "document", "scriptsInBodyNotNearHead", "script", "loadScript", "srcScriptElem", "window", "flags", "_a", "_b", "newResult", "scriptContent", "src", "isModule", "async", "defer", "needDefer", "hasScripts", "s", "builtinMathJax2", "scriptElem", "attr", "logger", "fetcher", "loadElement", "waitForFetchers", "getAllFontFamilyList", "srcDocument", "styler", "fontFamilySet", "findFontFamilyInStyle", "style", "fontFamily", "family1", "marginBoxes", "marginBoxStyle", "findAllFontFamily", "arg", "ApplyRuleAction", "CascadeAction", "v", "obj", "elem", "prepareTextContentForWebFonts", "textContentDiv", "loadScriptsInHead", "srcScripts", "needPrepareForWebFonts", "fonts", "savedDollar", "forceDefer", "frame", "newFrame", "loadScriptsAtEnd", "transformURIs", "attributeValue", "baseUrl", "documentURLTransformer", "match", "m1", "namespacePrefixMap", "initIFrame", "iframe", "name", "version", "_ViewFactory", "SimpleEventTarget", "flowName", "context", "viewport", "styler", "regionIds", "xmldoc", "docFaces", "footnoteStyle", "stylerProducer", "page", "customRenderer", "fallbackMap", "documentURLTransformer", "__publicField", "element", "isRoot", "cascStyle", "computedStyle", "parentShadow", "subShadow", "pseudoMap", "addedNames", "root", "document", "att", "pseudoNames", "elem", "display", "ident", "child", "canIgnore", "childStyle", "childDisplay", "getProp", "content", "nonTrivialContent", "setPseudoName", "shadowStyler", "PseudoelementStyler", "ShadowContext", "ShadowType", "isFootnote", "nodeContext", "getStyleMap", "computedPseudoStyleMap", "key", "computedPseudoStyle", "mergeStyle", "mergeViewConditionalStyles", "forEachStylesInRegion", "regionId", "regionStyle", "forEachViewConditionalStyles", "viewConditionalStyles", "href", "type", "frame", "newFrame", "refDocParam", "refDoc", "refElement", "refStyler", "shadowContext", "shadow", "templateURLVal", "cont", "URL", "url", "resolveURL", "resourceBaseURL", "newResult", "cont1", "cont2", "viewRoot", "vertical", "rtl", "style", "_a", "cascMap", "flattenCascadedStyle", "verticalParent", "isVertical", "verticalChanged", "isRtl", "convertToPhysical", "cascVal", "percentRef", "value", "inlineSize", "isRunning", "position", "float", "displayValues", "getComputedDisplayValue", "elementStyle", "node", "styles", "lang", "steps", "shadowRoot", "nodeStyle", "getLangAttribute", "fontSize", "props", "CascadeValue", "Numeric", "inheritanceVisitor", "InheritanceVisitor", "i", "propList", "propName", "isInherited", "processingOrderFn", "lineHeight", "prop", "prop1", "isDefaultingValue", "isCustomPropName", "sname", "polyfilledInheritedProps", "getPolyfilledInheritedProps", "n", "Int", "Ident", "numericVal", "defaultUnitSizes", "firstTime", "hooks", "getHooksForName", "formattingContext", "atUnforcedBreak", "_b", "_c", "_d", "needToProcessChildren", "offset", "NthFragmentMatcher", "inheritedValues", "positionCV", "floatCV", "floatReferenceCV", "floatReference", "floatReferenceOf", "isPageFloat", "flow", "allowScripts", "loadScript", "getName", "shadowParam", "floatSide", "clearSide", "writingMode", "parentWritingMode", "isFlowRoot", "establishesBFC", "establishesCBForAbsolute", "floating", "SpaceList", "listItem", "breakInside", "isInlineLevel", "isRubyInternalDisplay", "FloatReference", "floatMinWrapBlock", "insideNonRootMultiColumn", "columnSpan", "breakAfter", "forcedBreakValues", "breakBefore", "pageVal", "pageType", "isSpreadBreakValue", "borderCollapse", "borderSpacing", "inlineBorderSpacing", "blockBorderSpacing", "toNumber", "footnotePolicy", "firstPseudo", "outerPseudo", "FirstPseudo", "whitespace", "whitespaceValue", "whitespaceFromPropertyValue", "hyphenateCharacter", "Str", "wordBreak", "lineBreak", "overflowWrap", "custom", "inner", "fetchers", "ns", "tag", "PSEUDO_ATTR", "hp", "elemResult", "parentNode", "result", "imageResolution", "images", "cssWidth", "cssHeight", "attrWidth", "attrHeight", "hasAutoWidth", "hasAutoHeight", "attributes", "attributeCount", "delayedSrc", "delayedAlt", "attribute", "attributeNS", "attributeName", "attributeValue", "transformedValue", "anchorElem", "SPECIAL_ATTR", "image", "fetcher", "loadElement", "transformURIs", "attributePrefix", "err", "logger", "imageFetcher", "isInsideRunningElement", "p", "blockSize", "listStyleImage", "listStyleURL", "setBoxBreakFlag", "isCloneBoxDecorationBreak", "isAbsolutelyPositioned", "marginBreak", "breakType", "anyBreak", "unforcedBreak", "setMarginDiscardFlag", "blockSizeP", "getCSSProperty", "setCSSProperty", "waitForFetchers", "_e", "nc", "isForcedBreakValue", "parentViewNode", "paddingBlockStart", "borderBlockStartWidth", "isOutOfFlow", "startBreakType", "AfterIfContinues", "param", "img", "scaledWidth", "scaledHeight", "maxWidth", "maxHeight", "numericMaxWidth", "numericMaxHeight", "minWidth", "numericZero", "minHeight", "numericMinWidth", "numericMinHeight", "hook", "RepetitiveElementsOwnerFormattingContext", "parent", "parentFormattingContext", "repeatOnBreak", "offsetInNode", "textContent", "restoreNewText", "originl", "index", "processedText", "diffChars", "processChildren", "isPseudo", "getPseudoName", "getBoxBreakFlags", "pos", "boxOffset", "contentNode", "contentShadowType", "contentShadow", "nextSibling", "r", "NodeContext", "next", "shadowNode", "sr", "transclusionType", "proc", "bg", "CommaList", "values", "target", "isRelativePositioned", "propertiesNotPassedToDOM", "empty", "UrlTransformVisitor", "needUnitConversion", "convertNumericToPx", "delayedProps", "delayedPropsIfRelativePositioned", "DelayedItem", "defaultLineHeightNum", "parentStyle", "parentFontSize", "parentLineHeight", "lineHeightNum", "Num", "viewNode", "ancestorLH", "convertFontSizeToPx", "pseudoName", "ContentPropertyHandler", "nodeOffset", "after", "text", "arr", "pn", "shadowSibling", "childComputedStyle", "span", "nodeContext1", "isBeforeBlock", "nextElem", "blockNestCount", "extentBefore", "textAlign", "elem2", "setBoxBreakFlags", "paddingInlineEnd", "borderInlineEndWidth", "adjust", "checkForcedLineBreakElem", "elem1", "mediaTags", "lastChild", "found", "prevElem", "forcedBreakElem", "anonymousBlock", "nextNode", "numeric", "clientLayout", "num", "unit", "isFontRelativeLengthUnit", "convertFontRelativeLengthToPx", "unitSize", "step1", "step2", "nodePosition1", "nodePosition2", "ViewFactory", "needScaleRect", "DefaultClientLayout", "rect", "originRect", "viewportLeft", "viewportTop", "range", "rects", "layoutBoxRect", "precision", "Viewport", "window", "pixelRatio", "opt_root", "opt_width", "opt_height", "outerZoomBox", "contentContainer", "layoutBox", "fallbackPageSize", "isHeadlessBrowser", "width", "height", "scale", "XMLDocHolder", "store", "url", "document", "__publicField", "body", "head", "child", "elem", "ELEMENT_OFFSET_ATTR", "NodeList", "element", "offsetStr", "offset", "last", "next", "srcNode", "offsetInNode", "after", "extraOffset", "node", "prev", "elementOffset", "children", "index", "binarySearch", "nodeOffset", "lastGood", "e", "id", "xmlid", "c", "m", "r", "DOMParserSupportedType", "parseAndReturnNullIfError", "str", "type", "opt_parser", "parser", "doc", "docElement", "errorTagName", "resolveContentType", "response", "contentType", "supportedKeys", "i", "match", "parseXMLResource", "text", "root", "xmldoc", "newResult", "newXMLDocStore", "ResourceStore", "Predicate", "_Predicate", "fn", "name", "value", "opt_childPredicate", "list", "predicate", "_NodeList", "nodes", "pr", "arr", "add", "n", "t", "tag", "uaStylesheetBaseFetcher", "Fetcher", "frame", "newFrame", "validatorSet", "baseValidatorSet", "url", "resolveURL", "resourceBaseURL", "handler", "CascadeParserHandler", "setUABaseCascade", "parseStylesheetFromText", "UserAgentBaseCss", "loadUABase", "Style", "store", "rootScope", "pageScope", "cascade", "rootBox", "fontFaces", "footnoteProps", "flowProps", "viewportProps", "pageProps", "__publicField", "name", "styleInstance", "cp", "flowChunk", "Native", "viewportWidth", "viewportHeight", "fontSize", "pref", "context", "Context", "mergeAll", "width", "height", "textZoom", "scaleFactor", "defaultFontSize", "defaultUnitSizes", "ident", "widthVal", "toNumber", "heightVal", "StyleInstance", "style", "xmldoc", "defaultLang", "viewport", "clientLayout", "fontMapper", "customRenderer", "fallbackMap", "pageNumberOffset", "documentURLTransformer", "counterStore", "pageProgression", "isVersoFirstPage", "DocumentFaces", "PageFloatLayoutContext", "flowName", "flowStyle", "consume", "getProp", "counterListener", "counterResolver", "Styler", "docElementStyle", "resolvePageProgression", "RootPageBoxInstance", "cascadeInstance", "PageManager", "srcFaces", "fontFace", "properties", "prepareProperties", "srcFace", "Face", "loadScriptsInHead", "selector", "pageStyle", "pageSizeAndBleed", "evaluatePageSizeAndBleed", "resolvePageSizeAndBleed", "side", "isRectoStart", "isLTR", "styler", "key", "instance", "flow", "flowPosition", "FlowPosition", "nodePosition", "newNodePositionFromNode", "chunkPosition", "ChunkPosition", "flowChunkPosition", "FlowChunkPosition", "value", "isFunc", "supported", "SupportsReceiver", "important", "supportsReceiver", "val", "parseValue", "Tokenizer", "selectorText", "sph", "StyleParserHandler", "tokenizer", "Parser", "actionsBase", "offset", "i", "pos", "node", "offsetInNode", "after", "k", "chunkOffset", "layoutPosition", "noLookAhead", "currentPosition", "consumedOffset", "position", "logger", "p", "Named", "flowPos", "flowChunkBreakBefore", "flowBreakAfter", "breakValueToStartBreakType", "resolveEffectiveBreakValue", "cascadedPageStyle", "pageMasters", "pageMaster", "pageRuleMasterPseudoName", "coeff", "userAgentPageMasterPseudo", "utilization", "em", "pageArea", "lookup", "savedPageType", "enabled", "size", "flows", "parentFlowName", "startOffset", "forcedBreakOffsets", "breakOffsetBeforeStartIndex", "binarySearch", "breakOffsetBeforeStart", "parentFlowPosition", "parentStartOffset", "column", "BlockFormattingContext", "pageFloatLayoutContext", "deferredFloats", "checkPageFloatForLaterPage", "float", "FloatReference", "pageStartPos", "pageStartOffset", "deferredFloatOffset", "invalidated", "loopFrame", "continuation", "strategy", "PageFloatLayoutStrategyResolver", "pageFloatFragment", "success", "parentInvalidated", "newPosition", "result", "newResult", "repeatedIndices", "removedIndices", "leadingEdge", "index", "selected", "alt", "pending", "endOfColumn", "lastAfterPosition", "edge", "pageIndex", "counterConstraint", "AllLayoutConstraint", "boxInstance", "offsetX", "offsetY", "exclusions", "layoutContainer", "currentColumnIndex", "flowNameStr", "regionPageFloatLayoutContext", "columnCount", "columnGap", "columnWidth", "innerShape", "layoutContext", "forceNonFitting", "dontApplyExclusions", "boxContainer", "columnPageFloatLayoutContext", "positionAtColumnStart", "layoutConstraint", "columnContainer", "setCSSProperty", "Column", "columnY", "outerWidth", "columnX", "pagePageFloatLayoutContext", "PageRulePartitionInstance", "PageMasterInstance", "PageRuleMasterInstance", "PartitionInstance", "writingMode", "direction", "page", "positionAtContainerStart", "isFirstTime", "layoutColumns", "columns", "generatorResult", "columnFill", "columnBalancer", "createColumnBalancer", "regionIds", "innerShapeVal", "toShape", "ViewFactory", "columnIndex", "c", "parentContainer", "dontExclude", "forwardOrderInLayout", "Container", "cont", "removed", "contentVal", "Expr", "ContentPropertyHandler", "nonTrivialContent", "innerContainerTag", "innerContainer", "processGeneratedContent", "innerFrame", "outerShapeProp", "outerShape", "child", "r", "pageNumber", "_a", "isTocBox", "LayoutPosition", "LIMIT_PAGES", "startSide", "isSpreadBreakValue", "bleedBoxPaddingEdge", "fullWidth", "fullHeight", "evaluatedPageSizeAndBleed", "addPrinterMarks", "isLeftPage", "breakAfter", "triggers", "BaseParserHandler", "_BaseParserHandler", "masterHandler", "condition", "parent", "regionId", "pseudoName", "classes", "PageMaster", "PageMasterParserHandler", "expr", "and", "DefineParserHandler", "PropSetParserHandler", "pseudoelem", "pseudos", "getMutableStyleMap", "pageHandler", "PageParserHandler", "getName", "regionHandler", "DispatchParserHandler", "LexicalScope", "RootPageBox", "parseOPSResource", "response", "OPSDocStore", "ResourceStore", "fontDeobfuscator", "authorStyleSheets", "userStyleSheets", "stylesheet", "convertSpecialURL", "baseURL", "parseXMLResource", "hooks", "getHooksForName", "e", "triggerList", "triggerElem", "observer", "event", "action", "ref", "sources", "UserAgentPageCss", "UserAgentTocCss", "elemList", "elem", "ns", "localName", "media", "title", "href", "rel", "src", "fetcher", "source", "parseStylesheetFromURL", "meta", "bulletClosed", "bulletOpen", "bulletEmpty", "findTocElements", "doc", "tocElems", "navs", "elem", "e", "tocElem", "findTocAnchorElements", "anchors", "anchor", "TOCView", "store", "url", "lang", "clientLayout", "fontMapper", "pref", "rendererFactory", "fallbackMap", "documentURLTransformer", "counterStore", "__publicField", "clonePreferences", "depth", "c", "getCSSProperty", "setCSSProperty", "xmldoc", "renderer", "srcElem", "viewParent", "computedStyle", "behavior", "ident", "numericZero", "Numeric", "firstChild", "canIgnore", "adaptParentClass", "button", "toggleNodeExpansion", "element", "anchorElem", "newResult", "viewport", "width", "height", "fontSize", "frame", "newFrame", "page", "Page", "tocBoxUrl", "stripFragment", "style", "viewportSize", "Viewport", "customRenderer", "instance", "StyleInstance", "exportTree", "tag", "links", "exportLink", "id", "title", "container", "children", "topLevelTree", "evt", "open", "tocNodeElem", "ce", "adaptClass", "elem1", "EPUBDocStore", "OPSDocStore", "__publicField", "newXMLDocStore", "newJSONStore", "url", "opt_required", "opt_message", "frame", "newFrame", "fetchFromURL", "response", "opf", "logger", "pubURL", "root", "manifestObj", "OPFDoc", "containerURL", "containerXML", "roots", "newResult", "opfXML", "encXML", "xmldoc", "doc", "manifestLink", "href", "stringToJSON", "manifestUrl", "resolveURL", "findTocElements", "docURL", "stripFragment", "removePath", "likelyCorsProblem", "domain", "baseURL", "r", "meta", "content", "vals", "width", "height", "prePaginated", "OPFItem", "emptyObj", "itemElem", "opfURL", "propStr", "arrayToSet", "param", "getOPFItemId", "item", "makeDeobfuscator", "uid", "blob", "makeDigest", "hash", "head", "tail", "readBlob", "buf", "dataView", "k", "b", "makeBlob", "algorithm", "str", "continuation", "predefinedPrefixes", "defaultIRI", "metaTerms", "getMetadataComparator", "term", "lang", "empty", "item1", "item2", "_a", "_b", "_c", "_d", "_e", "_f", "m1", "m2", "r1", "r2", "i1", "i2", "readMetadata", "mroot", "prefixes", "prefixMap", "pn", "resolveProperty", "val", "iri", "order", "rawItems", "node", "p", "rawItemsByTarget", "multiIndexArray", "rawItem", "makeMetadata", "map", "mapObj", "rawItemArr", "_itemName", "entry", "refs", "entryMap", "metadata", "sortMetadata", "arr", "i", "getMathJaxHub", "math", "supportedMediaTypes", "transformedIdPrefix", "store", "self", "OPFDocumentURLTransformer", "fragment", "escapeNameStrToHex", "path", "encoded", "unescapeStrFromHex", "epubBaseURL", "pkg", "uidref", "uidElem", "srcToFallbackId", "elem", "fallback", "indexArray", "src", "fallbackSrc", "index", "id", "pageProgressionAttr", "pageProgressionOf", "idpfObfURLs", "predicate", "mediaTypeElems", "handlerId", "mediaType", "deobfuscator", "epage", "epageCount", "epageIsRenderedPage", "epageCountCallback", "loopFrame", "offsetPerEPage", "params", "XMLDocHolder", "itemref", "title", "author", "language", "primaryEntryPath", "anchorElem", "findTocAnchorElements", "hrefNoFragment", "itemCount", "tocFound", "readingOrderOrResources", "itemObj", "isInReadingOrder", "encodingFormat", "baseUrl", "convertSpecialURL", "readingOrderCount", "spineIndex", "offsetInItem", "cfi", "startOffset", "offsetInNode", "Fragment", "fragstr", "handle", "opfNav", "idref", "nodeNav", "offset", "err", "pageIndex", "binarySearch", "totalOffset", "position", "makePageAndPosition", "page", "OPFView", "viewport", "fontMapper", "pref", "pageSheetSizeReporter", "clonePreferences", "DefaultClientLayout", "CounterStore", "viewItem", "oldPage", "prevItem", "count", "insertPos", "pos", "posParam", "cont", "prevPos", "unresolvedRefs", "ref", "currentPageType", "previousPageType", "scopes", "result", "resultPosition", "seekOffset", "seekOffsetPageIndex", "sync", "resultPage", "normalizedPosition", "fetcher", "notAllPages", "s", "lastResult", "nextViewItem", "nextPage", "currentPage", "isLeft", "isLTR", "other", "otherPageAndPosition", "thisPage", "otherPage", "isRecto", "next", "next2", "result2", "prev", "oldPrevPageCont", "restored", "fragmentIndex", "target", "pageCont", "isDebug", "bleedBox", "Page", "matrix", "letterbox", "cssMatrix", "parseValue", "Tokenizer", "DelayedItem", "srcElem", "viewParent", "computedStyle", "data", "handlerSrc", "srcParam", "lightURLEncode", "typeParam", "sb", "StringBuffer", "c", "ce", "pname", "pvalue", "hub", "span", "clonedMath", "queue", "attrs", "attr", "newUrl", "loadingContinuations", "epubSpineProperties", "style", "customRenderer", "viewportSize", "Viewport", "isVersoFirstPage", "previousViewItem", "pageNumberOffset", "pageCounterOffset", "counters", "instance", "StyleInstance", "pubTitles", "items", "pages", "autohide", "toc", "TOCView", "tocWidth", "tocHeight", "VIEWPORT_STATUS_ATTRIBUTE", "VIEWPORT_SPREAD_VIEW_ATTRIBUTE", "PageViewMode", "AdaptiveViewer", "window", "viewportElement", "instanceId", "callbackFn", "__publicField", "document", "findOrCreateStyleElement", "id", "cssText", "styleElement", "VivliostyleViewportScreenCss", "VivliostyleViewportCss", "VivliostylePolyfillCss", "isDebug", "Mapper", "evt", "defaultPreferences", "logLevel", "LogLevel", "logger", "info", "message", "readyState", "command", "profiler", "url", "fragment", "authorStyleSheet", "userStyleSheet", "frame", "newFrame", "store", "EPUBDocStore", "pubURL", "resolveURL", "convertSpecialURL", "opf", "params", "doc", "resolvedParams", "p", "index", "OPFDoc", "cont", "position", "newResult", "specified", "value", "unitPattern", "matched", "unit", "defaultUnitSizes", "unitSize", "fontSize", "vp", "viewportSize", "setBaseURL", "setResourceBaseURL", "baseURL", "allowScripts", "setAllowScripts", "pixelRatio", "getHooksForName", "hook", "result", "currentPage", "spread", "target", "fn", "pages", "page", "setCSSProperty", "leftWidth", "rightWidth", "cfi", "waitForFetchers", "vs", "Viewport", "viewport", "pageSize", "spreadView", "_a", "hasNoAutoSizedPages", "spreadViewChanged", "pageSheetSize", "spineIndex", "pageIndex", "_b", "convertSize", "px", "pt", "widthMax", "heightMax", "widthPt", "heightPt", "rightPt", "bottomPt", "styleText", "tocVisible", "tocAutohide", "OPFView", "sync", "zoom", "dim", "pageDimension", "width", "height", "type", "pageDim", "widthZoom", "heightZoom", "RenderingCanceledError", "resizeTask", "currentTask", "handle", "epageCount", "notification", "hasScripts", "loadScriptsAtEnd", "err", "epage", "method", "m", "innerFrame", "res", "autohide", "visibility", "currentVisibility", "changeAutohide", "hideTOC", "actionName", "action", "cmd", "maybeParse", "continuation", "viewer", "start", "scheduler", "hrefEvent", "internal", "msg", "loopFrame", "frameInternal", "ZoomType", "_RenderingCanceledError", "stringToJSON", "PageProgression", "getDefaultViewerOptions", "convertViewerOptions", "options", "converted", "key", "v", "CoreViewer", "settings", "opt_options", "__publicField", "setDebug", "AdaptiveViewer", "SimpleEventTarget", "command", "msg", "event", "o", "type", "listener", "singleDocumentOptions", "opt_documentOptions", "opt_viewerOptions", "pubUrl", "documentOptions", "convertStyleSheetArray", "arr", "s", "authorStyleSheet", "userStyleSheet", "convertSingleDocumentOptions", "nav", "opt_epage", "url", "position", "_a", "_b", "opt_show", "opt_autohide", "visibility", "toNumberOrNull", "num", "convert", "opt", "Navigation", "ZoomType", "PageViewMode", "profiler", "VivliostylePrint", "htmlDoc", "title", "printCallback", "iframeWin", "errorCallback", "hideIframe", "removeIframe", "__publicField", "docBlob", "docURL", "Viewer", "CoreViewer", "resolve", "payload", "_a", "_b", "message", "printHTML", "config"]
}
